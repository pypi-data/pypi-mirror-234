Metadata-Version: 2.1
Name: gtfs-marey
Version: 0.1.1
Summary: Generate a Marey Chart for the given GTFS route
Home-page: https://github.com/MobilityStuff/gtfs-marey
License: MIT
Keywords: gtfs,marey,chart
Author: alegotta
Author-email: alegotta@github.com
Requires-Python: >=3.11,<4.0
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.11
Requires-Dist: filetype (>=1.2.0,<2.0.0)
Requires-Dist: kaleido (==0.2.1)
Requires-Dist: partridge (>=1.1.1,<2.0.0)
Requires-Dist: plotly (>=5.17.0,<6.0.0)
Requires-Dist: pyrfc6266 (>=1.0.2,<2.0.0)
Requires-Dist: requests (>=2.31.0,<3.0.0)
Project-URL: Repository, https://github.com/MobilityStuff/gtfs-marey
Description-Content-Type: text/markdown

# gtfs-marey

Generate a Marey Chart for the given GTFS route, inspired by [this explanation](http://www.stagniweb.it/cadenz01.htm) (in italian). Beware that the program is not bullet proof and was developed just out of curiosity.

## Install

`pip install gtfs-marey`

## Usage

```
usage: gtfs-marey [-h] --feed FEED --route_names ROUTE_NAMES [ROUTE_NAMES ...] --outputs
                  {html,svg,png} [{html,svg,png} ...] --days DAYS [DAYS ...] [--verbose]

Generate a Marey Chart for the given GTFS route

options:
  -h, --help            show this help message and exit
  --feed FEED           feed path or url
  --route_names ROUTE_NAMES [ROUTE_NAMES ...]
                        route name referencing 'route_short_name' value in GTFS
  --outputs {html,svg,png} [{html,svg,png} ...]
                        output type
  --days DAYS [DAYS ...]
                        day of the week to consider in the chart creation
  --verbose             Turn on verbose mode
```

## Example

`gtfs-marey --feed https://www.trentinotrasporti.it/opendata/google_transit_extraurbano_tte.zip --route_names R35 --output html,png --day monday`

![](docs/example/google_transit_extraurbano_tte-R35-monday.png)

## Things to improve

- Better handling of the calendar schedule
- Position stops based on their distance
- Size of the generated picture
- More meaningful color schema

## Similar tools

[`gtfs-to-chart`](https://github.com/BlinkTagInc/gtfs-to-chart) has a similar scope and is much more production-ready. The major difference is that our tool  shows stops on the opposite axis, and also allows to directly generate a picture out of the elaboration. 
