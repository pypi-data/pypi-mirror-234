# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/bytetype',
                'doc_host': 'https://dsm-72.github.io',
                'git_url': 'https://github.com/dsm-72/bytetype',
                'lib_path': 'bytetype'},
  'syms': { 'bytetype.bytes': { 'bytetype.bytes.Bytes': ('bytes copy.html#bytes', 'bytetype/bytes.py'),
                                'bytetype.bytes.Bytes.__add__': ('bytes copy.html#bytes.__add__', 'bytetype/bytes.py'),
                                'bytetype.bytes.Bytes.__eq__': ('bytes copy.html#bytes.__eq__', 'bytetype/bytes.py'),
                                'bytetype.bytes.Bytes.__ge__': ('bytes copy.html#bytes.__ge__', 'bytetype/bytes.py'),
                                'bytetype.bytes.Bytes.__gt__': ('bytes copy.html#bytes.__gt__', 'bytetype/bytes.py'),
                                'bytetype.bytes.Bytes.__le__': ('bytes copy.html#bytes.__le__', 'bytetype/bytes.py'),
                                'bytetype.bytes.Bytes.__lt__': ('bytes copy.html#bytes.__lt__', 'bytetype/bytes.py'),
                                'bytetype.bytes.Bytes.__mul__': ('bytes copy.html#bytes.__mul__', 'bytetype/bytes.py'),
                                'bytetype.bytes.Bytes.__ne__': ('bytes copy.html#bytes.__ne__', 'bytetype/bytes.py'),
                                'bytetype.bytes.Bytes.__repr__': ('bytes copy.html#bytes.__repr__', 'bytetype/bytes.py'),
                                'bytetype.bytes.Bytes.__sub__': ('bytes copy.html#bytes.__sub__', 'bytetype/bytes.py'),
                                'bytetype.bytes.Bytes.__truediv__': ('bytes copy.html#bytes.__truediv__', 'bytetype/bytes.py'),
                                'bytetype.bytes.Bytes.from_dir': ('bytes copy.html#bytes.from_dir', 'bytetype/bytes.py'),
                                'bytetype.bytes.Bytes.from_file': ('bytes copy.html#bytes.from_file', 'bytetype/bytes.py'),
                                'bytetype.bytes.Bytes.to': ('bytes copy.html#bytes.to', 'bytetype/bytes.py'),
                                'bytetype.bytes.Bytes.to_bytes': ('bytes copy.html#bytes.to_bytes', 'bytetype/bytes.py')},
            'bytetype.enums': { 'bytetype.enums.ByteUnit': ('enums.html#byteunit', 'bytetype/enums.py'),
                                'bytetype.enums.ByteUnit.format': ('enums.html#byteunit.format', 'bytetype/enums.py'),
                                'bytetype.enums.ByteUnit.getexp': ('enums.html#byteunit.getexp', 'bytetype/enums.py'),
                                'bytetype.enums.ByteUnit.getidx': ('enums.html#byteunit.getidx', 'bytetype/enums.py'),
                                'bytetype.enums.ByteUnit.getnum': ('enums.html#byteunit.getnum', 'bytetype/enums.py'),
                                'bytetype.enums.ByteUnit.getsuf': ('enums.html#byteunit.getsuf', 'bytetype/enums.py'),
                                'bytetype.enums.ByteUnit.units': ('enums.html#byteunit.units', 'bytetype/enums.py')},
            'bytetype.units': {},
            'bytetype.utils': { 'bytetype.utils.format': ('utils.html#format', 'bytetype/utils.py'),
                                'bytetype.utils.getexp': ('utils.html#getexp', 'bytetype/utils.py'),
                                'bytetype.utils.getidx': ('utils.html#getidx', 'bytetype/utils.py'),
                                'bytetype.utils.getnum': ('utils.html#getnum', 'bytetype/utils.py'),
                                'bytetype.utils.getsuf': ('utils.html#getsuf', 'bytetype/utils.py')}}}
