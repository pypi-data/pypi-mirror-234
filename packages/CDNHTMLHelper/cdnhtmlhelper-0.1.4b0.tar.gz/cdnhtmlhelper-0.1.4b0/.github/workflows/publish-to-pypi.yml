name: Build and Test and Publish to PyPI
on: push

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.x
        uses: actions/setup-python@v3
        with:
          python-version: "3.x"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install hatch
      - name: automatically pre-release without tag branch
        if: startsWith(github.ref, 'refs/tags/') == false
        run: |
          git config --global user.email "autobump@dbautz.com"
          git config --global user.name "autobump"
          VERSION=`hatch version`
          # if current version is not already beta then bump minor and beta
          [ -z "${b##*`hatch version`*}" ] && hatch version b || hatch version minor,b
          NEW_VERSION=`hatch version`
          git add CDNHTMLHelper/__about__.py
          git commit -m "Bump version: $VERSION â†’ $NEW_VERSION"
          git push
      - name: automatically release with tag branch
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          git config --global user.email "autobump@dbautz.com"
          git config --global user.name "autobump"
          VERSION=`hatch version`
          hatch version minor
          NEW_VERSION=`hatch version`
          git add CDNHTMLHelper/__about__.py
          git commit -m "Bump version: $VERSION â†’ $NEW_VERSION"
          git push
      - name: Build
        run: |
          hatch build
      - name: Store the distribution packages
        uses: actions/upload-artifact@v3
        with:
          name: python-package-distributions
          path: dist/
  publish-to-pypi:
    name: Publish to PyPI
    if: startsWith(github.ref, 'refs/tags/') # only publish to PyPI on tag pushes
    needs:
      - build-and-test
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/CDNHTMLHelper
    permissions:
      id-token: write # IMPORTANT: mandatory for trusted publishing
    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v3
        with:
          name: python-package-distributions
          path: dist/
      - name: Publish distribution ðŸ“¦ to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
  publish-to-pypi-test:
    name: Publish to PyPI Test
    needs:
      - build-and-test
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://test.pypi.org/p/CDNHTMLHelper
    permissions:
      id-token: write # IMPORTANT: mandatory for trusted publishing
    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v3
        with:
          name: python-package-distributions
          path: dist/
      - name: Publish distribution ðŸ“¦ to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
