[metadata]
name = maykin-json-logic-py
version = 0.13.0
description = Build complex rules, serialize them as JSON, and execute them in Python
long_description = file: README.rst
url = https://github.com/maykinmedia/json-logic-py
license = MIT
author = nadir.izr,maykin
author_email = nadir@soundmindtech.com,support@maykinmedia.nl
keywords = jsonLogic
classifiers = 
	Development Status :: 3 - Alpha
	Intended Audience :: Developers
	Operating System :: Unix
	Operating System :: MacOS
	Operating System :: Microsoft :: Windows
	Programming Language :: Python :: 3.10
	Programming Language :: Python :: 3.11
	Topic :: Software Development :: Libraries :: Python Modules

[options]
zip_safe = False
include_package_data = True
packages = find:
install_requires = 
	isodate
tests_require = 
	tox
	pytest-cov
	freezegun
	isort
	black
	flake8
	coverage

[options.extras_require]
tests = 
	tox
	pytest-cov
	freezegun
	isort
	black
	flake8
	coverage
pep8 = flake8
coverage = coverage
release = 
	bumpversion
	twine

[options.packages.find]
exclude = 
	tests
	tests.*

[aliases]
test = pytest

[isort]
combine_as_imports = true
default_section = THIRDPARTY
include_trailing_comma = true
line_length = 88
multi_line_output = 3
skip = env,.tox,.history,.eggs
known_first_party = json_logic

[tool:pytest]
testpaths = tests/
markers = 
	unsupported_operators: specify unsupported operator names for the shared tests
	unsupported_logic: specify unsupported logic expressions for the shared tests

[pep8]

[flake8]
max-line-length = 119
exclude = env,.tox
ignore = E203

[coverage:run]
source = 
	json_logic
branch = True

[coverage:report]
exclude_lines = 
	no cov
	no qa
	noqa
	pragma: no cover
	if __name__ == .__main__.:

[coverage:xml]
output = coverage.xml

[egg_info]
tag_build = 
tag_date = 0

