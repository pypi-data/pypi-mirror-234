# Generated by ariadne-codegen on 2023-09-18 11:53
# Source: ./src/binaryai/query.graphql

from typing import List, Literal, Union

from pydantic import Field

from .base_model import BaseModel


class CheckOrUpload(BaseModel):
    create_upload_ticket: Union[
        "CheckOrUploadCreateUploadTicketFile",
        "CheckOrUploadCreateUploadTicketOwnershipTicket",
        "CheckOrUploadCreateUploadTicketUploadTicket",
    ] = Field(alias="createUploadTicket", discriminator="typename__")


class CheckOrUploadCreateUploadTicketFile(BaseModel):
    typename__: Literal["File"] = Field(alias="__typename")
    sha256: str


class CheckOrUploadCreateUploadTicketOwnershipTicket(BaseModel):
    typename__: Literal["OwnershipTicket"] = Field(alias="__typename")
    ticket_i_d: str = Field(alias="ticketID")
    secret_prepend: str = Field(alias="secretPrepend")
    secret_append: str = Field(alias="secretAppend")


class CheckOrUploadCreateUploadTicketUploadTicket(BaseModel):
    typename__: Literal["UploadTicket"] = Field(alias="__typename")
    ticket_i_d: str = Field(alias="ticketID")
    url: str
    request_headers: List["CheckOrUploadCreateUploadTicketUploadTicketRequestHeaders"] = Field(alias="requestHeaders")


class CheckOrUploadCreateUploadTicketUploadTicketRequestHeaders(BaseModel):
    key: str
    value: str


CheckOrUpload.model_rebuild()
CheckOrUploadCreateUploadTicketFile.model_rebuild()
CheckOrUploadCreateUploadTicketOwnershipTicket.model_rebuild()
CheckOrUploadCreateUploadTicketUploadTicket.model_rebuild()
CheckOrUploadCreateUploadTicketUploadTicketRequestHeaders.model_rebuild()
