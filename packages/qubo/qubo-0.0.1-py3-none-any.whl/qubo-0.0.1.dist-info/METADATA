Metadata-Version: 2.1
Name: qubo
Version: 0.0.1
Summary: Formulation of QUBO problems.
Home-page: https://github.com/bqth29/qubo
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: Microsoft :: Windows
Classifier: Operating System :: Unix
Classifier: Operating System :: MacOS
Classifier: Topic :: Scientific/Engineering
Classifier: Intended Audience :: Science/Research
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: numpy
Provides-Extra: all
Requires-Dist: black ; extra == 'all'
Requires-Dist: flake8 ; extra == 'all'
Requires-Dist: isort ; extra == 'all'
Requires-Dist: coverage ; extra == 'all'
Requires-Dist: pytest ; extra == 'all'
Provides-Extra: dev
Requires-Dist: black ; extra == 'dev'
Requires-Dist: flake8 ; extra == 'dev'
Requires-Dist: isort ; extra == 'dev'
Requires-Dist: coverage ; extra == 'dev'
Requires-Dist: pytest ; extra == 'dev'
Provides-Extra: lint
Requires-Dist: black ; extra == 'lint'
Requires-Dist: flake8 ; extra == 'lint'
Requires-Dist: isort ; extra == 'lint'
Provides-Extra: test
Requires-Dist: coverage ; extra == 'test'
Requires-Dist: pytest ; extra == 'test'

# QUBO

A Quadratic Unconstrained Binary Optimization (QUBO) problem is an NP-hard problem which aims at minimizing 
$$x^T Q x = \sum_{i \leq j} Q_{ij}x_{i}x{j}$$
where $Q$ is an upper triangular matrix and $x_1$, ..., $x_N$ are binary variables.

A wide range of optimization problems can be formulated as QUBO models.
