Metadata-Version: 2.1
Name: daedalus-5g
Version: 0.11.7
Summary: A tool for creating 4G/5G environments both with SDRs and virtual simulation to run experiments in
Author-email: cglewis <clewis@iqt.org>
Classifier: Development Status :: 2 - Pre-Alpha
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Programming Language :: Python
Requires-Python: >=3.8
Description-Content-Type: text/markdown
Requires-Dist: docker ==6.1.3
Requires-Dist: dovesnap ==1.1.16
Requires-Dist: plumbum ==1.8.2
Requires-Dist: inquirer ==3.1.3
Provides-Extra: confuser
Requires-Dist: fusepy ; extra == 'confuser'
Provides-Extra: generate_fs
Requires-Dist: essential-generators ; extra == 'generate_fs'
Requires-Dist: numpy ; extra == 'generate_fs'
Provides-Extra: test
Requires-Dist: attrs ==23.1.0 ; extra == 'test'
Requires-Dist: codecov ==2.1.13 ; extra == 'test'
Requires-Dist: pylint ==3.0.1 ; extra == 'test'
Requires-Dist: pytype ==2023.10.5 ; extra == 'test'
Requires-Dist: pytest ==7.4.2 ; extra == 'test'
Requires-Dist: pytest-cov ==4.1.0 ; extra == 'test'
Requires-Dist: ruamel.yaml ~=0.17 ; extra == 'test'

# Blue Team
The following directory has a series of tools that are used for defending and building out environments for running scenarios in.

# 4G/5G Environment Creation Tool

## Dependencies
- Linux with a recent kernel
- Docker
- python3 and pip3
- uhd-host (`sudo apt-get install -y uhd-host`)

## Installation
The main tool in this directory is called `daedalus` and can be installed with easily with pip:

```
pip3 install daedalus-5g
```

or locally:

```
git clone https://github.com/IQTLabs/Daedalus
cd Daedalus/blue
sudo python3 setup.py install
```

Once installed, you can simply execute `daedalus` and you will be prompted for the 4G/5G environments you'd like it to create.

** Note **
```
AMD64 CPUs must support SSE4.1, AVX, AVX2, and FMA. If you don't have those, you can alternatively try starting daedalus with -b which will build the images locally and might work.

ARM64 CPUs don't have those requirements, but you will need g++ when pip installing for grpc.
```
