Metadata-Version: 2.1
Name: ninjaconnect
Version: 2.0.6
Summary: The NINJA CONNECT is a Command-Line Interface (CLI) tool designed to simplify the configuration and management your device to our labs
Home-page: https://pypi.org/project/ATENIGMA/
Author: Prasaanth
Author-email: prasaanth2k@gmail.com
Maintainer: Prasaanth
Description-Content-Type: text/markdown
Requires-Dist: keyring (==23.5.0)
Requires-Dist: Requests (==2.31.0)
Requires-Dist: rich (==13.6.0)

# NINJA CONNECT

## Our Academy VPN for linux

The **NINJA CONNECT** is a Command-Line Interface (CLI) tool designed to simplify the configuration and management your device to our labs
and also you can simpley add your device and connect via `ssh ` our labs with this vpn it basicly worked on top of the wireguard
![InforBanner](../images/banner.jpg)
## Features

- **Open and Close VPN Connection**: You can easily open and close a WireGuard VPN connection using this tool.

- **Status Checking**: Check the status of your WireGuard VPN to ensure it's working as expected.

- **Configuration**: Configure WireGuard settings as needed.

- **Information Display**: Obtain useful information about your WireGuard setup.

## Usage
![helpcommand](../images/help.jpg)
### Installation

Before you can use the **SNA-CLI-VPN**, you need to make sure you have Python3 installed on your system. Additionally, you should install the required Python packages by running the following command:

```
pip install -r requirements.txt
```


### Command-Line Arguments

The CLI accepts the following command-line arguments:

``--action`` : Specifies the action you want to perform. Available actions are as follows:

`configure` : Configure WireGuard\
`logingit` : Authenticate with gitlabs\
`logout` : Logout from gitlabs\
`adddevice` : Adddevice to our labs\
`addip` : Add the ip to config\
`connect` : Connect to the VPN.\
`disconnect` : Disconnect from the VPN.\
`myprivatekey` : Retrieve the private key.\
`mypublickey`: Retrieve the public key.\
`showinfo`: Display information about the tool .

### Examples

Here are some example of how to use NINJA CONNECT\
⚠️ `Note : Some commands are want to run with sudo with out it wont work`\
`So read the Documectation Carefully`
## Configure the vpn

```
sudo ./ninja --action configure
```
![configuare](../images/configure.jpg)
## Login to our labs
```
./ninja --action logingit
```
![logingit](../images/logingit.jpg)
`NOTE : without login you can able to connect your device labs once you logged in you can able to access the labs `
## Add your device to our labs
```
./ninja --action adddevice
```
![adddevice](../images/adddevice.jpg)
## Add the ip to the Conf
```
sudo ./ninja --action addip
```
![addip](../images/addip.jpg)
## Connect to Labs :
```
sudo ./ninja --action connect
```

![connet](../images/connect.jpg)
## Check the VPN status :

```
sudo ./ninja --action getstatus
```
`* Need to implement`
## Retrive the privatekey :
This Command is basicly to connect your mobile to out you just copy this Private key and Paste it in our labs 
Now You will Get the Qr Code and like below the image
![qrcodeimage](../images/qrcode.png)
scan this by using the wireguard app and after that now you can able to easily connect your mobile to 
our labs 
```
sudo ./ninja --action myprivatekey
```
![privatekeyimg](../images/getprivatekey.jpg)
## Retrive the publickey :
```
sudo ./ninja --action mypublickey
```
![publickeyimg](../images/publickey.jpg)



## After work you can Logout
```
./ninja --action logoutgit
```
![logoutimg](/images/logoutgit.jpg)
## Licence
[![MIT License](https://img.shields.io/badge/License-MIT-green.svg)](https://choosealicense.com/licenses/mit/)

This tool is distributed under the MIT License. You can find the license details in the LICENSE file.

## Support
If you encounter any issues or have questions about using the SNA-CLI-VPN, please feel free to open an issue in the project's GitHub repository or contact our support team at @selfmadeninjasupport
