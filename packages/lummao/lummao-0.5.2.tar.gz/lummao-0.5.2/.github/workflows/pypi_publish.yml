name: PyPi Release

# https://help.github.com/en/actions/reference/events-that-trigger-workflows
on:
  # Only trigger on release creation
  release:
    types:
      - created
  workflow_dispatch:


# based on https://github.com/pypa/gh-action-pypi-publish

jobs:
  build:
    strategy:
      matrix:
        os: ["ubuntu-20.04", "macos-11", "windows-2022"]
    runs-on: ${{ matrix.os }}

    steps:
    - run: git config --global core.autocrlf false
    - uses: actions/checkout@v2
    - name: Get history and tags for SCM versioning to work
      run: |
        git fetch --prune --unshallow
        git fetch --depth=1 origin +refs/tags/*:refs/tags/*

    - uses: actions/setup-python@v2
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel 'autobuild<4' setuptools_scm

    - name: Build
      run: |
        python setup.py sdist bdist_wheel

    - name: Repair Wheels
      if: ${{ runner.os == 'Linux' }}
      run: |
        pip install "auditwheel==5.1.2"
        auditwheel repair --plat manylinux_2_24_x86_64 dist/*.whl
        rm -rf dist/*.whl
        mv wheelhouse/* dist/

    - uses: actions/upload-artifact@v3
      with:
        path: |
          dist/*.tar.gz
          dist/*.whl

  publish:
    needs: "build"
    runs-on: "ubuntu-20.04"
    steps:
    - uses: actions/download-artifact@v3
      with:
        name: artifact
        path: dist
#    # We do this, since failures on test.pypi aren't that bad
#    - name: Publish to Test PyPI
#      if: startsWith(github.event.ref, 'refs/tags') || github.event_name == 'release'
#      uses: pypa/gh-action-pypi-publish@release/v1
#      with:
#        user: __token__
#        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
#        repository_url: https://test.pypi.org/legacy/

    - name: Publish to PyPI
      if: startsWith(github.event.ref, 'refs/tags') || github.event_name == 'release'
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
