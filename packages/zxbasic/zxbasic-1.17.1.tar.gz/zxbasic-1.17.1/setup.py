# -*- coding: utf-8 -*-
from setuptools import setup

packages = \
['src',
 'src.api',
 'src.api.symboltable',
 'src.arch',
 'src.arch.interface',
 'src.arch.z80',
 'src.arch.z80.backend',
 'src.arch.z80.backend.runtime',
 'src.arch.z80.optimizer',
 'src.arch.z80.peephole',
 'src.arch.z80.visitor',
 'src.arch.zx48k',
 'src.arch.zx48k.backend',
 'src.arch.zxnext',
 'src.arch.zxnext.backend',
 'src.arch.zxnext.optimizer',
 'src.arch.zxnext.peephole',
 'src.ast',
 'src.outfmt',
 'src.parsetab',
 'src.ply',
 'src.symbols',
 'src.symbols.id_',
 'src.symbols.id_.ref',
 'src.zxbasm',
 'src.zxbc',
 'src.zxbpp',
 'src.zxbpp.prepro']

package_data = \
{'': ['*'],
 'src': ['.mypy_cache/*',
         '.mypy_cache/3.10/*',
         '.mypy_cache/3.10/_typeshed/*',
         '.mypy_cache/3.10/collections/*',
         '.mypy_cache/3.10/ctypes/*',
         '.mypy_cache/3.10/dbm/*',
         '.mypy_cache/3.10/email/*',
         '.mypy_cache/3.10/importlib/*',
         '.mypy_cache/3.10/importlib/metadata/*',
         '.mypy_cache/3.10/json/*',
         '.mypy_cache/3.10/os/*',
         '.mypy_cache/3.10/src/*',
         '.mypy_cache/3.10/src/api/*',
         '.mypy_cache/3.10/src/api/symboltable/*',
         '.mypy_cache/3.10/src/arch/*',
         '.mypy_cache/3.10/src/arch/z80/*',
         '.mypy_cache/3.10/src/arch/z80/backend/*',
         '.mypy_cache/3.10/src/arch/z80/optimizer/*',
         '.mypy_cache/3.10/src/arch/z80/peephole/*',
         '.mypy_cache/3.10/src/arch/zx48k/*',
         '.mypy_cache/3.10/src/arch/zxnext/peephole/*',
         '.mypy_cache/3.10/src/outfmt/*',
         '.mypy_cache/3.10/src/parsetab/*',
         '.mypy_cache/3.10/src/ply/*',
         '.mypy_cache/3.10/src/symbols/*',
         '.mypy_cache/3.10/src/zxbasm/*',
         '.mypy_cache/3.10/src/zxbc/*',
         '.mypy_cache/3.10/src/zxbpp/prepro/*'],
 'src.arch.z80.peephole': ['opts/*'],
 'src.arch.zx48k': ['library-asm/*',
                    'library-asm/SP/*',
                    'library/*',
                    'library/SP/*',
                    'library/mj/*',
                    'library/zxuno/*'],
 'src.arch.zxnext': ['library-asm/*',
                     'library-asm/SP/*',
                     'library/*',
                     'library/SP/*',
                     'library/mj/*'],
 'src.arch.zxnext.peephole': ['opts/*']}

entry_points = \
{'console_scripts': ['zxb = src.libzxbc.zxb:main',
                     'zxbasm = src.libzxbasm.zxbasm:main',
                     'zxbc = src.libzxbc.zxb:main',
                     'zxbpp = src.libzxbpp.zxbpp:entry_point']}

setup_kwargs = {
    'name': 'zxbasic',
    'version': '1.17.1',
    'description': "Boriel's ZX BASIC Compiler",
    'long_description': '![Boriel ZX Basic](img/zxbasic_logo.png)\n\n[![Build Status](https://github.com/boriel/zxbasic/workflows/ZXBasic/badge.svg)](https://github.com/boriel/zxbasic/actions)\n[![license](https://img.shields.io/badge/License-GPLv3-blue.svg)](./LICENSE.txt)\n[![pyversions](https://img.shields.io/pypi/pyversions/zxbasic.svg)](https://pypi.python.org/pypi/zxbasic)\n\nZX BASIC\n--------\n\nCopyleft (K) 2008, Jose Rodriguez-Rosa (a.k.a. Boriel) <http://www.boriel.com>\n\nAll files in this project are covered under the [GPLv3 LICENSE](http://www.gnu.org/licenses/gpl.html)\nexcept those placed in directories `library/` and `library-asm`.\nThose are licensed under [MIT license](https://en.wikipedia.org/wiki/MIT_License) unless otherwise\nspecified in the files themselves (i.e. a different license). Anyway, all of\nthe licenses for files under those directories allow binary closed-source\n(i.e. commercial) distribution of the files created with this compiler.\n\nYou can create closed-source programs (even commercial ones) with this compiler\n(a mention to this tool will be welcome, though). But you are not allowed to\nrelease the compiler itself as a closed source program.\n\nIf you modify *this* project (the compiler .py or anything licensed as GPLv3)\nin any way you MUST publish the changes you made and submit your contribution\nto the community under the same license.\n\n-------------------------\n\nDOCUMENTATION\n-------------\n\nThis is a very little help file.\n\n - For DOCUMENTATION in English go to the [ZX BASIC docs](https://zxbasic.readthedocs.io/en/latest/).\n\n - For help, support, updates meet the community at the [forum](https://www.boriel.com/forum).\n\n\nINSTALLATION\n------------\n\nGo to the [ZXBasic download page](https://zxbasic.readthedocs.io/en/latest/archive/)\nand get the version most suitable for you.\n\nThere are, basically, two flavors (both with identical capabilities):\n\n - For Windows you can download de win32 executable (Windows .exe zip package) version.\nTo install just uncompress it in a directory of your choice.\nThe main executable is `zxbc.exe` (more on this later). With this toolchain\nalso comes `zxbasm.exe` (the assembler) and `zxbpp.exe` (the preprocessor), but these\nare not needed when programming in BASIC.\n\n - For Linux and Mac OSX there is a python version, so you will need a python\ninterpreter (available on many platforms, and usually already installed in Linux and Mac OSX).\nJust uncompress it in a directory of your choice and installation is done. :-)\nThe main executables are `zxbc.py` (the compiler), `zxbasm.py` (the assembler) and `zxbpp.py` (the preprocessor).\nYou can use this version in Windows, but will need to install a python interpreter first.\n\n##### Examples\n\n\n|![Eleuterio, el mono serio](./img/eleuterio.gif)|![El Hobbit](./img/HobbitEl.gif)|![Knight & Demonds DX](./img/KnightsDemonsDX.png)|\n|---|---|---|\n| An in-game screenshot of Eleuterio by @*na_th_an* | Ingame screenshot of _El Hobbit_ by @*Wilco2000*| Ingame screenshot of _Knignt and Demonds DX_ by Einar Saukas\n\nSee more examples at the [Relased Programs](https://zxbasic.readthedocs.io/en/latest/released_programs/) page.\n\nQUICK START\n-----------\n\nFor a quick start, just open a terminal in your PC in the same directory you uncompressed ZX Basic\nand type `zxbc` (on Windows) or `zxbc.py` (OSX, Linux). You should see a zxbasic message like this:\n\n```\nusage: zxbc [-h] [-d] [-O OPTIMIZE] [-o OUTPUT_FILE] [-T] [-t] [-B] [-a] [-A]\n           [-S ORG] [-e STDERR] [--array-base ARRAY_BASE]\n           [--string-base STRING_BASE] [-Z] [-H HEAP_SIZE]\n           [--heap-adddress HEAP_ADDRESS] [--debug-memory]\n           [--debug-array] [--strict-bool] [--enable-break] [-E] [--explicit]\n           [-D DEFINES] [-M MEMORY_MAP] [-i] [-I INCLUDE_PATH] [--strict]\n           [--version]\n           PROGRAM\nzxbc: error: the following arguments are required: PROGRAM\n```\n\nCreate a text file with the following content:\n\n~~~~\n10 CLS\n20 PRINT "HELLO WORLD!"\n~~~~\n\nSave it as `hello.bas` and finally compile it with:\n~~~~\nzxbc -taB hello.bas\n~~~~\n\nIf everything went well, a file named `hello.tap` should be created.\nOpen it with your favourite emulator (i.e. fuse) and see the result.\n\nCongratulations! You\'re now ready to create compiled BASIC programs for\nyour machine. Check and compile the examples included in the examples/ folder\nor go to the [documentation page](https://zxbasic.readthedocs.io/en/latest/) for further info.\n\nACKNOWLEDGEMENTS\n---------------\n\nThese are some people who has contributed in a way or another. I consider\nsome of them co-authors (Britlion, LCD, em00k, ...) of this project.\n\nAlso, many thanks to people supporting this project with their donations!\n\n------\n[![ko-fi](https://www.ko-fi.com/img/githubbutton_sm.svg)](https://ko-fi.com/boriel)\n',
    'author': 'Jose Rodriguez',
    'author_email': 'boriel@gmail.com',
    'maintainer': None,
    'maintainer_email': None,
    'url': 'http://zxbasic.net',
    'packages': packages,
    'package_data': package_data,
    'entry_points': entry_points,
    'python_requires': '>=3.10,<4.0',
}


setup(**setup_kwargs)
