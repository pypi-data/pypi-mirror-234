Metadata-Version: 2.1
Name: drf-role
Version: 1.0.0
Summary: A simple lightweight role manager for Django REST framework.
Home-page: UNKNOWN
Author: Ashraful Islam
Author-email: ashrafulrobin3@gmail.com
License: MIT License
Platform: UNKNOWN
Classifier: Environment :: Web Environment
Classifier: Framework :: Django
Classifier: Framework :: Django :: 2.0
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Topic :: Internet :: WWW/HTTP
Classifier: Topic :: Internet :: WWW/HTTP :: Dynamic Content
License-File: LICENSE

================================
DjangoRESTFramework Role Manager
================================
drf_role is a small, simple and lightweight role manager who can manage READ/WRITE & NoAccess permissions
for each role. It basically work with DRF internal system like permission class, object level permission, etc.

Detailed documentation is in the "docs" directory.

Quick start
-----------

1. Add "polls" to your INSTALLED_APPS setting like this::

    INSTALLED_APPS = [
        ...
        'drf_role',
    ]

2. Include the polls URLconf in your project urls.py like this::

    url(r'^api/<YOUR VERSION NUMBER>/drf-role/', include('drf_role.urls')),

3. Run `python manage.py migrate` to create the drf_role models.

4. Start the development server and visit,
    http://127.0.0.1:8000/api/v1/roles/
    http://127.0.0.1:8000/api/v1/permissions/
    http://127.0.0.1:8000/api/v1/accesses/
    http://127.0.0.1:8000/api/v1/all-urls/

Please look up on docs for details...


