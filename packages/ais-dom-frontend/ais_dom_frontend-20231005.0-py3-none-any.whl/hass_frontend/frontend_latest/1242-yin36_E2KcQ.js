export const id=1242;export const ids=[1242];export const modules={53725:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if(null==e)throw new TypeError("assign requires that input parameter not be null or undefined");for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r]);return e},e.exports=t.default},20508:(e,t,r)=>{var n=r(28847).default;Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return(0,o.default)({},e)};var o=n(r(53725));e.exports=t.default},59699:(e,t,r)=>{r.d(t,{Z:()=>i});var n=r(90394),o=r(39244),s=r(23682),a=36e5;function i(e,t){(0,s.Z)(2,arguments);var r=(0,n.Z)(t);return(0,o.Z)(e,r*a)}},39244:(e,t,r)=>{r.d(t,{Z:()=>a});var n=r(90394),o=r(34327),s=r(23682);function a(e,t){(0,s.Z)(2,arguments);var r=(0,o.Z)(e).getTime(),a=(0,n.Z)(t);return new Date(r+a)}},32182:(e,t,r)=>{r.d(t,{Z:()=>a});var n=r(90394),o=r(34327),s=r(23682);function a(e,t){(0,s.Z)(2,arguments);var r=(0,o.Z)(e),a=(0,n.Z)(t);if(isNaN(a))return new Date(NaN);if(!a)return r;var i=r.getDate(),c=new Date(r.getTime());return c.setMonth(r.getMonth()+a+1,0),i>=c.getDate()?c:(r.setFullYear(c.getFullYear(),c.getMonth(),i),r)}},72043:(e,t,r)=>{r.d(t,{A:()=>a});var n=r(23158),o=r(25101),s=r(66477);const a=(e,t,r,a,i)=>r.time_zone===s.c_.server?((e,t,r,s)=>{const a=r((0,n.Z)(e,t),s);return(0,o.Z)(a,t)})(e,a.time_zone,t,i):t(e,i)},92306:(e,t,r)=>{r.d(t,{v:()=>n});const n=(e,t)=>{const r={};for(const n of e){const e=t(n);e in r?r[e].push(n):r[e]=[n]}return r}},81582:(e,t,r)=>{r.d(t,{DJ:()=>s,LZ:()=>n,Nn:()=>y,Ny:()=>u,Pk:()=>_,Q4:()=>o,RQ:()=>i,SO:()=>c,T0:()=>g,iJ:()=>l,pB:()=>a});const n=32143==r.j?["migration_error","setup_error","setup_retry"]:null,o=32143==r.j?["not_loaded","loaded","setup_error","setup_retry"]:null,s=(e,t,r)=>{const n={type:"config_entries/subscribe"};return r&&r.type&&(n.type_filter=r.type),e.connection.subscribeMessage((e=>t(e)),n)},a=(e,t)=>{const r={};return t&&(t.type&&(r.type_filter=t.type),t.domain&&(r.domain=t.domain)),e.callWS({type:"config_entries/get",...r})},i=(e,t)=>e.callWS({type:"config_entries/get_single",entry_id:t}),c=(e,t,r)=>e.callWS({type:"config_entries/update",entry_id:t,...r}),l=(e,t)=>e.callApi("DELETE",`config/config_entries/entry/${t}`),y=(e,t)=>e.callApi("POST",`config/config_entries/entry/${t}/reload`),u=(e,t)=>e.callWS({type:"config_entries/disable",entry_id:t,disabled_by:"user"}),g=(e,t)=>e.callWS({type:"config_entries/disable",entry_id:t,disabled_by:null}),_=(e,t)=>{const r=[...e],n=e=>{const r=t[e.domain];return"helper"===(null==r?void 0:r.integration_type)?-1:1};return r.sort(((e,t)=>n(t)-n(e)))}},55424:(e,t,r)=>{r.a(e,(async(e,n)=>{try{r.d(t,{Bm:()=>w,Cj:()=>D,G9:()=>L,Jj:()=>E,KU:()=>k,P:()=>T,UB:()=>z,ZC:()=>M,_Z:()=>P,b:()=>F,gy:()=>C,iK:()=>b,jB:()=>O,o1:()=>v,rl:()=>Z,vE:()=>B,xZ:()=>S,yH:()=>x});var o=r(24112),s=r(32182),a=r(79021),i=r(39244),c=r(59429),l=r(93752),y=r(59699),u=r(97330),g=r(72043),_=r(49684),d=r(92306),p=r(81582),f=r(38014),h=e([_]);_=(h.then?(await h)():h)[0];const m=[],w=()=>({stat_energy_from:"",stat_cost:null,entity_energy_price:null,number_energy_price:null}),v=()=>({stat_energy_to:"",stat_compensation:null,entity_energy_price:null,number_energy_price:null}),b=()=>({type:"grid",flow_from:[],flow_to:[],cost_adjustment_day:0}),Z=()=>({type:"solar",stat_energy_from:"",config_entry_solar_forecast:null}),T=()=>({type:"battery",stat_energy_from:"",stat_energy_to:""}),k=()=>({type:"gas",stat_energy_from:"",stat_cost:null,entity_energy_price:null,number_energy_price:null}),D=()=>({type:"water",stat_energy_from:"",stat_cost:null,entity_energy_price:null,number_energy_price:null}),S=e=>e.callWS({type:"energy/info"}),C=async e=>(await e.loadBackendTranslation("issues","energy"),e.callWS({type:"energy/validate"})),M=e=>e.callWS({type:"energy/get_prefs"}),P=async(e,t)=>{const r=e.callWS({type:"energy/save_prefs",...t});return j(e),r},W=async(e,t,r,n,o,s="hour")=>e.callWS({type:"energy/fossil_energy_consumption",start_time:t.toISOString(),end_time:null==o?void 0:o.toISOString(),energy_statistic_ids:r,co2_statistic_id:n,period:s}),E=e=>(0,d.v)(e.energy_sources,(e=>e.type)),x=(e,t,r)=>{const n=[];for(const o of e.energy_sources)if(!r||r.includes(o.type))if("solar"!==o.type)if("gas"!==o.type&&"water"!==o.type)if("battery"!==o.type){for(const e of o.flow_from){n.push(e.stat_energy_from),e.stat_cost&&n.push(e.stat_cost);const r=t.cost_sensors[e.stat_energy_from];r&&n.push(r)}for(const e of o.flow_to){n.push(e.stat_energy_to),e.stat_compensation&&n.push(e.stat_compensation);const r=t.cost_sensors[e.stat_energy_to];r&&n.push(r)}}else n.push(o.stat_energy_from),n.push(o.stat_energy_to);else{n.push(o.stat_energy_from),o.stat_cost&&n.push(o.stat_cost);const e=t.cost_sensors[o.stat_energy_from];e&&n.push(e)}else n.push(o.stat_energy_from);return n},A=async(e,t,r,n,c)=>{const[l,y]=await Promise.all([(0,p.pB)(e,{domain:"co2signal"}),S(e)]),u=l.length?l[0]:void 0;let g;if(u)for(const t of Object.values(e.entities)){if("co2signal"!==t.platform)continue;const r=e.states[t.entity_id];if(r&&"%"===r.attributes.unit_of_measurement){g=r.entity_id;break}}const _=[];for(const e of t.energy_sources)if("grid"===e.type)for(const t of e.flow_from)_.push(t.stat_energy_from);const d=x(t,y,["grid","solar","battery","gas"]),h=x(t,y,["water"]),m=[...d,...h],w=(0,o.Z)(n||new Date,r),v=w>35?"month":w>2?"day":"hour",b=e.config.unit_system.length||"",Z={energy:"kWh",volume:"km"===b?"m続":"ft続"},T={volume:"km"===b?"L":"gal"},k=d.length?(0,f.dL)(e,r,n,d,v,Z,["change"]):{},D=h.length?(0,f.dL)(e,r,n,h,v,T,["change"]):{};let C,M,P,E,A,j={},z={};c&&(M=w>27&&w<32?(0,s.Z)(r,-1):(0,a.Z)(r,-1*(w+1)),P=(0,i.Z)(r,-1),d.length&&(j=(0,f.dL)(e,M,P,d,v,Z,["change"])),h.length&&(z=(0,f.dL)(e,M,P,h,v,T,["change"]))),void 0!==g&&(E=W(e,r,_,g,n,w>35?"month":w>2?"day":"hour"),c&&(A=W(e,M,_,g,P,w>35?"month":w>2?"day":"hour")));const O={},U=m.length?(0,f.Py)(e,m):[],[L,B,F,H,N,Y,$]=await Promise.all([k,D,j,z,U,E,A]),J={...L,...B};c&&(C={...F,...H}),m.length&&N.forEach((e=>{O[e.statistic_id]=e}));return{start:r,end:n,startCompare:M,endCompare:P,info:y,prefs:t,stats:J,statsMetadata:O,statsCompare:C,co2SignalConfigEntry:u,co2SignalEntity:g,fossilEnergyConsumption:Y,fossilEnergyConsumptionCompare:$}},j=e=>{m.forEach((t=>{const r=z(e,{key:t});r.clearPrefs(),r._active&&r.refresh()}))},z=(e,t={})=>{let r="_energy";if(t.key){if(!t.key.startsWith("energy_"))throw new Error("Key need to start with energy_");r=`_${t.key}`}if(e.connection[r])return e.connection[r];m.push(t.key);const n=(0,u._)(e.connection,r,(async()=>{if(n.prefs||(n.prefs=await M(e)),n._refreshTimeout&&clearTimeout(n._refreshTimeout),n._active&&(!n.end||n.end>new Date)){const e=new Date;e.getMinutes()>=20&&e.setHours(e.getHours()+1),e.setMinutes(20,0,0),n._refreshTimeout=window.setTimeout((()=>n.refresh()),e.getTime()-Date.now())}return A(e,n.prefs,n.start,n.end,n.compare)})),o=n.subscribe;n.subscribe=e=>{const t=o(e);return n._active++,()=>{n._active--,n._active<1&&(clearTimeout(n._refreshTimeout),n._refreshTimeout=void 0),t()}},n._active=0,n.prefs=t.prefs;const s=new Date,i=(0,_.Zs)(s,e.locale,e.config).split(":")[0];n.start=(0,g.A)("0"===i?(0,a.Z)(s,-1):s,c.Z,e.locale,e.config),n.end=(0,g.A)("0"===i?(0,a.Z)(s,-1):s,l.Z,e.locale,e.config);const d=()=>{n._updatePeriodTimeout=window.setTimeout((()=>{n.start=(0,g.A)(new Date,c.Z,e.locale,e.config),n.end=(0,g.A)(new Date,l.Z,e.locale,e.config),d()}),(0,y.Z)((0,g.A)(s,l.Z,e.locale,e.config),1).getTime()-Date.now())};return d(),n.clearPrefs=()=>{n.prefs=void 0},n.setPeriod=(t,r)=>{var o;n.start=t,n.end=r,n.start.getTime()!==(0,g.A)(new Date,c.Z,e.locale,e.config).getTime()||(null===(o=n.end)||void 0===o?void 0:o.getTime())!==(0,g.A)(new Date,l.Z,e.locale,e.config).getTime()||n._updatePeriodTimeout?n._updatePeriodTimeout&&(clearTimeout(n._updatePeriodTimeout),n._updatePeriodTimeout=void 0):d()},n.setCompare=e=>{n.compare=e},n},O=e=>e.callWS({type:"energy/solar_forecast"}),U=["volume","energy"],L=(e,t={},r)=>{for(const n of e.energy_sources){if("gas"!==n.type)continue;if(r&&r===n.stat_energy_from)continue;const e=t[n.stat_energy_from];if(U.includes(null==e?void 0:e.unit_class))return e.unit_class}},B=(e,t,r={})=>{const n=L(t,r);if(void 0!==n)return"energy"===n?"kWh":"km"===e.config.unit_system.length?"m続":"ft続"},F=e=>"km"===e.config.unit_system.length?"L":"gal";n()}catch(e){n(e)}}))},1242:(e,t,r)=>{r.a(e,(async(e,n)=>{try{r.r(t),r.d(t,{EnergyViewStrategy:()=>y});var o=r(17463),s=r(68144),a=r(79932),i=r(55424),c=e([i]);i=(c.then?(await c)():c)[0];const l=async()=>(await Promise.all([r.e(29021),r.e(55158)]).then(r.bind(r,55158)),{type:"panel",cards:[{type:"custom:energy-setup-wizard-card"}]});let y=(0,o.Z)([(0,a.Mo)("energy-view-strategy")],(function(e,t){return{F:class extends t{constructor(...t){super(...t),e(this)}},d:[{kind:"method",static:!0,key:"generate",value:async function(e,t,r){const n={cards:[]};let o;try{o=await(0,i.ZC)(t)}catch(e){return"not_found"===e.code?l():(n.cards.push({type:"markdown",content:`An error occurred while fetching your energy preferences: ${e.message}.`}),n)}n.type="sidebar";const s=o.energy_sources.find((e=>"grid"===e.type)),a=s&&s.flow_to.length,c=o.energy_sources.some((e=>"solar"===e.type)),y=o.energy_sources.some((e=>"gas"===e.type)),u=o.energy_sources.some((e=>"water"===e.type));return(r.narrow||e.show_date_selection)&&n.cards.push({type:"energy-date-selection",collection_key:"energy_dashboard",view_layout:{position:"sidebar"}}),n.cards.push({type:"energy-compare",collection_key:"energy_dashboard"}),s&&n.cards.push({title:t.localize("ui.panel.energy.cards.energy_usage_graph_title"),type:"energy-usage-graph",collection_key:"energy_dashboard"}),c&&n.cards.push({title:t.localize("ui.panel.energy.cards.energy_solar_graph_title"),type:"energy-solar-graph",collection_key:"energy_dashboard"}),y&&n.cards.push({title:t.localize("ui.panel.energy.cards.energy_gas_graph_title"),type:"energy-gas-graph",collection_key:"energy_dashboard"}),u&&n.cards.push({title:t.localize("ui.panel.energy.cards.energy_water_graph_title"),type:"energy-water-graph",collection_key:"energy_dashboard"}),s&&n.cards.push({title:t.localize("ui.panel.energy.cards.energy_distribution_title"),type:"energy-distribution",view_layout:{position:"sidebar"},collection_key:"energy_dashboard"}),(s||c)&&n.cards.push({title:t.localize("ui.panel.energy.cards.energy_sources_table_title"),type:"energy-sources-table",collection_key:"energy_dashboard"}),a&&n.cards.push({type:"energy-grid-neutrality-gauge",view_layout:{position:"sidebar"},collection_key:"energy_dashboard"}),c&&a&&(n.cards.push({type:"energy-solar-consumed-gauge",view_layout:{position:"sidebar"},collection_key:"energy_dashboard"}),n.cards.push({type:"energy-self-sufficiency-gauge",view_layout:{position:"sidebar"},collection_key:"energy_dashboard"})),s&&n.cards.push({type:"energy-carbon-consumed-gauge",view_layout:{position:"sidebar"},collection_key:"energy_dashboard"}),o.device_consumption.length&&n.cards.push({title:t.localize("ui.panel.energy.cards.energy_devices_graph_title"),type:"energy-devices-graph",collection_key:"energy_dashboard"}),n}}]}}),s.fl);n()}catch(e){n(e)}}))},28847:e=>{e.exports=function(e){return e&&e.__esModule?e:{default:e}},e.exports.__esModule=!0,e.exports.default=e.exports},23158:(e,t,r)=>{r.d(t,{Z:()=>s});var n=r(89273),o=r(36857);function s(e,t,r){var s=(0,o.Z)(e,r),a=(0,n.Z)(t,s,!0),i=new Date(s.getTime()-a),c=new Date(0);return c.setFullYear(i.getUTCFullYear(),i.getUTCMonth(),i.getUTCDate()),c.setHours(i.getUTCHours(),i.getUTCMinutes(),i.getUTCSeconds(),i.getUTCMilliseconds()),c}},25101:(e,t,r)=>{r.d(t,{Z:()=>c});var n=r(20508),o=r(36857),s=r(57944),a=r(89273),i=r(74101);function c(e,t,r){if("string"==typeof e&&!e.match(s.Z)){var c=n(r);return c.timeZone=t,(0,o.Z)(e,c)}var l=(0,o.Z)(e,r),y=(0,i.Z)(l.getFullYear(),l.getMonth(),l.getDate(),l.getHours(),l.getMinutes(),l.getSeconds(),l.getMilliseconds()).getTime(),u=(0,a.Z)(t,new Date(y));return new Date(y+u)}}};
//# sourceMappingURL=1242-yin36_E2KcQ.js.map