export const id=49412;export const ids=[49412];export const modules={42893:(e,t,s)=>{var a=s(17463),i=s(68144),o=s(79932),n=s(26765),r=(s(98762),s(47181));(0,a.Z)([(0,o.Mo)("ha-call-service-button")],(function(e,t){return{F:class extends t{constructor(...t){super(...t),e(this)}},d:[{kind:"field",decorators:[(0,o.Cb)({attribute:!1})],key:"hass",value:void 0},{kind:"field",decorators:[(0,o.Cb)({type:Boolean})],key:"disabled",value:()=>!1},{kind:"field",decorators:[(0,o.Cb)({type:Boolean})],key:"progress",value:()=>!1},{kind:"field",decorators:[(0,o.Cb)()],key:"domain",value:void 0},{kind:"field",decorators:[(0,o.Cb)()],key:"service",value:void 0},{kind:"field",decorators:[(0,o.Cb)({type:Object})],key:"serviceData",value:()=>({})},{kind:"field",decorators:[(0,o.Cb)()],key:"confirmation",value:void 0},{kind:"method",key:"render",value:function(){return i.dy` <ha-progress-button .progress="${this.progress}" .disabled="${this.disabled}" @click="${this._buttonTapped}" tabindex="0"> <slot></slot></ha-progress-button> `}},{kind:"method",key:"_callService",value:async function(){this.progress=!0;const e={domain:this.domain,service:this.service,serviceData:this.serviceData,success:!1},t=this.shadowRoot.querySelector("ha-progress-button");try{await this.hass.callService(this.domain,this.service,this.serviceData),this.progress=!1,t.actionSuccess(),e.success=!0}catch(s){return this.progress=!1,t.actionError(),void(e.success=!1)}finally{(0,r.B)(this,"hass-service-called",e)}}},{kind:"method",key:"_buttonTapped",value:function(){this.confirmation?(0,n.g7)(this,{text:this.confirmation,confirm:()=>this._callService()}):this._callService()}}]}}),i.oi)},98762:(e,t,s)=>{var a=s(17463),i=(s(14271),s(68144)),o=s(79932);s(31206),s(52039);(0,a.Z)([(0,o.Mo)("ha-progress-button")],(function(e,t){return{F:class extends t{constructor(...t){super(...t),e(this)}},d:[{kind:"field",decorators:[(0,o.Cb)({type:Boolean})],key:"disabled",value:()=>!1},{kind:"field",decorators:[(0,o.Cb)({type:Boolean})],key:"progress",value:()=>!1},{kind:"field",decorators:[(0,o.Cb)({type:Boolean})],key:"raised",value:()=>!1},{kind:"field",decorators:[(0,o.SB)()],key:"_result",value:void 0},{kind:"method",key:"render",value:function(){const e=this._result||this.progress;return i.dy` <mwc-button ?raised="${this.raised}" .disabled="${this.disabled||this.progress}" @click="${this._buttonTapped}" class="${this._result||""}"> <slot></slot> </mwc-button> ${e?i.dy` <div class="progress"> ${"success"===this._result?i.dy`<ha-svg-icon .path="${"M9,20.42L2.79,14.21L5.62,11.38L9,14.77L18.88,4.88L21.71,7.71L9,20.42Z"}"></ha-svg-icon>`:"error"===this._result?i.dy`<ha-svg-icon .path="${"M2.2,16.06L3.88,12L2.2,7.94L6.26,6.26L7.94,2.2L12,3.88L16.06,2.2L17.74,6.26L21.8,7.94L20.12,12L21.8,16.06L17.74,17.74L16.06,21.8L12,20.12L7.94,21.8L6.26,17.74L2.2,16.06M13,17V15H11V17H13M13,13V7H11V13H13Z"}"></ha-svg-icon>`:this.progress?i.dy` <ha-circular-progress size="small" active></ha-circular-progress> `:""} </div> `:""} `}},{kind:"method",key:"actionSuccess",value:function(){this._setResult("success")}},{kind:"method",key:"actionError",value:function(){this._setResult("error")}},{kind:"method",key:"_setResult",value:function(e){this._result=e,setTimeout((()=>{this._result=void 0}),2e3)}},{kind:"method",key:"_buttonTapped",value:function(e){this.progress&&e.stopPropagation()}},{kind:"get",static:!0,key:"styles",value:function(){return i.iv`:host{outline:0;display:inline-block;position:relative}mwc-button{transition:all 1s}mwc-button.success{--mdc-theme-primary:white;background-color:var(--success-color);transition:none;border-radius:4px;pointer-events:none}mwc-button[raised].success{--mdc-theme-primary:var(--success-color);--mdc-theme-on-primary:white}mwc-button.error{--mdc-theme-primary:white;background-color:var(--error-color);transition:none;border-radius:4px;pointer-events:none}mwc-button[raised].error{--mdc-theme-primary:var(--error-color);--mdc-theme-on-primary:white}.progress{bottom:4px;position:absolute;text-align:center;top:4px;width:100%}ha-svg-icon{color:#fff}mwc-button.error slot,mwc-button.success slot{visibility:hidden}`}}]}}),i.oi)},31206:(e,t,s)=>{s.r(t),s.d(t,{HaCircularProgress:()=>c});var a=s(17463),i=s(34541),o=s(47838),n=s(30879),r=s(68144),d=s(79932);let c=(0,a.Z)([(0,d.Mo)("ha-circular-progress")],(function(e,t){class s extends t{constructor(...t){super(...t),e(this)}}return{F:s,d:[{kind:"field",decorators:[(0,d.Cb)({type:Boolean})],key:"active",value:()=>!1},{kind:"field",decorators:[(0,d.Cb)()],key:"alt",value:()=>"Loading"},{kind:"field",decorators:[(0,d.Cb)()],key:"size",value:()=>"medium"},{kind:"set",key:"density",value:function(e){}},{kind:"get",key:"density",value:function(){switch(this.size){case"tiny":return-8;case"small":return-5;case"medium":default:return 0;case"large":return 5}}},{kind:"set",key:"indeterminate",value:function(e){}},{kind:"get",key:"indeterminate",value:function(){return this.active}},{kind:"get",static:!0,key:"styles",value:function(){return[(0,i.Z)((0,o.Z)(s),"styles",this),r.iv`:host{overflow:hidden}`]}}]}}),n.D)},83927:(e,t,s)=>{var a=s(17463),i=s(8485),o=s(92038),n=s(68144),r=s(79932),d=s(47181);(0,a.Z)([(0,r.Mo)("ha-formfield")],(function(e,t){return{F:class extends t{constructor(...t){super(...t),e(this)}},d:[{kind:"method",key:"_labelClick",value:function(){const e=this.input;if(e&&(e.focus(),!e.disabled))switch(e.tagName){case"HA-CHECKBOX":e.checked=!e.checked,(0,d.B)(e,"change");break;case"HA-RADIO":e.checked=!0,(0,d.B)(e,"change");break;default:e.click()}}},{kind:"field",static:!0,key:"styles",value:()=>[o.W,n.iv`:host(:not([alignEnd])) ::slotted(ha-switch){margin-right:10px;margin-inline-end:10px;margin-inline-start:inline}.mdc-form-field>label{direction:var(--direction);margin-inline-start:0;margin-inline-end:auto;padding-inline-start:4px;padding-inline-end:0}`]}]}}),i.a)},33220:(e,t,s)=>{var a=s(17463),i=s(35433),o=s(44973),n=s(68144),r=s(79932);(0,a.Z)([(0,r.Mo)("ha-radio")],(function(e,t){return{F:class extends t{constructor(...t){super(...t),e(this)}},d:[{kind:"field",static:!0,key:"styles",value:()=>[o.W,n.iv`:host{--mdc-theme-secondary:var(--primary-color)}`]}]}}),i.J)},43709:(e,t,s)=>{var a=s(17463),i=s(34541),o=s(47838),n=s(53464),r=s(4301),d=s(68144),c=s(79932),l=s(62359);(0,a.Z)([(0,c.Mo)("ha-switch")],(function(e,t){class s extends t{constructor(...t){super(...t),e(this)}}return{F:s,d:[{kind:"field",decorators:[(0,c.Cb)({type:Boolean})],key:"haptic",value:()=>!1},{kind:"method",key:"firstUpdated",value:function(){(0,i.Z)((0,o.Z)(s.prototype),"firstUpdated",this).call(this),this.addEventListener("change",(()=>{this.haptic&&(0,l.j)("light")}))}},{kind:"field",static:!0,key:"styles",value:()=>[r.W,d.iv`:host{--mdc-theme-secondary:var(--switch-checked-color)}.mdc-switch.mdc-switch--checked .mdc-switch__thumb{background-color:var(--switch-checked-button-color);border-color:var(--switch-checked-button-color)}.mdc-switch.mdc-switch--checked .mdc-switch__track{background-color:var(--switch-checked-track-color);border-color:var(--switch-checked-track-color)}.mdc-switch:not(.mdc-switch--checked) .mdc-switch__thumb{background-color:var(--switch-unchecked-button-color);border-color:var(--switch-unchecked-button-color)}.mdc-switch:not(.mdc-switch--checked) .mdc-switch__track{background-color:var(--switch-unchecked-track-color);border-color:var(--switch-unchecked-track-color)}`]}]}}),n.H)},98952:(e,t,s)=>{s.r(t);var a=s(17463),i=(s(33220),s(83927),s(27289),s(12730),s(82692),s(60010),s(38353),s(27213),s(43709),s(42893),s(81312),s(68144)),o=s(79932),n=s(11654);(0,a.Z)([(0,o.Mo)("ha-config-ais-dom-config-update")],(function(e,t){return{F:class extends t{constructor(...t){super(...t),e(this)}},d:[{kind:"field",decorators:[(0,o.Cb)({attribute:!1})],key:"hass",value:void 0},{kind:"field",decorators:[(0,o.Cb)({type:Boolean})],key:"isWide",value:()=>!0},{kind:"field",decorators:[(0,o.Cb)({type:Boolean})],key:"validateConfigInProgress",value:()=>!1},{kind:"field",decorators:[(0,o.Cb)({type:String})],key:"validateLog",value:()=>""},{kind:"field",decorators:[(0,o.Cb)({type:String})],key:"aisButtonVersionCheckUpgrade",value:()=>""},{kind:"field",decorators:[(0,o.Cb)({type:String})],key:"backupType",value:()=>"all"},{kind:"field",decorators:[(0,o.Cb)({type:String})],key:"backupType2",value:()=>"all"},{kind:"method",key:"firstUpdated",value:async function(){}},{kind:"method",key:"render",value:function(){return i.dy` <hass-subpage header="Konfiguracja bramki AIS dom"> <ha-config-section .isWide="${this.isWide}"> <span slot="header">Oprogramowanie bramki</span> <span slot="introduction">Możesz zaktualizować system do najnowszej wersji, wykonać kopię zapasową ustawień i zsynchronizować bramkę z Portalem Integratora</span> <ha-card header="Wersja systemu AI-Speaker"> <div class="card-content" style="text-align:center"> <div style="color:${this._getTextColor(this.hass.states["sensor.version_info"])}"> ${this.hass.states["sensor.version_info"].state} </div> <img class="versionLogo" src="/static/ais_version.png"> <div style="text-align:left"> <div style="margin-top:30px" id="ha-switch-id"> <ha-switch .checked="${"on"===this.hass.states["input_boolean.ais_auto_update"].state}" @change="${this.changeAutoUpdateMode}" style="position:absolute;right:20px"></ha-switch><span><h3> Autoaktualizacja <ha-icon icon="${"on"===this.hass.states["input_boolean.ais_auto_update"].state?"mdi:sync":"mdi:sync-off"}"></ha-icon></h3></span> </div> </div> <div style="display:inline-block;text-align:left"> <div> ${"on"===this.hass.states["input_boolean.ais_auto_update"].state?i.dy`Codziennie sprawdzimy i automatycznie zainstalujemy dostępne aktualizacje.`:i.dy`Możesz aktualizować system samodzielnie w dogodnym dla Ciebie czasie lub włączyć aktualizację automatyczną.`} </div> <div style="margin-top:15px"> Aktualizacje dostarczają najnowsze funkcjonalności oraz poprawki zapewniające bezpieczeństwo i stabilność działania systemu. <table style="margin-top:10px"> ${this.hass.states["sensor.version_info"].attributes.update_check_time?i.dy`<tr> <td> <ha-icon icon=""></ha-icon> Sprawdzono o </td> <td> ${this.hass.states["sensor.version_info"].attributes.update_check_time} </td> <td></td> <td><ha-icon icon=""></ha-icon></td> </tr>`:i.dy``} ${this.hass.states["sensor.version_info"].attributes.update_status?i.dy`<tr> <td> <ha-icon icon=""></ha-icon> Status </td> <td> ${this.getVersionName(this.hass.states["sensor.version_info"].attributes.update_status)} </td> <td></td> <td> <ha-icon icon="${this.getVersionIcon(this.hass.states["sensor.version_info"].attributes.update_status)}"></ha-icon> </td> </tr>`:i.dy``} <tr style="height:1em"></tr> ${this.hass.states["sensor.version_info"].attributes.zigbee2mqtt_current_version?i.dy`<tr> <td> <ha-icon icon="mdi:zigbee"></ha-icon> Zigbee </td> <td> ${this.hass.states["sensor.version_info"].attributes.zigbee2mqtt_current_version} </td> <td> ${this.hass.states["sensor.version_info"].attributes.zigbee2mqtt_newest_version} </td> <td> <ha-icon icon="${this.hass.states["sensor.version_info"].attributes.reinstall_zigbee2mqtt?"hass:alert":"hass:check"}"></ha-icon> </td> </tr>`:i.dy``} ${this.hass.states["sensor.version_info"].attributes.zigbee2mqtt_current_version?i.dy`<tr> <td> <ha-icon icon="mdi:home-assistant"></ha-icon> AIS HA </td> <td> ${this.hass.states["sensor.version_info"].attributes.dom_app_current_version} </td> <td> ${this.hass.states["sensor.version_info"].attributes.dom_app_newest_version} </td> <td> <ha-icon icon="${this.hass.states["sensor.version_info"].attributes.reinstall_dom_app?"hass:alert":"hass:check"}"></ha-icon> </td> </tr>`:i.dy``} ${this.hass.states["sensor.version_info"].attributes.android_app_current_version?i.dy`<tr> <td> <ha-icon icon="mdi:android"></ha-icon> Android </td> <td> ${this.hass.states["sensor.version_info"].attributes.android_app_current_version} </td> <td> ${this.hass.states["sensor.version_info"].attributes.android_app_newest_version} </td> <td> <ha-icon icon="${this.hass.states["sensor.version_info"].attributes.reinstall_android_app?"hass:alert":"hass:check"}"></ha-icon> </td> </tr>`:i.dy``} ${this.hass.states["sensor.version_info"].attributes.linux_apt_current_version?i.dy`<tr> <td> <ha-icon icon="mdi:linux"></ha-icon> Linux </td> <td> ${this.hass.states["sensor.version_info"].attributes.linux_apt_current_version} </td> <td> ${this.hass.states["sensor.version_info"].attributes.linux_apt_newest_version} </td> <td> <ha-icon icon="${this.hass.states["sensor.version_info"].attributes.reinstall_linux_apt?"hass:alert":"hass:check"}"></ha-icon> </td> </tr>`:i.dy``} </table> </div> </div> ${this._showUpdateButton(this.hass.states["sensor.version_info"])?i.dy` <div class="center-container"> <ha-call-service-button class="warning" .hass="${this.hass}" domain="ais_updater" service="execute_upgrade" .serviceData="${{say:!0}}"> ${this._computeAisButtonVersionCheckUpgrade(this.hass.states["sensor.version_info"])} </ha-call-service-button> </div>`:i.dy` <br><br><br> ${this.hass.states["sensor.version_info"].attributes.progress?i.dy` <mwc-linear-progress determinate .progress="${this.hass.states["sensor.version_info"].attributes.progress}" .buffer="${this.hass.states["sensor.version_info"].attributes.buffer}"> </mwc-linear-progress>`:i.dy`<mwc-linear-progress indeterminate> </mwc-linear-progress>`} <br> `} </div> </ha-card> <ha-card header="Kopia konfiguracji Bramki"> <div class="card-content"> W tym miejscu możesz, sprawdzić poprawność ustawień bramki, wykonać jej kopię i przesłać ją do portalu integratora. <b>Uwaga, ponieważ konfiguracja może zawierać hasła i tokeny dostępu do usług, zalecamy zaszyfrować ją hasłem</b>. Gdy kopia jest zabezpieczona hasłem, to można ją otworzyć/przywrócić tylko po podaniu hasła. <h2> Nowa kopia ustawień <ha-icon icon="mdi:cloud-upload-outline"></ha-icon> </h2> <br> <div class="center-container"> Kopia zapasowa ustawień: <br> <div class="backup-types" id="backup_type1"> <ha-formfield name="all" label="Wszystkich"> <ha-radio name="bt" @change="${this._handleBackupTypeValueChanged}" value="all" .checked="${"all"===this.backupType}"> </ha-radio> </ha-formfield> <ha-formfield name="ha" label="AIS HA"> <ha-radio name="bt" @change="${this._handleBackupTypeValueChanged}" value="ha" .checked="${"ha"===this.backupType}"> </ha-radio> </ha-formfield> <ha-formfield name="zigbee" label="Zigbee"> <ha-radio name="bt" @change="${this._handleBackupTypeValueChanged}" value="zigbee" .checked="${"zigbee"===this.backupType}"> </ha-radio> </ha-formfield> </div> Przed wykonaniem nowej kopii ustawień sprawdź poprawność konfiguracji </div> <br> <div> ${this.validateLog?i.dy`<div class="config-invalid"> <mwc-button raised="" @click="${this.doBackup}"> Popraw i sprawdź ponownie </mwc-button> </div> <p></p> <div id="configLog" class="validate-log"> ${this.validateLog} </div>`:i.dy` <div class="validate-container"> <div class="validate-result" id="result"> ${this.hass.states["sensor.ais_backup_info"].attributes.backup_info} </div> ${this.validateConfigInProgress?i.dy`<mwc-linear-progress indeterminate> </mwc-linear-progress>`:i.dy` <div class="config-invalid"> <span class="text"> ${this.hass.states["sensor.ais_backup_info"].attributes.backup_error} </span> </div> ${"1"===this.hass.states["sensor.ais_backup_info"].state?i.dy` <paper-input placeholder="hasło" no-label-float="" type="password" id="password1"></paper-input> `:i.dy``} <mwc-button raised="" @click="${this.doBackup}"> ${"0"===this.hass.states["sensor.ais_backup_info"].state?i.dy` Sprawdź konfigurację `:i.dy``} ${"1"===this.hass.states["sensor.ais_backup_info"].state?i.dy` Wykonaj kopie konfiguracji `:i.dy``} </mwc-button>`} </div>`} </div> ${this.hass.states["sensor.ais_backup_info"].attributes.file_size||this.hass.states["sensor.ais_backup_info"].attributes.file_zigbee_size?i.dy` <h2> Przywracanie ustawień z kopii <ha-icon icon="mdi:cloud-download-outline"></ha-icon> </h2> W tym miejscu możesz, przywrócić ustawienia bramki z kopii, która zostanie pobrana z portalu integratora. Jeśli zaszyfrowałeś kopię hasłem, to podaj je przed wykonaniem przywracania ustawień z kopii. <div class="validate-container"> <table style="margin-top:40px;margin-bottom:10px"> ${this.hass.states["sensor.ais_backup_info"].attributes.file_size?i.dy` <tr> <td> <ha-icon icon="mdi:home-assistant"></ha-icon> AIS HA </td> <td> ${this.hass.states["sensor.ais_backup_info"].attributes.file_name} </td> <td> ${this.hass.states["sensor.ais_backup_info"].attributes.file_size} </td> </tr>`:i.dy``} ${this.hass.states["sensor.ais_backup_info"].attributes.file_zigbee_size?i.dy` <tr> <td> <ha-icon icon="mdi:zigbee"></ha-icon> Zigbee </td> <td> ${this.hass.states["sensor.ais_backup_info"].attributes.file_zigbee_name} </td> <td> ${this.hass.states["sensor.ais_backup_info"].attributes.file_zigbee_size} </td> </tr>`:i.dy``} </table> <div class="validate-container"> <div class="validate-result" id="result"> ${this.hass.states["sensor.ais_backup_info"].attributes.restore_info} </div> <div class="config-invalid"> <span class="text"> ${this.hass.states["sensor.ais_backup_info"].attributes.restore_error} </span> </div> Przywracanie ustawień z kopii: <div class="center-container"> <div class="backup-types" id="backup_type2"> ${this.hass.states["sensor.ais_backup_info"].attributes.file_size&&this.hass.states["sensor.ais_backup_info"].attributes.file_zigbee_size?i.dy` <ha-formfield name="all" label="Wszystkich"> <ha-radio name="bt2" @change="${this._handleBackupType2ValueChanged}" value="all" .checked="${"all"===this.backupType2}"> </ha-radio> </ha-formfield>`:i.dy``} ${this.hass.states["sensor.ais_backup_info"].attributes.file_size?i.dy` <ha-formfield name="ha" label="AIS HA"> <ha-radio name="bt2" @change="${this._handleBackupType2ValueChanged}" value="ha" .checked="${"ha"===this.backupType2}"> </ha-radio> </ha-formfield>`:i.dy``} ${this.hass.states["sensor.ais_backup_info"].attributes.file_zigbee_size?i.dy` <ha-formfield name="zigbee" label="Zigbee"> <ha-radio name="bt2" @change="${this._handleBackupType2ValueChanged}" value="zigbee" .checked="${"zigbee"===this.backupType2}"> </ha-radio> </ha-formfield>`:i.dy``} </div> <paper-input placeholder="hasło" no-label-float="" type="password" id="password2"></paper-input> <mwc-button raised="" @click="${this.restoreBackup}"> Przywróć konfigurację z kopii </mwc-button> </div> </div> </div>`:i.dy``} </div> </ha-card> <ha-card header="Synchronizacja z Portalem Integratora"> <div class="card-content"> Jeśli ostatnio wprowadzałeś zmiany w Portalu Integratora, takie jak dodanie nowych typów audio czy też dostęp do zewnętrznych serwisów, to przyciskiem poniżej możesz uruchomić natychmiastowe pobranie tych zmian na bramkę bez czekania na automatyczną synchronizację. <div class="center-container"> <ha-call-service-button class="warning" .hass="${this.hass}" domain="script" service="ais_cloud_sync">Synchronizuj z Portalem Integratora </ha-call-service-button> </div> </div> </ha-card> </ha-config-section> </hass-subpage> `}},{kind:"get",static:!0,key:"styles",value:function(){return[n.Qx,i.iv`.content{padding-bottom:32px}.border{margin:32px auto 0;border-bottom:1px solid rgba(0,0,0,.12);max-width:1040px}.narrow .border{max-width:640px}.center-container{text-align:center;min-height:70px}table{width:100%}td:first-child{width:33%}.validate-container{text-align:center;min-height:140px}.validate-result{color:#0da035}.config-invalid{text-align:center;color:#f44336}.validate-log{white-space:pre-wrap;direction:ltr;color:#f44336}img.versionLogo{max-width:30%}`]}},{kind:"method",key:"getVersionName",value:function(e){let t=e;return"checking"===e?t="Sprawdzanie":"outdated"===e?t="Nieaktualny":"downloading"===e?t="Pobieranie":"installing"===e?t="Instalowanie":"updated"===e?t="Aktualny":"unknown"===e?t="Nieznany":"restart"===e&&(t="Restartowanie"),t}},{kind:"method",key:"getVersionIcon",value:function(e){let t="";return"checking"===e?t="mdi:cloud-sync":"outdated"===e?t="mdi:clock-alert-outline":"downloading"===e?t="mdi:progress-download":"installing"===e?t="mdi:progress-wrench":"updated"===e?t="mdi:emoticon-happy-outline":"unknown"===e?t="mdi:help-circle-outline":"restart"===e&&(t="mdi:restart-alert"),t}},{kind:"method",key:"_handleBackupTypeValueChanged",value:function(e){const t=e.currentTarget;this.backupType=t.value}},{kind:"method",key:"_handleBackupType2ValueChanged",value:function(e){const t=e.currentTarget;this.backupType2=t.value}},{kind:"method",key:"_computeAisButtonVersionCheckUpgrade",value:function(e){const t=e.attributes;return t.reinstall_dom_app||t.reinstall_android_app||t.reinstall_linux_apt||t.reinstall_zigbee2mqtt?"outdated"===t.update_status?"Zainstaluj teraz aktualizację":"unknown"===t.update_status?"Spróbuj ponownie":"Aktualizacja -> "+this.getVersionName(t.update_status):"Sprawdź dostępność aktualizacji"}},{kind:"method",key:"_showUpdateButton",value:function(e){const t=e.attributes;return!(t.reinstall_dom_app||t.reinstall_android_app||t.reinstall_linux_apt||t.reinstall_zigbee2mqtt)||("outdated"===t.update_status||"unknown"===t.update_status)}},{kind:"method",key:"_getTextColor",value:function(e){const t=e.attributes;return t.reinstall_dom_app||t.reinstall_android_app||t.reinstall_linux_apt||t.reinstall_zigbee2mqtt?"outdated"===t.update_status?"#f44336":(t.update_status,"#ff9800"):"#0da035"}},{kind:"method",key:"changeAutoUpdateMode",value:function(){this.hass.callService("input_boolean","toggle",{entity_id:"input_boolean.ais_auto_update"})}},{kind:"method",key:"isBackupInProgress",value:function(e){return"0"!==e.state}},{kind:"method",key:"doBackup",value:function(){if("0"===this.hass.states["sensor.ais_backup_info"].state)this.validateConfigInProgress=!0,this.validateLog="",this.hass.callApi("POST","config/core/check_config").then((e=>{this.validateConfigInProgress=!1;const t="valid"===e.result?"1":"0";"0"===t?(this.hass.callService("ais_cloud","set_backup_step",{step:t,backup_error:"Konfiguracja niepoprawna"}),this.validateLog=e.errors):(this.hass.callService("ais_cloud","set_backup_step",{step:t,backup_info:"Konfiguracja poprawna można wykonać kopię"}),this.validateLog="")}));else{this.validateLog="";const e=this.shadowRoot.getElementById("password1").value,t=this.backupType;this.hass.callService("ais_cloud","do_backup",{password:e,type:t})}}},{kind:"method",key:"restoreBackup",value:function(){this.validateLog="";const e=this.shadowRoot.getElementById("password2").value,t=this.backupType2;this.hass.callService("ais_cloud","restore_backup",{password:e,type:t})}}]}}),i.oi)}};
//# sourceMappingURL=49412-o4K_A-bhJLM.js.map