export const id=66066;export const ids=[66066];export const modules={81545:(e,t,i)=>{var o=i(17463),a=i(34541),s=i(47838),n=(i(65666),i(68144)),r=i(79932),c=i(74265);(0,o.Z)([(0,r.Mo)("ha-button-menu")],(function(e,t){class i extends t{constructor(...t){super(...t),e(this)}}return{F:i,d:[{kind:"field",key:c.gA,value:void 0},{kind:"field",decorators:[(0,r.Cb)()],key:"corner",value:()=>"BOTTOM_START"},{kind:"field",decorators:[(0,r.Cb)()],key:"menuCorner",value:()=>"START"},{kind:"field",decorators:[(0,r.Cb)({type:Number})],key:"x",value:()=>null},{kind:"field",decorators:[(0,r.Cb)({type:Number})],key:"y",value:()=>null},{kind:"field",decorators:[(0,r.Cb)({type:Boolean})],key:"multi",value:()=>!1},{kind:"field",decorators:[(0,r.Cb)({type:Boolean})],key:"activatable",value:()=>!1},{kind:"field",decorators:[(0,r.Cb)({type:Boolean})],key:"disabled",value:()=>!1},{kind:"field",decorators:[(0,r.Cb)({type:Boolean})],key:"fixed",value:()=>!1},{kind:"field",decorators:[(0,r.IO)("mwc-menu",!0)],key:"_menu",value:void 0},{kind:"get",key:"items",value:function(){var e;return null===(e=this._menu)||void 0===e?void 0:e.items}},{kind:"get",key:"selected",value:function(){var e;return null===(e=this._menu)||void 0===e?void 0:e.selected}},{kind:"method",key:"focus",value:function(){var e,t;null!==(e=this._menu)&&void 0!==e&&e.open?this._menu.focusItemAtIndex(0):null===(t=this._triggerButton)||void 0===t||t.focus()}},{kind:"method",key:"render",value:function(){return n.dy` <div @click="${this._handleClick}"> <slot name="trigger" @slotchange="${this._setTriggerAria}"></slot> </div> <mwc-menu .corner="${this.corner}" .menuCorner="${this.menuCorner}" .fixed="${this.fixed}" .multi="${this.multi}" .activatable="${this.activatable}" .y="${this.y}" .x="${this.x}"> <slot></slot> </mwc-menu> `}},{kind:"method",key:"firstUpdated",value:function(e){(0,a.Z)((0,s.Z)(i.prototype),"firstUpdated",this).call(this,e),"rtl"===document.dir&&this.updateComplete.then((()=>{this.querySelectorAll("mwc-list-item").forEach((e=>{const t=document.createElement("style");t.innerHTML="span.material-icons:first-of-type { margin-left: var(--mdc-list-item-graphic-margin, 32px) !important; margin-right: 0px !important;}",e.shadowRoot.appendChild(t)}))}))}},{kind:"method",key:"_handleClick",value:function(){this.disabled||(this._menu.anchor=this,this._menu.show())}},{kind:"get",key:"_triggerButton",value:function(){return this.querySelector('ha-icon-button[slot="trigger"], mwc-button[slot="trigger"]')}},{kind:"method",key:"_setTriggerAria",value:function(){this._triggerButton&&(this._triggerButton.ariaHasPopup="menu")}},{kind:"get",static:!0,key:"styles",value:function(){return n.iv`:host{display:inline-block;position:relative}::slotted([disabled]){color:var(--disabled-text-color)}`}}]}}),n.oi)},31206:(e,t,i)=>{i.r(t),i.d(t,{HaCircularProgress:()=>d});var o=i(17463),a=i(34541),s=i(47838),n=i(30879),r=i(68144),c=i(79932);let d=(0,o.Z)([(0,c.Mo)("ha-circular-progress")],(function(e,t){class i extends t{constructor(...t){super(...t),e(this)}}return{F:i,d:[{kind:"field",decorators:[(0,c.Cb)({type:Boolean})],key:"active",value:()=>!1},{kind:"field",decorators:[(0,c.Cb)()],key:"alt",value:()=>"Loading"},{kind:"field",decorators:[(0,c.Cb)()],key:"size",value:()=>"medium"},{kind:"set",key:"density",value:function(e){}},{kind:"get",key:"density",value:function(){switch(this.size){case"tiny":return-8;case"small":return-5;case"medium":default:return 0;case"large":return 5}}},{kind:"set",key:"indeterminate",value:function(e){}},{kind:"get",key:"indeterminate",value:function(){return this.active}},{kind:"get",static:!0,key:"styles",value:function(){return[(0,a.Z)((0,s.Z)(i),"styles",this),r.iv`:host{overflow:hidden}`]}}]}}),n.D)},43709:(e,t,i)=>{var o=i(17463),a=i(34541),s=i(47838),n=i(53464),r=i(4301),c=i(68144),d=i(79932),u=i(62359);(0,o.Z)([(0,d.Mo)("ha-switch")],(function(e,t){class i extends t{constructor(...t){super(...t),e(this)}}return{F:i,d:[{kind:"field",decorators:[(0,d.Cb)({type:Boolean})],key:"haptic",value:()=>!1},{kind:"method",key:"firstUpdated",value:function(){(0,a.Z)((0,s.Z)(i.prototype),"firstUpdated",this).call(this),this.addEventListener("change",(()=>{this.haptic&&(0,u.j)("light")}))}},{kind:"field",static:!0,key:"styles",value:()=>[r.W,c.iv`:host{--mdc-theme-secondary:var(--switch-checked-color)}.mdc-switch.mdc-switch--checked .mdc-switch__thumb{background-color:var(--switch-checked-button-color);border-color:var(--switch-checked-button-color)}.mdc-switch.mdc-switch--checked .mdc-switch__track{background-color:var(--switch-checked-track-color);border-color:var(--switch-checked-track-color)}.mdc-switch:not(.mdc-switch--checked) .mdc-switch__thumb{background-color:var(--switch-unchecked-button-color);border-color:var(--switch-unchecked-button-color)}.mdc-switch:not(.mdc-switch--checked) .mdc-switch__track{background-color:var(--switch-unchecked-track-color);border-color:var(--switch-unchecked-track-color)}`]}]}}),n.H)},66066:(e,t,i)=>{i.r(t),i.d(t,{aisGetUsbSettings:()=>c,aisSaveUsbSettings:()=>d});var o=i(17463),a=(i(43709),i(27289),i(12730),i(68144)),s=i(79932),n=(i(60010),i(38353),i(31206),i(27213),i(81545),i(44577),i(11654)),r=i(53775);const c=()=>(0,r.h)(fetch("/api/ais_file/ais_usb_view",{method:"GET",credentials:"same-origin"})),d=e=>(0,r.h)(fetch("/api/ais_file/ais_usb_view",{method:"POST",credentials:"same-origin",body:JSON.stringify(e)}));(0,o.Z)([(0,s.Mo)("ha-config-ais-dom-config-usb")],(function(e,t){return{F:class extends t{constructor(...t){super(...t),e(this)}},d:[{kind:"field",decorators:[(0,s.Cb)({attribute:!1})],key:"hass",value:void 0},{kind:"field",decorators:[(0,s.Cb)({type:Boolean})],key:"usbsetingsValidating",value:()=>!1},{kind:"field",decorators:[(0,s.Cb)({type:Boolean})],key:"isWide",value:()=>!0},{kind:"field",decorators:[(0,s.Cb)({type:Boolean})],key:"narrow",value:()=>!1},{kind:"field",decorators:[(0,s.Cb)({type:String})],key:"errorUsbInfo",value:()=>""},{kind:"field",decorators:[(0,s.Cb)({type:String})],key:"messageUsbInfo",value:()=>""},{kind:"field",decorators:[(0,s.Cb)()],key:"usbSettingsInfo",value:()=>({usbAutoStartServices:!0,usbVoiceNotification:!0})},{kind:"method",key:"firstUpdated",value:async function(){try{const e=await c();this.usbSettingsInfo=e}catch(e){this.errorUsbInfo=e}}},{kind:"method",key:"render",value:function(){return a.dy` <hass-subpage header="Konfiguracja bramki AIS dom"> <div .narrow="${this.narrow}"> <ha-config-section .isWide="${this.isWide}"> <span slot="header">Obsługa urządzeń USB</span> <span slot="introduction"> W tym miejscu możesz ustalić czy Asystent ma sam rozpoznawać adaptery USB i uruchamiać automatycznie domyślne usługi Zigbee i Zwave. <br> Oraz czy ma głosowo powiadamiać o dodaniu i usunięciu urządzenia USB. </span> <ha-card header="Automatyczne rozpoznawanie urządzeń USB"> <div class="card-content"> Asystent domowy powiadamia komunikatem głosowym o tym, jakie urządzenie zostało dodane i jeżeli obsługa danego urządzenia jest wspierana, to Asystent rozpozna, na jakim porcie działa urządzenie i wykona dalsze akcje związane z obsługą danego urządzenia. <br> <br> <h2> Automatyczne uruchamianie i zatrzymywanie usług <ha-svg-icon slot="icon" path="${"M4.06,6.15C3.97,6.17 3.88,6.22 3.8,6.28C2.66,7.9 2,9.87 2,12A10,10 0 0,0 12,22C15,22 17.68,20.68 19.5,18.6L17,18.85C14.25,19.15 11.45,19.19 8.66,18.96C7.95,18.94 7.24,18.76 6.59,18.45C5.73,18.06 5.15,17.23 5.07,16.29C5.06,16.13 5.12,16 5.23,15.87L7.42,13.6L15.03,5.7V5.6H10.84C8.57,5.64 6.31,5.82 4.06,6.15M20.17,17.5C20.26,17.47 20.35,17.44 20.43,17.39C21.42,15.83 22,14 22,12A10,10 0 0,0 12,2C9.22,2 6.7,3.13 4.89,4.97H5.17C8.28,4.57 11.43,4.47 14.56,4.65C15.5,4.64 16.45,4.82 17.33,5.17C18.25,5.53 18.89,6.38 19,7.37C19,7.53 18.93,7.7 18.82,7.82L9.71,17.19L9,17.95V18.06H13.14C15.5,18 17.84,17.81 20.17,17.5Z"}"></ha-svg-icon> <ha-svg-icon slot="icon" path="${"M16.3,10.58C13.14,10.58 10.6,13.13 10.6,16.28C10.6,19.43 13.15,22 16.3,22C19.45,22 22,19.43 22,16.28C22,13.13 19.45,10.58 16.3,10.58M18,19.08H13.19L15.81,15H13.31L14.4,13.23H19.18L16.63,17.28H19.18L18,19.08M16.3,3.93V2C8.41,2 2,8.42 2,16.31H3.92C3.94,9.46 9.5,3.93 16.3,3.93M16.3,7.74V5.82C10.5,5.82 5.81,10.53 5.81,16.31H7.73C7.75,11.58 11.59,7.74 16.3,7.74"}"></ha-svg-icon> </h2> ${this.usbSettingsInfo.usbAutoStartServices?a.dy` Asystent automatycznie uruchamia i zatrzymuje domyślne usługi powiązane z obsługiwanymi urządzeniami (zigbee2mqtt, zwave2mqtt). Możesz tę funkcję wyłączyć. `:a.dy` Jeśl chcesz, żeby asystent automatycznie uruchamiał i zatrzymywał domyślne usługi powiązane z obsługiwanymi urządzeniami (zigbee2mqtt, zwave2mqtt), to możesz tę funkcję włączyć. `} <br><br> ${this.usbsetingsValidating?a.dy`<div style="width:100%;text-align:center"> <ha-circular-progress active></ha-circular-progress> </div>`:a.dy` <b>Automatyczny start usług dla urządzeń USB: </b> <ha-switch .checked="${this.usbSettingsInfo.usbAutoStartServices}" @change="${this.switchAutoUsb}"></ha-switch>`} <br> <br> ${this.usbSettingsInfo.usbVoiceNotification?a.dy` <h2> Powiadomienia głosowe o urządzeniach USB <ha-svg-icon slot="icon" path="${"M9,5A4,4 0 0,1 13,9A4,4 0 0,1 9,13A4,4 0 0,1 5,9A4,4 0 0,1 9,5M9,15C11.67,15 17,16.34 17,19V21H1V19C1,16.34 6.33,15 9,15M16.76,5.36C18.78,7.56 18.78,10.61 16.76,12.63L15.08,10.94C15.92,9.76 15.92,8.23 15.08,7.05L16.76,5.36M20.07,2C24,6.05 23.97,12.11 20.07,16L18.44,14.37C21.21,11.19 21.21,6.65 18.44,3.63L20.07,2Z"}"></ha-svg-icon> </h2> Asystent powiadamia komunikatem głosowym o tym, jakie urządzenie USB zostało dodane lub usunięte. Możesz tę funkcję wyłączyć. `:a.dy` <h2> Powiadomienia głosowe o urządzeniach USB <ha-svg-icon slot="icon" path="${"M2,3.27L3.28,2L22,20.72L20.73,22L16.73,18C16.9,18.31 17,18.64 17,19V21H1V19C1,16.34 6.33,15 9,15C10.77,15 13.72,15.59 15.5,16.77L11.12,12.39C10.5,12.78 9.78,13 9,13A4,4 0 0,1 5,9C5,8.22 5.22,7.5 5.61,6.88L2,3.27M9,5A4,4 0 0,1 13,9V9.17L8.83,5H9M16.76,5.36C18.78,7.56 18.78,10.61 16.76,12.63L15.08,10.94C15.92,9.76 15.92,8.23 15.08,7.05L16.76,5.36M20.07,2C24,6.05 23.97,12.11 20.07,16L18.44,14.37C21.21,11.19 21.21,6.65 18.44,3.63L20.07,2Z"}"></ha-svg-icon> </h2> Jeśl chcesz, żeby asystent powiadamiał komunikatem głosowym o tym, jakie urządzenie USB zostało dodane lub usunięte, to możesz tę funkcję włączyć. `} <br><br> ${this.usbsetingsValidating?a.dy`<div style="width:100%;text-align:center"> <ha-circular-progress active></ha-circular-progress> </div>`:a.dy` <b>Powiadomienia głosowe o urządzeniach USB: </b> <ha-switch .checked="${this.usbSettingsInfo.usbVoiceNotification}" @change="${this.switchVoiceForUsb}"></ha-switch>`} </div> </ha-card> </ha-config-section> </div> </hass-subpage> `}},{kind:"get",static:!0,key:"styles",value:function(){return[n.Qx,a.iv`.content{padding-bottom:32px}.border{margin:32px auto 0;border-bottom:1px solid rgba(0,0,0,.12);max-width:1040px}.narrow .border{max-width:640px}.card-actions{display:flex}ha-card>paper-toggle-button{margin:-4px 0;position:absolute;top:32px;right:8px}.center-container{@apply --layout-vertical;@apply --layout-center-center;height:70px}`]}},{kind:"method",key:"switchAutoUsb",value:function(e){this.usbSettingsInfo.usbAutoStartServices=e.target.checked,this.saveUsbSettings()}},{kind:"method",key:"switchVoiceForUsb",value:function(e){this.usbSettingsInfo.usbVoiceNotification=e.target.checked,this.saveUsbSettings()}},{kind:"method",key:"saveUsbSettings",value:async function(){this.usbsetingsValidating=!0;try{const e=await d(this.usbSettingsInfo);this.errorUsbInfo=e.error,this.messageUsbInfo=e.info}catch(e){this.errorUsbInfo=e}this.usbsetingsValidating=!1}}]}}),a.oi)}};
//# sourceMappingURL=66066-TYdgULNujVY.js.map