Metadata-Version: 2.1
Name: OceanColor
Version: 0.1.0
Summary: Deal with NASA Ocean Color data (search and download)
Author: Guilherme Castelao
Author-email: guilherme@castelao.net
License: BSD License
        
        Copyright (c) 2020-2021, Guilherme CastelÃ£o
        All rights reserved.
        
        Redistribution and use in source and binary forms, with or without modification,
        are permitted provided that the following conditions are met:
        
        * Redistributions of source code must retain the above copyright notice, this
          list of conditions and the following disclaimer.
        
        * Redistributions in binary form must reproduce the above copyright notice, this
          list of conditions and the following disclaimer in the documentation and/or
          other materials provided with the distribution.
        
        * Neither the name of the copyright holder nor the names of its
          contributors may be used to endorse or promote products derived from this
          software without specific prior written permission.
        
        THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
        
Project-URL: homepage, https://github.com/castelao/OceanColor
Project-URL: documentation, https://oceancolor.readthedocs.io
Project-URL: repository, https://github.com/castelao/OceanColor
Keywords: NASA,Ocean Color,chlorophyll,oceanography,matchup
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: BSD License
Classifier: Natural Language :: English
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Topic :: Scientific/Engineering
Requires-Python: >=3.8
Description-Content-Type: text/x-rst
License-File: LICENSE
License-File: AUTHORS.rst
Requires-Dist: Click >=8.0
Requires-Dist: numpy >=1.21
Requires-Dist: netCDF4 >=1.5.6
Requires-Dist: pandas >=1.3
Requires-Dist: pyproj >=3.0
Requires-Dist: python-cmr ~=0.9.0
Requires-Dist: requests >=2.27
Requires-Dist: xarray >=0.19
Requires-Dist: fsspec >=2022.1
Requires-Dist: aiohttp >=3.8.1
Provides-Extra: dev
Requires-Dist: black ~=23.9.0 ; extra == 'dev'
Requires-Dist: pyupgrade ~=3.2.2 ; extra == 'dev'
Requires-Dist: pre-commit ~=2.20.0 ; extra == 'dev'
Requires-Dist: sphinx-rtd-theme ~=0.4.3 ; extra == 'dev'
Provides-Extra: parallel
Requires-Dist: dask >=2022.1 ; extra == 'parallel'
Requires-Dist: loky >=2.9 ; extra == 'parallel'
Provides-Extra: s3
Requires-Dist: s3fs >=2022.1 ; extra == 's3'
Requires-Dist: zarr >=2.10 ; extra == 's3'
Provides-Extra: test
Requires-Dist: pytest ; extra == 'test'
Requires-Dist: pytest-cov >=3.0 ; extra == 'test'

===========
Ocean Color
===========

.. image:: https://zenodo.org/badge/318619654.svg
   :target: https://zenodo.org/badge/latestdoi/318619654

.. image:: https://readthedocs.org/projects/oceancolor/badge/?version=latest
        :target: https://oceancolor.readthedocs.io/en/latest/?badge=latest
        :alt: Documentation Status

.. image:: https://img.shields.io/pypi/v/OceanColor.svg
        :target: https://pypi.python.org/pypi/OceanColor

.. image:: https://github.com/castelao/OceanColor/actions/workflows/ci.yml/badge.svg
        :target: https://github.com/castelao/OceanColor/actions

.. image:: https://mybinder.org/badge_logo.svg
   :target: https://mybinder.org/v2/gh/castelao/OceanColor/main?filepath=docs%2Fnotebooks

Search and subset NASA Ocean Color data

* Free software: BSD license
* Documentation: https://oceancolor.readthedocs.io.

NASA provides great resources to search and access its data. This package is
intended to fill a gap in obtaining chlorophyll data to be compared with in
situ observations by searching pixels within a given time and distance tolerance.
For instance, it is used to calibrate chlorophyll fluorescence measurements
from Spray underwater gliders.

The OceanColor package was developed at the `Instrument Development Group
<https://idg.ucsd.edu>`_ of `Scripps Institution of Oceanography
<https://scripps.ucsd.edu>`_ in support for the `California Underwater Glider
Network <https://spraydata.ucsd.edu/projects/CUGN/>`_ operations, which is
funded by:

* Global Ocean Monitoring and Observing (GOMO) Program - NOAA
* Southern California Coastal Ocean Observing System (SCCOOS)

---------------------
Quickstart - terminal
---------------------

Let's install it

.. code-block:: console

    $ pip install OceanColor

or

.. code-block:: console

    $ conda install OceanColor

Let's get the L2 chlorophyll measurements from MODIS-Aqua nearby Scripps' Pier.
On the terminal, let's run:

.. code-block:: console

    $ OceanColor InRange \
      --username=<earthdata-username> \
      --password=<earthdata-password> \
      --data-type=L2 \
      --time-tolerance=12 \
      --distance-tolerance=15e3 \
      2019-05-21T12:00:00,32.867066,-117.257408

Using it inside Python is more flexible than in the terminal. Check the manual
on how to use it.

------------
Alternatives
------------

* `pyModis <https://github.com/lucadelu/pyModis>`_ is a well established and
  mature package. If you are not satisfied with OceanColor, consider using
  pyModis. If you are interested in working with full frames (granules),
  instead of the subset of pixels nearby some reference, pyModis might be
  a better solution for you.
