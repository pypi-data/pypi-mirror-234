{
      "buildin": [
            {
                  "cmd": "version",
                  "desc": "Display RedBoot version information",
                  "paras": ""
            },
            {
                  "cmd": "help",
                  "desc": "build in command help",
                  "paras": "[<topic>]"
            },
            {
                  "cmd": "baudrate",
                  "desc": "Set/Query the system console baud rate",
                  "paras": "-b <rate>"
            },
            {
                  "cmd": "cksum",
                  "desc": "Compute a 32bit checksum [POSIX algorithm] for a range of memory",
                  "paras": "-b <location> -l <length>"
            },
            {
                  "cmd": "reset",
                  "desc": "Reset the system",
                  "paras": ""
            },
            {
                  "cmd": "dtm",
                  "desc": "Danfoss Test Monitor ",
                  "paras": ""
            },
            {
                  "cmd": "go",
                  "desc": "Jump to Address",
                  "paras": "[moc] [-w <timeout>] <entry>"
            },
            {
                  "cmd": "load",
                  "desc": "Load image to Address",
                  "paras": "[dest] [-r] -m <xMODEM/yMODEM> -b <base address>"
            }
      ],
      "dtmaoc": [
            {
                  "cmd": "moc",
                  "desc": "Danfoss Test Monitor Command for MOC",
                  "paras": ""
            },
            {
                  "cmd": "lcp",
                  "desc": "Danfoss Test Monitor Command for lcp",
                  "paras": ""
            },
            {
                  "cmd": "readmem -a 0",
                  "desc": "Read Memory",
                  "paras": "[-{bsl}] [-d] -a <location>"
            },
            {
                  "cmd": "writemem -a 0 -v 0x123456",
                  "desc": "Write Memory",
                  "paras": "[-{bsl}] -a <location> -v <value>"
            },
            {
                  "cmd": "logicmem -a 0 -v 0xffffffff",
                  "desc": "Write Memory with logic",
                  "paras": "[-{bsl}] -a <location> [-v <AND_value>] [-o <OR_value>]"
            },
            {
                  "cmd": "adc",
                  "desc": "Sample AD value",
                  "paras": "[-c <input_chn>] [-n <num_sample>] [-i <interval_time>] [-u (flag for uncalibrated reply)]"
            },
            {
                  "cmd": "pwm",
                  "desc": "Generate output current",
                  "paras": "-c <output_chn> -d <duty_cycle%> [-u (flag for uncalibrated reply)]"
            },
            {
                  "cmd": "fan",
                  "desc": "Generate fan control output",
                  "paras": "-d <duty_cycle%> [-u (flag for disable)]"
            },
            {
                  "cmd": "pulse",
                  "desc": "Generate pulse output",
                  "paras": "-c <output_chn> -f <frequency Hz> [-u (flag for stop the pulse output)]"
            },
            {
                  "cmd": "flash_block_erase",
                  "desc": "Erase designated block of Onchip Flash memory",
                  "paras": "-s <start_block> -e <end_block>"
            },
            {
                  "cmd": "flash_write",
                  "desc": "Write data to Onchip Flash memory",
                  "paras": "-a <start address> -d <byte hex value>"
            },
            {
                  "cmd": "read_ee -a 0 -l 200",
                  "desc": "Read EEPROM data from specified address",
                  "paras": "-a <eeprom address> -l <length> [-n (display n bytes in one line)]"
            },
            {
                  "cmd": "write_ee",
                  "desc": "Write data to EEPROM from specified address",
                  "paras": "-a <eeprom address> -d <byte_hex_values>"
            },
            {
                  "cmd": "ee_cksum8 -a 0 -l 200",
                  "desc": "Calculate 8-bit checksum in eeprom",
                  "paras": "-a <start address> -l <length>"
            },
            {
                  "cmd": "erase_flash",
                  "desc": "Erase one section of External Serial Flash memory",
                  "paras": "-s <section number>"
            },
            {
                  "cmd": "erase_serialflash",
                  "desc": "Erase designated block of External Serial Flash memory",
                  "paras": "-s <start_block> -e <end_block>"
            },
            {
                  "cmd": "read_flash",
                  "desc": "Read data from External Serial Flash memory",
                  "paras": "-a <start address> -l <length>"
            },
            {
                  "cmd": "write_flash",
                  "desc": "Write data to External Serial Flash memory",
                  "paras": "-a <start address> -d <byte hex value>"
            },
            {
                  "cmd": "cksum16 -a 0 -l 0x3000",
                  "desc": "Calculate 16-bit checksum of specified AOC memory range",
                  "paras": "-a <start address> -l <length>"
            },
            {
                  "cmd": "reset",
                  "desc": "Initiate AOC reset sequence",
                  "paras": ""
            },
            {
                  "cmd": "help",
                  "desc": "dtm command help",
                  "paras": "[<topic>]"
            },
            {
                  "cmd": "timeout",
                  "desc": "Set or read AOC timeout value for MOC response",
                  "paras": "[-t <timeout (UNSIGNED32)>]"
            },
            {
                  "cmd": "node_list",
                  "desc": "List CAN nodes",
                  "paras": ""
            },
            {
                  "cmd": "can_tel",
                  "desc": "Send raw can tel.",
                  "paras": "-n node [-r] -t hexdata"
            },
            {
                  "cmd": "can_timeout",
                  "desc": "",
                  "paras": "[-t <timeout in ms>]"
            },
            {
                  "cmd": "can_delay",
                  "desc": "",
                  "paras": "[-t <delay in us>]"
            },
            {
                  "cmd": "can_btsize",
                  "desc": "set blocktransfer size",
                  "paras": "[0|1] (0=42b, 1=252b)"
            },
            {
                  "cmd": "go_normal_mode",
                  "desc": "set work mode to normal mode and jump to app",
                  "paras": ""
            },
            {
                  "cmd": "go_tm_mode",
                  "desc": "set work mode to test monitor mode and jump to tm",
                  "paras": ""
            },
            {
                  "cmd": "get_fid",
                  "desc": "get drive family ID",
                  "paras": ""
            },
            {
                  "cmd": "drive_info",
                  "desc": "read drive indentification",
                  "paras": ""
            },
            {
                  "cmd": "do_service_reset",
                  "desc": "do service reset",
                  "paras": ""
            },
            {
                  "cmd": "num_version",
                  "desc": "Get TestMonitor version by Decimal format",
                  "paras": ""
            },
            {
                  "cmd": "read_version",
                  "desc": "Get TestMonitor version by Decimal format",
                  "paras": "[-v <index (UNSIGNED8)>]"
            },
            {
                  "cmd": "internal_ver",
                  "desc": "Get TestMonitor internal version by Decimal format",
                  "paras": ""
            },
            {
                  "cmd": "baudrate2moc",
                  "desc": "Set/Query the baud rate of aoc2moc communication",
                  "paras": "-b <rate>"
            },
            {
                  "cmd": "platform",
                  "desc": "Get TestMonitor platform numeric value by Decimal format",
                  "paras": ""
            },
            {
                  "cmd": "crc -a 0xfffe8000 -e 0xffff0000",
                  "desc": "Calculate 32-bit checksum of specified AOC memory range",
                  "paras": "[-a Address] [-e EndAddress] [-c ExpectedCRC]"
            }
      ],
      "dtmmoc": [
            {
                  "cmd": "version",
                  "desc": "Get the software version from the MOC",
                  "paras": ""
            },
            {
                  "cmd": "help",
                  "desc": "dtm moc command help",
                  "paras": "[<topic>]"
            },
            {
                  "cmd": "ping",
                  "desc": "Sends ping request to MOC",
                  "paras": ""
            },
            {
                  "cmd": "adc",
                  "desc": "Read MOC ADC",
                  "paras": "[-c <input_chn>] [-n <num_sample>] [-i <interval us>] [-u (flag for uncalibrated reply)]"
            },
            {
                  "cmd": "readmem -a 0 -c 100",
                  "desc": "Read MOC memory location",
                  "paras": "[-{bsl}] [-d] -a <location> -c <length>"
            },
            {
                  "cmd": "writemem",
                  "desc": "Write MOC memory location",
                  "paras": "[-{bsl}] -a <location> -v <value>"
            },
            {
                  "cmd": "logicmem",
                  "desc": "Perform logical AND / OR to a MOC memory location ",
                  "paras": "[-{bsl}] -a <location> [-v <AND_value>] [-o <OR_value>]"
            },
            {
                  "cmd": "read_ee -a 0 -l 200",
                  "desc": "Read EEPROM data from specified address",
                  "paras": "-a <eeprom address> -l <length>"
            },
            {
                  "cmd": "write_ee",
                  "desc": "Write data to EEPROM from specified address",
                  "paras": "-a <eeprom address> -d <byte_hex_values>"
            },
            {
                  "cmd": "ee_cksum8 -a 0 -l 200",
                  "desc": "Calculate 8-bit checksum in Flash(as eeprom)",
                  "paras": "-a <start address> -l <length>"
            },
            {
                  "cmd": "cksum16 -a 0 -l 200",
                  "desc": "Calculate 16-bit checksum for MOC memory",
                  "paras": "-a <start address> -l <length>"
            },
            {
                  "cmd": "flash_block_erase",
                  "desc": "erase designated MOC flash block",
                  "paras": "-s <start_block> -e <end_block>"
            },
            {
                  "cmd": "go",
                  "desc": "Jump to MOC Address",
                  "paras": "[moc] [-w <timeout>] <entry>"
            },
            {
                  "cmd": "load",
                  "desc": "Load image to MOC Address",
                  "paras": "[moc] [-r] -m <xyMODEM> -b <base address>"
            },
            {
                  "cmd": "set_baudrate",
                  "desc": "set baud rate between aoc and moc",
                  "paras": "-b <baud rate>"
            },
            {
                  "cmd": "reset",
                  "desc": "Initiate MOC reset sequence",
                  "paras": ""
            },
            {
                  "cmd": "wdt",
                  "desc": "MOC WDT On/Off control",
                  "paras": "<ctrl>"
            },
            {
                  "cmd": "normal",
                  "desc": "Reset MOC",
                  "paras": ""
            },
            {
                  "cmd": "get_fid",
                  "desc": "get drive family ID",
                  "paras": ""
            },
            {
                  "cmd": "drive_info",
                  "desc": "Read drive indentification",
                  "paras": ""
            },
            {
                  "cmd": "num_version",
                  "desc": "Get TestMonitor version by Decimal format",
                  "paras": ""
            },
            {
                  "cmd": "go_application",
                  "desc": "moc go application",
                  "paras": ""
            },
            {
                  "cmd": "CRC -s 0x08000000 -e 0x0803fffc",
                  "desc": "moc firmware CRC ",
                  "paras": "[-a Address] [-e EndAddress] [-c ExpectedCRC]"
            },
            {
                  "cmd": "internal_ver",
                  "desc": "Get TestMonitor internal version by Decimal format",
                  "paras": ""
            },
            {
                  "cmd": "erase_pd",
                  "desc": "erase production data",
                  "paras": ""
            },
            {
                  "cmd": "erase_fmlog",
                  "desc": "erase fire mode log",
                  "paras": ""
            }
      ]
}