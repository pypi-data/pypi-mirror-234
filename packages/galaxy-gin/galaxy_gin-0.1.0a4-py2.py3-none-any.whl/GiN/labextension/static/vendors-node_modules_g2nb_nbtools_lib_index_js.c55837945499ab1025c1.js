"use strict";
(self["webpackChunkGiN"] = self["webpackChunkGiN"] || []).push([["vendors-node_modules_g2nb_nbtools_lib_index_js"],{

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/@g2nb/nbtools/style/basewidget.css":
/*!***********************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/@g2nb/nbtools/style/basewidget.css ***!
  \***********************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../css-loader/dist/runtime/sourceMaps.js */ "./node_modules/css-loader/dist/runtime/sourceMaps.js");
/* harmony import */ var _css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js");
/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, ".nbtools {\n    margin-bottom: 0;\n    width: 100%;\n    max-width: 100%;\n    overflow: visible !important;\n    border: 1px solid var(--jp-border-color1);\n    border-radius: 2px;\n    background: var(--jp-layout-color0);\n}\n\n.nbtools .nbtools-header {\n    background-color: var(--jp-layout-color4);\n    color: #FFFFFF;\n    padding: 7px;\n}\n\n.nbtools-logo {\n    height: 20px !important;\n    padding-right: 10px;\n}\n\n.nbtools-logo-hidden {\n    visibility: hidden;\n    width: 0;\n}\n\n.nbtools-title {\n    margin: 0;\n    line-height: 25px;\n    position: absolute;\n    font-size: 1.1em;\n}\n\n.nbtools-subtitle {\n    position: absolute;\n    right: 75px;\n    text-align: right;\n    line-height: 25px;\n    font-size: 0.9em;\n}\n\n.nbtools-controls {\n    position: absolute;\n    right: 5px;\n    top: 5px;\n    text-align: right;\n}\n\n.nbtools-controls > button {\n    border-width: 1px;\n    width: 25px;\n    padding-right: 0;\n    padding-left: 0;\n    height: 25px;\n    border-radius: 2px;\n    color: var(--jp-ui-font-color1);\n    background-color: var(--jp-layout-color0);\n    border-color: var(--jp-border-color2);\n}\n\n.nbtools-controls > button.nbtools-gear {\n    width: 30px;\n}\n\n.nbtools-menu {\n    display: block;\n    position: absolute;\n    top: 28px;\n    right: 0;\n    margin: 0;\n    background: var(--jp-layout-color0);\n    color: var(--jp-ui-font-color0);\n    border: solid 1px var(--jp-border-color1);\n    padding: 5px 0 5px 0;\n    list-style-type: none;\n    cursor: pointer;\n    z-index: 4;\n    white-space: nowrap;\n}\n\n.nbtools-menu > li {\n    padding: 3px 10px 3px 10px;\n}\n\n.nbtools-menu > li:hover {\n    background-color: var(--jp-layout-color2);\n}\n\n.nbtools-body {\n    padding: 10px;\n    position: relative;\n}\n\n.nbtools .nbtools-description {\n    position: relative;\n    left: -10px;\n    top: -10px;\n    width: 100%;\n    background-color: var(--jp-layout-color2);\n    padding: 10px;\n}\n\n.nbtools-toggle {\n\tdisplay: block;\n\theight: auto;\n\topacity: 1;\n\toverflow: hidden;\n\ttransition: height 350ms ease-in-out, opacity 750ms ease-in-out;\n}\n\n.nbtools-toggle.nbtools-hidden {\n\tdisplay: none;\n\theight: 0;\n\topacity: 0;\n}\n\n.nbtools div.widget-box,\n.nbtools div.widget-gridbox {\n    overflow: visible !important;\n}\n\n.nbtools.jupyter-widgets-disconnected::before,\n.nbtools .jupyter-widgets-disconnected::before {\n    position: absolute;\n}\n\n.nbtools-disconnected {\n    display: none;\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    background-color: var(--jp-ui-inverse-font-color3);\n    z-index: 2;\n}\n\n.jupyter-widgets-disconnected > .nbtools-disconnected {\n    display: block;\n}\n\n.nbtools-disconnected > .nbtools-panel {\n    width: 50%;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%,-50%);\n}\n\n.nbtools-panel {\n    margin-bottom: 0;\n    width: 100%;\n    max-width: 100%;\n    overflow: visible !important;\n    border: 1px solid var(--jp-border-color0);\n    border-radius: 2px;\n    background-color: var(--jp-layout-color1);\n}\n\ndiv.nbtools-connect,\ndiv.nbtools-panel-button {\n    text-align: center;\n    margin-top: 10px;\n}\n\nbutton.nbtools-connect,\nbutton.nbtools-panel-button {\n    background-color: var(--jp-layout-color4);\n    color: #FFFFFF;\n    border: 1px solid var(--jp-border-color1);\n    padding: 6px 12px;\n    font-size: 0.9em;\n    cursor: pointer;\n}\n\n\n/* Hack fix for floating menus */\n\ndiv.jupyter-widgets,\n.lm-Widget.jp-OutputPrompt.jp-OutputArea-prompt,\n.lm-Widget.p-Widget.jp-OutputArea,\n.lm-Widget.lm-Widget.jp-OutputArea,\n.lm-Widget.lm-Panel.jp-OutputArea,\n.lm-Widget.lm-Panel.jp-OutputArea-child,\n.lm-Widget.lm-Panel.jp-OutputArea-output,\n.lm-Widget.jp-OutputArea.jp-Cell-outputArea {\n    overflow: visible !important;\n}", "",{"version":3,"sources":["webpack://./node_modules/@g2nb/nbtools/style/basewidget.css"],"names":[],"mappings":"AAAA;IACI,gBAAgB;IAChB,WAAW;IACX,eAAe;IACf,4BAA4B;IAC5B,yCAAyC;IACzC,kBAAkB;IAClB,mCAAmC;AACvC;;AAEA;IACI,yCAAyC;IACzC,cAAc;IACd,YAAY;AAChB;;AAEA;IACI,uBAAuB;IACvB,mBAAmB;AACvB;;AAEA;IACI,kBAAkB;IAClB,QAAQ;AACZ;;AAEA;IACI,SAAS;IACT,iBAAiB;IACjB,kBAAkB;IAClB,gBAAgB;AACpB;;AAEA;IACI,kBAAkB;IAClB,WAAW;IACX,iBAAiB;IACjB,iBAAiB;IACjB,gBAAgB;AACpB;;AAEA;IACI,kBAAkB;IAClB,UAAU;IACV,QAAQ;IACR,iBAAiB;AACrB;;AAEA;IACI,iBAAiB;IACjB,WAAW;IACX,gBAAgB;IAChB,eAAe;IACf,YAAY;IACZ,kBAAkB;IAClB,+BAA+B;IAC/B,yCAAyC;IACzC,qCAAqC;AACzC;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,cAAc;IACd,kBAAkB;IAClB,SAAS;IACT,QAAQ;IACR,SAAS;IACT,mCAAmC;IACnC,+BAA+B;IAC/B,yCAAyC;IACzC,oBAAoB;IACpB,qBAAqB;IACrB,eAAe;IACf,UAAU;IACV,mBAAmB;AACvB;;AAEA;IACI,0BAA0B;AAC9B;;AAEA;IACI,yCAAyC;AAC7C;;AAEA;IACI,aAAa;IACb,kBAAkB;AACtB;;AAEA;IACI,kBAAkB;IAClB,WAAW;IACX,UAAU;IACV,WAAW;IACX,yCAAyC;IACzC,aAAa;AACjB;;AAEA;CACC,cAAc;CACd,YAAY;CACZ,UAAU;CACV,gBAAgB;CAChB,+DAA+D;AAChE;;AAEA;CACC,aAAa;CACb,SAAS;CACT,UAAU;AACX;;AAEA;;IAEI,4BAA4B;AAChC;;AAEA;;IAEI,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,kBAAkB;IAClB,MAAM;IACN,SAAS;IACT,OAAO;IACP,QAAQ;IACR,kDAAkD;IAClD,UAAU;AACd;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,UAAU;IACV,kBAAkB;IAClB,QAAQ;IACR,SAAS;IACT,+BAA+B;AACnC;;AAEA;IACI,gBAAgB;IAChB,WAAW;IACX,eAAe;IACf,4BAA4B;IAC5B,yCAAyC;IACzC,kBAAkB;IAClB,yCAAyC;AAC7C;;AAEA;;IAEI,kBAAkB;IAClB,gBAAgB;AACpB;;AAEA;;IAEI,yCAAyC;IACzC,cAAc;IACd,yCAAyC;IACzC,iBAAiB;IACjB,gBAAgB;IAChB,eAAe;AACnB;;;AAGA,gCAAgC;;AAEhC;;;;;;;;IAQI,4BAA4B;AAChC","sourcesContent":[".nbtools {\n    margin-bottom: 0;\n    width: 100%;\n    max-width: 100%;\n    overflow: visible !important;\n    border: 1px solid var(--jp-border-color1);\n    border-radius: 2px;\n    background: var(--jp-layout-color0);\n}\n\n.nbtools .nbtools-header {\n    background-color: var(--jp-layout-color4);\n    color: #FFFFFF;\n    padding: 7px;\n}\n\n.nbtools-logo {\n    height: 20px !important;\n    padding-right: 10px;\n}\n\n.nbtools-logo-hidden {\n    visibility: hidden;\n    width: 0;\n}\n\n.nbtools-title {\n    margin: 0;\n    line-height: 25px;\n    position: absolute;\n    font-size: 1.1em;\n}\n\n.nbtools-subtitle {\n    position: absolute;\n    right: 75px;\n    text-align: right;\n    line-height: 25px;\n    font-size: 0.9em;\n}\n\n.nbtools-controls {\n    position: absolute;\n    right: 5px;\n    top: 5px;\n    text-align: right;\n}\n\n.nbtools-controls > button {\n    border-width: 1px;\n    width: 25px;\n    padding-right: 0;\n    padding-left: 0;\n    height: 25px;\n    border-radius: 2px;\n    color: var(--jp-ui-font-color1);\n    background-color: var(--jp-layout-color0);\n    border-color: var(--jp-border-color2);\n}\n\n.nbtools-controls > button.nbtools-gear {\n    width: 30px;\n}\n\n.nbtools-menu {\n    display: block;\n    position: absolute;\n    top: 28px;\n    right: 0;\n    margin: 0;\n    background: var(--jp-layout-color0);\n    color: var(--jp-ui-font-color0);\n    border: solid 1px var(--jp-border-color1);\n    padding: 5px 0 5px 0;\n    list-style-type: none;\n    cursor: pointer;\n    z-index: 4;\n    white-space: nowrap;\n}\n\n.nbtools-menu > li {\n    padding: 3px 10px 3px 10px;\n}\n\n.nbtools-menu > li:hover {\n    background-color: var(--jp-layout-color2);\n}\n\n.nbtools-body {\n    padding: 10px;\n    position: relative;\n}\n\n.nbtools .nbtools-description {\n    position: relative;\n    left: -10px;\n    top: -10px;\n    width: 100%;\n    background-color: var(--jp-layout-color2);\n    padding: 10px;\n}\n\n.nbtools-toggle {\n\tdisplay: block;\n\theight: auto;\n\topacity: 1;\n\toverflow: hidden;\n\ttransition: height 350ms ease-in-out, opacity 750ms ease-in-out;\n}\n\n.nbtools-toggle.nbtools-hidden {\n\tdisplay: none;\n\theight: 0;\n\topacity: 0;\n}\n\n.nbtools div.widget-box,\n.nbtools div.widget-gridbox {\n    overflow: visible !important;\n}\n\n.nbtools.jupyter-widgets-disconnected::before,\n.nbtools .jupyter-widgets-disconnected::before {\n    position: absolute;\n}\n\n.nbtools-disconnected {\n    display: none;\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    background-color: var(--jp-ui-inverse-font-color3);\n    z-index: 2;\n}\n\n.jupyter-widgets-disconnected > .nbtools-disconnected {\n    display: block;\n}\n\n.nbtools-disconnected > .nbtools-panel {\n    width: 50%;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%,-50%);\n}\n\n.nbtools-panel {\n    margin-bottom: 0;\n    width: 100%;\n    max-width: 100%;\n    overflow: visible !important;\n    border: 1px solid var(--jp-border-color0);\n    border-radius: 2px;\n    background-color: var(--jp-layout-color1);\n}\n\ndiv.nbtools-connect,\ndiv.nbtools-panel-button {\n    text-align: center;\n    margin-top: 10px;\n}\n\nbutton.nbtools-connect,\nbutton.nbtools-panel-button {\n    background-color: var(--jp-layout-color4);\n    color: #FFFFFF;\n    border: 1px solid var(--jp-border-color1);\n    padding: 6px 12px;\n    font-size: 0.9em;\n    cursor: pointer;\n}\n\n\n/* Hack fix for floating menus */\n\ndiv.jupyter-widgets,\n.lm-Widget.jp-OutputPrompt.jp-OutputArea-prompt,\n.lm-Widget.p-Widget.jp-OutputArea,\n.lm-Widget.lm-Widget.jp-OutputArea,\n.lm-Widget.lm-Panel.jp-OutputArea,\n.lm-Widget.lm-Panel.jp-OutputArea-child,\n.lm-Widget.lm-Panel.jp-OutputArea-output,\n.lm-Widget.jp-OutputArea.jp-Cell-outputArea {\n    overflow: visible !important;\n}"],"sourceRoot":""}]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/@g2nb/nbtools/style/uibuilder.css":
/*!**********************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/@g2nb/nbtools/style/uibuilder.css ***!
  \**********************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../css-loader/dist/runtime/sourceMaps.js */ "./node_modules/css-loader/dist/runtime/sourceMaps.js");
/* harmony import */ var _css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js");
/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, ".nbtools-uibuilder .nbtools-description {\n    min-height: 18px;\n    padding-right: 60px;\n    width: calc(100% - 50px);\n}\n\n.nbtools-error {\n    padding: var(--jp-notebook-padding);\n    border: var(--jp-error-color2) var(--jp-border-width) solid transparent;\n    border-radius: var(--jp-border-radius);\n    color: var(--jp-error-color0);\n    background-color: var(--jp-error-color3);\n    margin-bottom: 10px;\n}\n\n.nbtools-info {\n    padding: var(--jp-notebook-padding);\n    border: var(--jp-info-color2) var(--jp-border-width) solid transparent;\n    border-radius: var(--jp-border-radius);\n    color: var(--jp-info-color0);\n    background-color: var(--jp-info-color3);\n    margin-bottom: 10px;\n}\n\n.nbtools-run {\n    z-index: 1;\n    background-color: var(--jp-layout-color4);\n    color: #FFFFFF;\n    border: 1px solid var(--jp-border-color1);\n    padding: 6px 12px;\n    font-size: 0.9em;\n    cursor: pointer;\n}\n\n.nbtools-buttons {\n    position: absolute;\n    z-index: 1;\n}\n\n.nbtools-buttons > button {\n    z-index: 1;\n    background-color: var(--jp-layout-color3);\n    border: 1px solid var(--jp-border-color1);\n    padding: 6px 12px;\n    font-size: 0.9em;\n    cursor: pointer;\n    color: #FFFFFF;\n}\n\n.nbtools-buttons > button:hover,\n.nbtools-buttons > button:active {\n    background-color: var(--jp-layout-color4);\n}\n\n.nbtools-buttons:first-child {\n    right: 5px;\n    top: 4px;\n}\n\n.nbtools-buttons:last-child {\n    right: 5px;\n    bottom: 5px;\n}\n\n.nbtools-uibuilder .widget-interact {\n    overflow: visible;\n}\n\n.nbtools .jupyter-button.hidden {\n    display: none;\n}\n\n.nbtools-input > div.widget-label:first-child {\n    font-weight: bold;\n    text-align: right;\n    padding-right: 20px;\n}\n\n.nbtools-input > div.widget-label:last-child {\n    height: auto;\n    min-height: 5px;\n    max-width: 100%;\n    overflow: hidden !important;\n}\n\n.nbtools-input.missing {\n    border: red solid 2px;\n}\n\n.nbtools-passwordinput input[type=password] {\n    box-sizing: border-box;\n    border: var(--jp-widgets-input-border-width) solid var(--jp-widgets-input-border-color);\n    background-color: var(--jp-widgets-input-background-color);\n    color: var(--jp-widgets-input-color);\n    font-size: var(--jp-widgets-font-size);\n    flex-grow: 1;\n    min-width: 0;\n    flex-shrink: 1;\n    outline: currentcolor none medium !important;\n    height: var(--jp-widgets-inline-height);\n    line-height: var(--jp-widgets-inline-height);\n}\n\n.nbtools .widget-dropdown > select,\n.nbtools .widget-dropdown > input {\n  width: 100%;\n}\n\n.nbtools .widget-upload {\n  margin-right: 2px;\n}\n\n.nbtools-fileinput .widget-vbox,\n.nbtools-fileinput .widget-text {\n    width: 100%;\n}\n\n.widget-interact > .nbtools-input:last-child {\n    position: relative;\n    top: 13px;\n    z-index: 1;\n    height: 0;\n    overflow: visible;\n}\n\n.nbtools-footer {\n    position: relative;\n    left: -10px;\n    top: 10px;\n    width: 100%;\n    background-color: var(--jp-layout-color2);\n    padding: 10px;\n    min-height: 18px;\n}\n\n.nbtools-dropdown {\n    position: relative;\n    display: inline-flex;\n    width: 100%;\n}\n\n.nbtools-dropdown::before{\n    position: absolute;\n    content: \" \\f078\";\n    top: 5px;\n    right: 0;\n    height: 20px;\n    width: 20px;\n    font-size: 14px;\n    font-family: \"Font Awesome 5 Free\";\n    font-weight: 900;\n    font-style: normal;\n    font-variant: normal;\n    text-rendering: auto;\n}\n.nbtools-uibuilder .nbtools-file-menu {\n    left: 0;\n    right: 0;\n    top: 27px;\n    max-height: 300px;\n    overflow-y: auto;\n    overflow-x: hidden;\n    z-index: 7;\n}\n\n.nbtools-group-header {\n    background-color: var(--jp-layout-color4);\n    color: var(--jp-ui-inverse-font-color0);\n    font-weight: bold;\n    padding: 5px 5px 5px 10px;\n    margin: 5px 0 5px 0;\n    min-height: 25px;\n    line-height: 25px;\n    position: relative;\n}\n\n.nbtools-group > .nbtools-description {\n    top: -5px;\n    left: 0;\n    padding: 10px;\n    width: calc(100% - 20px);\n}\n\n.nbtools-advanced {\n    display: none;\n}\n\n.nbtools-advanced.nbtools-advanced-show {\n    display: block;\n}\n\n.nbtools-busy {\n    position: absolute;\n    right: 0;\n    left: 0;\n    top: 0;\n    bottom: 0;\n    background-color: rgba(0, 0, 0, 0.1);\n    z-index: 3;\n    font-size: 100px;\n    overflow: hidden;\n    display: none;\n}\n\n.nbtools-busy > div {\n    position: relative;\n    width: 100%;\n    height: 100%;\n}\n\n.nbtools-busy > div > i {\n    top: 20px;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    position: absolute;\n    margin: 0;\n    margin-right: -50%;\n}\n\n.nbtools-dialog {\n    display: block;\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    background-color: var(--jp-ui-inverse-font-color3);\n    z-index: 2;\n}\n\n.nbtools-dialog > .nbtools-panel {\n    height: auto;\n    width: 50%;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%,-50%);\n}\n\n.nbtools-dialog > .nbtools-panel > .nbtools-body {\n    height: calc(100% - 60px);\n}\n\n.nbtools-dialog > .nbtools-panel > .nbtools-body > p {\n    height: calc(100% - 30px);\n    max-height: 300px;\n    overflow-x: hidden;\n    overflow-y: auto;\n}\n\n.nbtools-panel-cancel {\n    border: 1px solid var(--jp-border-color1);\n    padding: 6px 12px;\n    font-size: 0.9em;\n    cursor: pointer;\n}", "",{"version":3,"sources":["webpack://./node_modules/@g2nb/nbtools/style/uibuilder.css"],"names":[],"mappings":"AAAA;IACI,gBAAgB;IAChB,mBAAmB;IACnB,wBAAwB;AAC5B;;AAEA;IACI,mCAAmC;IACnC,uEAAuE;IACvE,sCAAsC;IACtC,6BAA6B;IAC7B,wCAAwC;IACxC,mBAAmB;AACvB;;AAEA;IACI,mCAAmC;IACnC,sEAAsE;IACtE,sCAAsC;IACtC,4BAA4B;IAC5B,uCAAuC;IACvC,mBAAmB;AACvB;;AAEA;IACI,UAAU;IACV,yCAAyC;IACzC,cAAc;IACd,yCAAyC;IACzC,iBAAiB;IACjB,gBAAgB;IAChB,eAAe;AACnB;;AAEA;IACI,kBAAkB;IAClB,UAAU;AACd;;AAEA;IACI,UAAU;IACV,yCAAyC;IACzC,yCAAyC;IACzC,iBAAiB;IACjB,gBAAgB;IAChB,eAAe;IACf,cAAc;AAClB;;AAEA;;IAEI,yCAAyC;AAC7C;;AAEA;IACI,UAAU;IACV,QAAQ;AACZ;;AAEA;IACI,UAAU;IACV,WAAW;AACf;;AAEA;IACI,iBAAiB;AACrB;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,iBAAiB;IACjB,iBAAiB;IACjB,mBAAmB;AACvB;;AAEA;IACI,YAAY;IACZ,eAAe;IACf,eAAe;IACf,2BAA2B;AAC/B;;AAEA;IACI,qBAAqB;AACzB;;AAEA;IACI,sBAAsB;IACtB,uFAAuF;IACvF,0DAA0D;IAC1D,oCAAoC;IACpC,sCAAsC;IACtC,YAAY;IACZ,YAAY;IACZ,cAAc;IACd,4CAA4C;IAC5C,uCAAuC;IACvC,4CAA4C;AAChD;;AAEA;;EAEE,WAAW;AACb;;AAEA;EACE,iBAAiB;AACnB;;AAEA;;IAEI,WAAW;AACf;;AAEA;IACI,kBAAkB;IAClB,SAAS;IACT,UAAU;IACV,SAAS;IACT,iBAAiB;AACrB;;AAEA;IACI,kBAAkB;IAClB,WAAW;IACX,SAAS;IACT,WAAW;IACX,yCAAyC;IACzC,aAAa;IACb,gBAAgB;AACpB;;AAEA;IACI,kBAAkB;IAClB,oBAAoB;IACpB,WAAW;AACf;;AAEA;IACI,kBAAkB;IAClB,iBAAiB;IACjB,QAAQ;IACR,QAAQ;IACR,YAAY;IACZ,WAAW;IACX,eAAe;IACf,kCAAkC;IAClC,gBAAgB;IAChB,kBAAkB;IAClB,oBAAoB;IACpB,oBAAoB;AACxB;AACA;IACI,OAAO;IACP,QAAQ;IACR,SAAS;IACT,iBAAiB;IACjB,gBAAgB;IAChB,kBAAkB;IAClB,UAAU;AACd;;AAEA;IACI,yCAAyC;IACzC,uCAAuC;IACvC,iBAAiB;IACjB,yBAAyB;IACzB,mBAAmB;IACnB,gBAAgB;IAChB,iBAAiB;IACjB,kBAAkB;AACtB;;AAEA;IACI,SAAS;IACT,OAAO;IACP,aAAa;IACb,wBAAwB;AAC5B;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,kBAAkB;IAClB,QAAQ;IACR,OAAO;IACP,MAAM;IACN,SAAS;IACT,oCAAoC;IACpC,UAAU;IACV,gBAAgB;IAChB,gBAAgB;IAChB,aAAa;AACjB;;AAEA;IACI,kBAAkB;IAClB,WAAW;IACX,YAAY;AAChB;;AAEA;IACI,SAAS;IACT,SAAS;IACT,gCAAgC;IAChC,kBAAkB;IAClB,SAAS;IACT,kBAAkB;AACtB;;AAEA;IACI,cAAc;IACd,kBAAkB;IAClB,MAAM;IACN,SAAS;IACT,OAAO;IACP,QAAQ;IACR,kDAAkD;IAClD,UAAU;AACd;;AAEA;IACI,YAAY;IACZ,UAAU;IACV,kBAAkB;IAClB,QAAQ;IACR,SAAS;IACT,+BAA+B;AACnC;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,yBAAyB;IACzB,iBAAiB;IACjB,kBAAkB;IAClB,gBAAgB;AACpB;;AAEA;IACI,yCAAyC;IACzC,iBAAiB;IACjB,gBAAgB;IAChB,eAAe;AACnB","sourcesContent":[".nbtools-uibuilder .nbtools-description {\n    min-height: 18px;\n    padding-right: 60px;\n    width: calc(100% - 50px);\n}\n\n.nbtools-error {\n    padding: var(--jp-notebook-padding);\n    border: var(--jp-error-color2) var(--jp-border-width) solid transparent;\n    border-radius: var(--jp-border-radius);\n    color: var(--jp-error-color0);\n    background-color: var(--jp-error-color3);\n    margin-bottom: 10px;\n}\n\n.nbtools-info {\n    padding: var(--jp-notebook-padding);\n    border: var(--jp-info-color2) var(--jp-border-width) solid transparent;\n    border-radius: var(--jp-border-radius);\n    color: var(--jp-info-color0);\n    background-color: var(--jp-info-color3);\n    margin-bottom: 10px;\n}\n\n.nbtools-run {\n    z-index: 1;\n    background-color: var(--jp-layout-color4);\n    color: #FFFFFF;\n    border: 1px solid var(--jp-border-color1);\n    padding: 6px 12px;\n    font-size: 0.9em;\n    cursor: pointer;\n}\n\n.nbtools-buttons {\n    position: absolute;\n    z-index: 1;\n}\n\n.nbtools-buttons > button {\n    z-index: 1;\n    background-color: var(--jp-layout-color3);\n    border: 1px solid var(--jp-border-color1);\n    padding: 6px 12px;\n    font-size: 0.9em;\n    cursor: pointer;\n    color: #FFFFFF;\n}\n\n.nbtools-buttons > button:hover,\n.nbtools-buttons > button:active {\n    background-color: var(--jp-layout-color4);\n}\n\n.nbtools-buttons:first-child {\n    right: 5px;\n    top: 4px;\n}\n\n.nbtools-buttons:last-child {\n    right: 5px;\n    bottom: 5px;\n}\n\n.nbtools-uibuilder .widget-interact {\n    overflow: visible;\n}\n\n.nbtools .jupyter-button.hidden {\n    display: none;\n}\n\n.nbtools-input > div.widget-label:first-child {\n    font-weight: bold;\n    text-align: right;\n    padding-right: 20px;\n}\n\n.nbtools-input > div.widget-label:last-child {\n    height: auto;\n    min-height: 5px;\n    max-width: 100%;\n    overflow: hidden !important;\n}\n\n.nbtools-input.missing {\n    border: red solid 2px;\n}\n\n.nbtools-passwordinput input[type=password] {\n    box-sizing: border-box;\n    border: var(--jp-widgets-input-border-width) solid var(--jp-widgets-input-border-color);\n    background-color: var(--jp-widgets-input-background-color);\n    color: var(--jp-widgets-input-color);\n    font-size: var(--jp-widgets-font-size);\n    flex-grow: 1;\n    min-width: 0;\n    flex-shrink: 1;\n    outline: currentcolor none medium !important;\n    height: var(--jp-widgets-inline-height);\n    line-height: var(--jp-widgets-inline-height);\n}\n\n.nbtools .widget-dropdown > select,\n.nbtools .widget-dropdown > input {\n  width: 100%;\n}\n\n.nbtools .widget-upload {\n  margin-right: 2px;\n}\n\n.nbtools-fileinput .widget-vbox,\n.nbtools-fileinput .widget-text {\n    width: 100%;\n}\n\n.widget-interact > .nbtools-input:last-child {\n    position: relative;\n    top: 13px;\n    z-index: 1;\n    height: 0;\n    overflow: visible;\n}\n\n.nbtools-footer {\n    position: relative;\n    left: -10px;\n    top: 10px;\n    width: 100%;\n    background-color: var(--jp-layout-color2);\n    padding: 10px;\n    min-height: 18px;\n}\n\n.nbtools-dropdown {\n    position: relative;\n    display: inline-flex;\n    width: 100%;\n}\n\n.nbtools-dropdown::before{\n    position: absolute;\n    content: \" \\f078\";\n    top: 5px;\n    right: 0;\n    height: 20px;\n    width: 20px;\n    font-size: 14px;\n    font-family: \"Font Awesome 5 Free\";\n    font-weight: 900;\n    font-style: normal;\n    font-variant: normal;\n    text-rendering: auto;\n}\n.nbtools-uibuilder .nbtools-file-menu {\n    left: 0;\n    right: 0;\n    top: 27px;\n    max-height: 300px;\n    overflow-y: auto;\n    overflow-x: hidden;\n    z-index: 7;\n}\n\n.nbtools-group-header {\n    background-color: var(--jp-layout-color4);\n    color: var(--jp-ui-inverse-font-color0);\n    font-weight: bold;\n    padding: 5px 5px 5px 10px;\n    margin: 5px 0 5px 0;\n    min-height: 25px;\n    line-height: 25px;\n    position: relative;\n}\n\n.nbtools-group > .nbtools-description {\n    top: -5px;\n    left: 0;\n    padding: 10px;\n    width: calc(100% - 20px);\n}\n\n.nbtools-advanced {\n    display: none;\n}\n\n.nbtools-advanced.nbtools-advanced-show {\n    display: block;\n}\n\n.nbtools-busy {\n    position: absolute;\n    right: 0;\n    left: 0;\n    top: 0;\n    bottom: 0;\n    background-color: rgba(0, 0, 0, 0.1);\n    z-index: 3;\n    font-size: 100px;\n    overflow: hidden;\n    display: none;\n}\n\n.nbtools-busy > div {\n    position: relative;\n    width: 100%;\n    height: 100%;\n}\n\n.nbtools-busy > div > i {\n    top: 20px;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    position: absolute;\n    margin: 0;\n    margin-right: -50%;\n}\n\n.nbtools-dialog {\n    display: block;\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    background-color: var(--jp-ui-inverse-font-color3);\n    z-index: 2;\n}\n\n.nbtools-dialog > .nbtools-panel {\n    height: auto;\n    width: 50%;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%,-50%);\n}\n\n.nbtools-dialog > .nbtools-panel > .nbtools-body {\n    height: calc(100% - 60px);\n}\n\n.nbtools-dialog > .nbtools-panel > .nbtools-body > p {\n    height: calc(100% - 30px);\n    max-height: 300px;\n    overflow-x: hidden;\n    overflow-y: auto;\n}\n\n.nbtools-panel-cancel {\n    border: 1px solid var(--jp-border-color1);\n    padding: 6px 12px;\n    font-size: 0.9em;\n    cursor: pointer;\n}"],"sourceRoot":""}]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/@g2nb/nbtools/style/uioutput.css":
/*!*********************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/@g2nb/nbtools/style/uioutput.css ***!
  \*********************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../css-loader/dist/runtime/sourceMaps.js */ "./node_modules/css-loader/dist/runtime/sourceMaps.js");
/* harmony import */ var _css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js");
/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, ".nbtools-status {\n    width: 33%;\n    float: left;\n    padding-right: 10px;\n    text-align: right;\n    color: var(--jp-cell-inprompt-font-color);\n    font-family: monospace;\n}\n\n.nbtools-files {\n    width: calc(66% - 30px);\n    float: right;\n    padding-left: 20px;\n    position: relative;\n}\n\n.nbtools-file {\n    display: block;\n    color: var(--jp-content-link-color);\n    text-decoration: none;\n    line-break: anywhere;\n}\n\n.nbtools-file-menu {\n    left: 0;\n    right: auto;\n    top: 20px;\n    z-index: 7;\n}\n\n.nbtools-menu-header,\n.nbtools-menu-header:hover {\n    background-color: var(--jp-layout-color0) !important;\n    cursor: text;\n    color: var(--jp-ui-font-color2);\n    font-weight: bold;\n}\n\n.nbtools-menu-subitem {\n    padding-left: 20px;\n}\n\n.nbtools-status::after,\n.nbtools-files::after {\n  content: \"\";\n  clear: both;\n  display: table;\n}\n\n.nbtools-text {\n    font-family: monospace;\n    padding-top: 5px !important;\n    width: 100%;\n}\n\n.nbtools-visualization {\n    margin-top: 0;\n}\n\n.nbtools-visualization-iframe {\n    width: 100%;\n    height: 500px;\n    overflow: auto;\n    border: 1px solid var(--jp-border-color2);\n    margin-top: 10px;\n}\n\n.nbtools-appendix .nbtools-logo,\n.nbtools-appendix .nbtools-gear,\n.nbtools-appendix .nbtools-description {\n    display: none !important;\n}\n\n.nbtools-appendix .nbtools-header {\n    background-color: var(--jp-layout-color4) !important;\n    min-height: 23px;\n}\n\n.nbtools-appendix .nbtools {\n    margin-bottom: 5px;\n}", "",{"version":3,"sources":["webpack://./node_modules/@g2nb/nbtools/style/uioutput.css"],"names":[],"mappings":"AAAA;IACI,UAAU;IACV,WAAW;IACX,mBAAmB;IACnB,iBAAiB;IACjB,yCAAyC;IACzC,sBAAsB;AAC1B;;AAEA;IACI,uBAAuB;IACvB,YAAY;IACZ,kBAAkB;IAClB,kBAAkB;AACtB;;AAEA;IACI,cAAc;IACd,mCAAmC;IACnC,qBAAqB;IACrB,oBAAoB;AACxB;;AAEA;IACI,OAAO;IACP,WAAW;IACX,SAAS;IACT,UAAU;AACd;;AAEA;;IAEI,oDAAoD;IACpD,YAAY;IACZ,+BAA+B;IAC/B,iBAAiB;AACrB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;;EAEE,WAAW;EACX,WAAW;EACX,cAAc;AAChB;;AAEA;IACI,sBAAsB;IACtB,2BAA2B;IAC3B,WAAW;AACf;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,WAAW;IACX,aAAa;IACb,cAAc;IACd,yCAAyC;IACzC,gBAAgB;AACpB;;AAEA;;;IAGI,wBAAwB;AAC5B;;AAEA;IACI,oDAAoD;IACpD,gBAAgB;AACpB;;AAEA;IACI,kBAAkB;AACtB","sourcesContent":[".nbtools-status {\n    width: 33%;\n    float: left;\n    padding-right: 10px;\n    text-align: right;\n    color: var(--jp-cell-inprompt-font-color);\n    font-family: monospace;\n}\n\n.nbtools-files {\n    width: calc(66% - 30px);\n    float: right;\n    padding-left: 20px;\n    position: relative;\n}\n\n.nbtools-file {\n    display: block;\n    color: var(--jp-content-link-color);\n    text-decoration: none;\n    line-break: anywhere;\n}\n\n.nbtools-file-menu {\n    left: 0;\n    right: auto;\n    top: 20px;\n    z-index: 7;\n}\n\n.nbtools-menu-header,\n.nbtools-menu-header:hover {\n    background-color: var(--jp-layout-color0) !important;\n    cursor: text;\n    color: var(--jp-ui-font-color2);\n    font-weight: bold;\n}\n\n.nbtools-menu-subitem {\n    padding-left: 20px;\n}\n\n.nbtools-status::after,\n.nbtools-files::after {\n  content: \"\";\n  clear: both;\n  display: table;\n}\n\n.nbtools-text {\n    font-family: monospace;\n    padding-top: 5px !important;\n    width: 100%;\n}\n\n.nbtools-visualization {\n    margin-top: 0;\n}\n\n.nbtools-visualization-iframe {\n    width: 100%;\n    height: 500px;\n    overflow: auto;\n    border: 1px solid var(--jp-border-color2);\n    margin-top: 10px;\n}\n\n.nbtools-appendix .nbtools-logo,\n.nbtools-appendix .nbtools-gear,\n.nbtools-appendix .nbtools-description {\n    display: none !important;\n}\n\n.nbtools-appendix .nbtools-header {\n    background-color: var(--jp-layout-color4) !important;\n    min-height: 23px;\n}\n\n.nbtools-appendix .nbtools {\n    margin-bottom: 5px;\n}"],"sourceRoot":""}]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "./node_modules/@g2nb/nbtools/lib/basewidget.js":
/*!******************************************************!*\
  !*** ./node_modules/@g2nb/nbtools/lib/basewidget.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "BaseWidgetModel": () => (/* binding */ BaseWidgetModel),
/* harmony export */   "BaseWidgetView": () => (/* binding */ BaseWidgetView)
/* harmony export */ });
/* harmony import */ var _style_basewidget_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../style/basewidget.css */ "./node_modules/@g2nb/nbtools/style/basewidget.css");
/* harmony import */ var _context__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./context */ "./node_modules/@g2nb/nbtools/lib/context.js");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils */ "./node_modules/@g2nb/nbtools/lib/utils.js");
/* harmony import */ var _jupyter_widgets_base__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @jupyter-widgets/base */ "webpack/sharing/consume/default/@jupyter-widgets/base");
/* harmony import */ var _jupyter_widgets_base__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_jupyter_widgets_base__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./version */ "./node_modules/@g2nb/nbtools/lib/version.js");
/* harmony import */ var _toolbox__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./toolbox */ "./node_modules/@g2nb/nbtools/lib/toolbox.js");






// noinspection JSAnnotator
class BaseWidgetModel extends _jupyter_widgets_base__WEBPACK_IMPORTED_MODULE_3__.DOMWidgetModel {
    defaults() {
        return Object.assign(Object.assign({}, super.defaults()), { _id: '', origin: '', name: '', subtitle: '', description: '', collapsed: false, color: 'var(--jp-layout-color4)', logo: _context__WEBPACK_IMPORTED_MODULE_1__.ContextManager.context().default_logo(), info: '', error: '', extra_menu_items: {} });
    }
}
BaseWidgetModel.model_name = 'BaseWidgetModel';
BaseWidgetModel.model_module = _version__WEBPACK_IMPORTED_MODULE_4__.MODULE_NAME;
BaseWidgetModel.model_module_version = _version__WEBPACK_IMPORTED_MODULE_4__.MODULE_VERSION;
BaseWidgetModel.view_name = 'BaseWidgetView';
BaseWidgetModel.view_module = _version__WEBPACK_IMPORTED_MODULE_4__.MODULE_NAME;
BaseWidgetModel.view_module_version = _version__WEBPACK_IMPORTED_MODULE_4__.MODULE_VERSION;
BaseWidgetModel.serializers = Object.assign({}, _jupyter_widgets_base__WEBPACK_IMPORTED_MODULE_3__.DOMWidgetModel.serializers);
// noinspection JSAnnotator
class BaseWidgetView extends _jupyter_widgets_base__WEBPACK_IMPORTED_MODULE_3__.DOMWidgetView {
    constructor() {
        super(...arguments);
        this.dom_class = '';
        this.element = document.createElement('div');
        this.traitlets = ['name', 'subtitle', 'description', 'info', 'error'];
        this.renderers = {
            "description": this.render_description,
            "error": this.render_error,
            "info": this.render_info
        };
        this.template = `<div class="nbtools">
                           <div class="nbtools-header"></div>
                           <div class="nbtools-body"></div>
                       </div>`;
        this.header = `<img class="nbtools-logo" src="" />
                     <label class="nbtools-title" data-traitlet="name"></label>
                     <label class="nbtools-subtitle" data-traitlet="subtitle"></label>
                     <div class="nbtools-controls">
                         <button class="nbtools-collapse">
                             <span class="fa fa-minus"></span>
                         </button>
                         <button class="nbtools-gear">
                             <span class="fa fa-cog"></span>
                             <span class="fa fa-caret-down"></span>
                         </button>
                         <ul class="nbtools-menu" style="display: none;"></ul>
                     </div>`;
        this.body = `<div class="nbtools-description" data-traitlet="description"></div>
                   <div class="nbtools-error" data-traitlet="error"></div>
                   <div class="nbtools-info" data-traitlet="info"></div>`;
        this.disconnected = `<div class="nbtools-disconnected">
                               <div class="nbtools-panel">
                                   <div class="nbtools-header">Widget Disconnected From Kernel</div>
                                   <div class="nbtools-body">
                                       <p>You need to run this cell before it can connect to the notebook kernel. Please click the Connect to Kernel button below.</p>
                                       <div class="nbtools-connect nbtools-panel-button"><button class="nbtools-connect nbtools-panel-button">Connect to Kernel</button></div>
                                   </div>
                               </div>
                           </div>`;
    }
    render() {
        super.render();
        // Build the widget
        this.build();
        // Apply the color
        this.set_color();
        this.model.on('change:color', this.set_color, this);
        // Apply the logo
        this.set_logo();
        this.model.on('change:logo', this.set_logo, this);
        // Set the traitlet values
        this.traitlets.forEach(traitlet => this.traitlet_changed(traitlet));
        // Hook in the traitlet change events
        this.traitlets.forEach(traitlet => this.model.on(`change:${traitlet}`, this.traitlet_changed, this));
        // Hook in the expand / collapse events
        this.model.on('change:collapsed', this.toggle_collapse, this);
        if (this.model.get('collapsed'))
            this.toggle_collapse();
        // Hide the code
        this.toggle_code(false);
        // Attach the extra menu options
        this.attach_menu_options();
        this.model.on('change:extra_menu_items', this.attach_menu_options, this);
        // Allow menus to overflow the container
        this.float_menus();
        // Initialize the widget
        this.initialize({ options: {} });
        // Call any post render events
        this.post_render();
    }
    build() {
        // Parse the template
        this.element = new DOMParser().parseFromString(this.template, "text/html")
            .querySelector('div.nbtools');
        // Apply the DOM class
        if (this.dom_class)
            this.element.classList.add(this.dom_class);
        // Apply the header
        this.element.querySelector('div.nbtools-header').innerHTML = this.header;
        // Attach collapse event
        const collapse = this.element.querySelector("button.nbtools-collapse");
        collapse.addEventListener("click", () => {
            this.model.set('collapsed', !this.model.get('collapsed'));
            this.model.save_changes();
        });
        // Attach the gear event
        const gear = this.element.querySelector("button.nbtools-gear");
        gear.addEventListener("click", () => this.toggle_menu());
        // Attach toggle code event
        this.add_menu_item('Toggle Code View', () => this.toggle_code());
        // Apply the body
        this.element.querySelector('div.nbtools-body').innerHTML = this.body;
        // Attach the disconnected cover
        this.element.appendChild(new DOMParser().parseFromString(this.disconnected, "text/html")
            .querySelector('body > :first-child'));
        this.attach_connect_event();
        this.disconnected_sync_fix();
        // Set the element
        this.setElement(this.element);
    }
    set_logo() {
        // Get custom logo
        let logo = this.model.get('logo');
        const logo_element = this.element.querySelector("img.nbtools-logo");
        // Fall back to default logo if no custom logo is set
        if (!logo) {
            logo = _context__WEBPACK_IMPORTED_MODULE_1__.ContextManager.context().default_logo();
            this.model.set('logo', logo);
            this.model.save();
        }
        // Special case for "None" logo
        if (logo.toLowerCase() === "none")
            logo_element.classList.add('nbtools-logo-hidden');
        else
            logo_element.classList.remove('nbtools-logo-hidden');
        // Set the logo
        logo_element.src = logo;
    }
    set_color() {
        const color = this.model.get('color').trim();
        this.element.style.borderColor = color;
        this.element.querySelectorAll('.nbtools-body button, .nbtools-header').forEach((e) => {
            e.style.backgroundColor = color;
        });
    }
    render_description(description, widget) {
        return widget._render_or_hide('.nbtools-description', description, widget);
    }
    render_error(message, widget) {
        return widget._render_or_hide('.nbtools-error', message, widget);
    }
    render_info(message, widget) {
        return widget._render_or_hide('.nbtools-info', message, widget);
    }
    _render_or_hide(selector, message, widget) {
        widget.element.querySelector(selector).style.display = message.trim() ? 'block' : 'none';
        return message;
    }
    attach_connect_event() {
        const button = this.element.querySelector('button.nbtools-connect');
        button.addEventListener("click", () => {
            // Run all cells with disconnected nbtools widgets
            _context__WEBPACK_IMPORTED_MODULE_1__.ContextManager.context().run_tool_cells();
        });
    }
    disconnected_sync_fix() {
        // Fix a bug that can occur when a disconnected widget and a connected widget are somehow rendered in the same cell
        setTimeout(() => {
            const cell = this.element.closest('.jp-Cell, .cell');
            if (!cell)
                return; // No cell found, bug cannot occur
            // Do both connected and disconnected widgets appear in the cell?
            const contains_disconnected = !!cell.querySelectorAll('.nbtools.jupyter-widgets-disconnected').length;
            const contains_connected = !!cell.querySelectorAll('.nbtools:not(.jupyter-widgets-disconnected)').length;
            // If they do, hide the irrelevant disconnected widgets
            if (contains_disconnected && contains_connected) {
                cell.querySelectorAll('.nbtools.jupyter-widgets-disconnected').forEach((e) => {
                    e.style.display = 'none';
                });
            }
        }, 100);
    }
    add_menu_item(label, callback, dom_class = null, menu = null, prepend = true) {
        // Create the menu item
        const item = new DOMParser().parseFromString(`<li>${label}</li>`, "text/html")
            .querySelector('li');
        // Apply the class if one is specified
        if (dom_class)
            item.classList.add(dom_class);
        // Attach the menu item
        if (!menu)
            menu = this.element.querySelector('.nbtools-menu');
        if (prepend)
            menu.prepend(item);
        else
            menu.append(item);
        // Attach the click event
        item.addEventListener('click', () => callback());
        return item;
    }
    traitlet_changed(event) {
        const widget = this;
        const name = typeof event === "string" ? event : Object.keys(event.changed)[0];
        const elements = this.element.querySelectorAll(`[data-traitlet=${name}]`);
        elements.forEach(element => {
            if (name in this.renderers)
                element.innerHTML = this.renderers[name](this.model.get(name), widget);
            else
                element.innerHTML = this.model.get(name);
        });
    }
    toggle_code(display) {
        const element = this.element;
        _context__WEBPACK_IMPORTED_MODULE_1__.ContextManager.context().toggle_code(element, display);
    }
    toggle_collapse() {
        const body = this.element.querySelector(".nbtools-body");
        const collapsed = body.style.display === "none" || body.style.height == "0px";
        // Toggle the collapse button
        const button = this.element.querySelector(".nbtools-collapse > span");
        if (collapsed) {
            button.classList.add('fa-minus');
            button.classList.remove('fa-plus');
        }
        else {
            button.classList.remove('fa-minus');
            button.classList.add('fa-plus');
        }
        // Hide or show widget body
        (0,_utils__WEBPACK_IMPORTED_MODULE_2__.toggle)(body);
    }
    toggle_menu() {
        const gear = this.element.querySelector("button.nbtools-gear");
        const menu = this.element.querySelector(".nbtools-menu");
        const collapsed = menu.style.display === "none";
        // Hide or show the menu
        if (collapsed)
            menu.style.display = "block";
        else
            menu.style.display = "none";
        // Hide the menu with the next click
        const hide_next_click = function (event) {
            if (gear.contains(event.target))
                return;
            menu.style.display = "none";
            document.removeEventListener('click', hide_next_click);
        };
        document.addEventListener('click', hide_next_click);
    }
    create_menu_callback(item, template_vars = {}) {
        // Create callback for string literal
        if (typeof item === 'string')
            return new Function((0,_utils__WEBPACK_IMPORTED_MODULE_2__.process_template)(item, template_vars));
        // Create callback for javascript event type
        else if (item['action'] === 'javascript')
            return () => eval((0,_utils__WEBPACK_IMPORTED_MODULE_2__.process_template)(item['code'], template_vars));
        // Create callback for cell event type
        else if (item['action'] === 'cell')
            return () => _toolbox__WEBPACK_IMPORTED_MODULE_5__.Toolbox.add_code_cell((0,_utils__WEBPACK_IMPORTED_MODULE_2__.process_template)(item['code'], template_vars));
        // Create callback for method event type
        else if (item['action'] === 'method')
            return () => {
                if (!item['params'])
                    this.send({ event: 'method', method: (0,_utils__WEBPACK_IMPORTED_MODULE_2__.process_template)(item['code'], template_vars) });
                else
                    this.send({ event: 'method', method: (0,_utils__WEBPACK_IMPORTED_MODULE_2__.process_template)(item['code'], template_vars), params: (0,_utils__WEBPACK_IMPORTED_MODULE_2__.process_template)(item['params'], template_vars) });
            };
        // Create callback for custom event type
        else
            return new Function((0,_utils__WEBPACK_IMPORTED_MODULE_2__.process_template)(item['code'], template_vars));
    }
    attach_menu_options() {
        // Clear any existing menu
        const menu = this.element.querySelector('.nbtools-menu');
        menu.querySelectorAll('.nbtools-menu-extra').forEach((e) => e.remove());
        const menu_items = this.model.get('extra_menu_items');
        Object.keys(menu_items).forEach((name) => {
            const item = menu_items[name];
            const callback = this.create_menu_callback(item);
            this.add_menu_item(name, callback, 'nbtools-menu-extra');
        });
    }
    float_menus() {
        const fix_cell = () => {
            const elements = [
                this.el.closest('.lm-Widget.jp-OutputPrompt.jp-OutputArea-prompt'),
                this.el.closest('.lm-Widget.lm-Panel.jp-OutputArea'),
                this.el.closest('.lm-Widget.lm-Panel.jp-OutputArea-child'),
                this.el.closest('.lm-Widget.lm-Panel.jp-OutputArea-output'),
                this.el.closest('.lm-Widget.jp-OutputArea.jp-Cell-outputArea')
            ];
            elements.forEach((e) => {
                if (e)
                    e.style.overflow = 'visible';
            });
        };
        this.el.addEventListener('click', fix_cell, { once: true });
    }
    /**
     * Recursively trigger the 'displayed' event for all child widgets
     *
     * @param {DOMWidgetModel} model
     * @param {DOMWidgetView | any} view
     * @private
     */
    static _initialize_display(model, view) {
        // Trigger the display for this widget
        view.trigger('displayed');
        // Recursively trigger the display for all child widgets
        if ('children_views' in view) {
            view.children_views.update(model.get('children')).then((children) => {
                children.forEach((child) => {
                    BaseWidgetView._initialize_display(child.model, child);
                    child.el.widget = child;
                });
            });
        }
    }
    /**
     * Add the specified child widget to the view and initialize
     *
     * @param {string} element_selector
     * @param {string} model_name
     */
    attach_child_widget(element_selector, model_name) {
        const element = this.element.querySelector(element_selector);
        const model = this.model.get(model_name);
        this.create_child_view(model).then((view) => {
            element.appendChild(view.el);
            BaseWidgetView._initialize_display(model, view);
            return view;
        }).catch((0,_jupyter_widgets_base__WEBPACK_IMPORTED_MODULE_3__.reject)(`Could not add ${model_name} to ${element_selector}`, true));
    }
    basics() { return this.traitlets; } // Return the list of basic traitlets
    post_render() { } // Empty function, can be overridden in subclasses
}


/***/ }),

/***/ "./node_modules/@g2nb/nbtools/lib/index.js":
/*!*************************************************!*\
  !*** ./node_modules/@g2nb/nbtools/lib/index.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "BaseWidgetModel": () => (/* reexport safe */ _basewidget__WEBPACK_IMPORTED_MODULE_2__.BaseWidgetModel),
/* harmony export */   "BaseWidgetView": () => (/* reexport safe */ _basewidget__WEBPACK_IMPORTED_MODULE_2__.BaseWidgetView),
/* harmony export */   "ContextManager": () => (/* reexport safe */ _context__WEBPACK_IMPORTED_MODULE_1__.ContextManager),
/* harmony export */   "IToolRegistry": () => (/* reexport safe */ _registry__WEBPACK_IMPORTED_MODULE_5__.IToolRegistry),
/* harmony export */   "MODULE_NAME": () => (/* reexport safe */ _version__WEBPACK_IMPORTED_MODULE_0__.MODULE_NAME),
/* harmony export */   "MODULE_VERSION": () => (/* reexport safe */ _version__WEBPACK_IMPORTED_MODULE_0__.MODULE_VERSION),
/* harmony export */   "SearchBox": () => (/* reexport safe */ _toolbox__WEBPACK_IMPORTED_MODULE_6__.SearchBox),
/* harmony export */   "ToolBrowser": () => (/* reexport safe */ _toolbox__WEBPACK_IMPORTED_MODULE_6__.ToolBrowser),
/* harmony export */   "ToolRegistry": () => (/* reexport safe */ _registry__WEBPACK_IMPORTED_MODULE_5__.ToolRegistry),
/* harmony export */   "Toolbox": () => (/* reexport safe */ _toolbox__WEBPACK_IMPORTED_MODULE_6__.Toolbox),
/* harmony export */   "UIBuilderModel": () => (/* reexport safe */ _uibuilder__WEBPACK_IMPORTED_MODULE_4__.UIBuilderModel),
/* harmony export */   "UIBuilderView": () => (/* reexport safe */ _uibuilder__WEBPACK_IMPORTED_MODULE_4__.UIBuilderView),
/* harmony export */   "UIOutputModel": () => (/* reexport safe */ _uioutput__WEBPACK_IMPORTED_MODULE_3__.UIOutputModel),
/* harmony export */   "UIOutputView": () => (/* reexport safe */ _uioutput__WEBPACK_IMPORTED_MODULE_3__.UIOutputView)
/* harmony export */ });
/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./version */ "./node_modules/@g2nb/nbtools/lib/version.js");
/* harmony import */ var _context__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./context */ "./node_modules/@g2nb/nbtools/lib/context.js");
/* harmony import */ var _basewidget__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./basewidget */ "./node_modules/@g2nb/nbtools/lib/basewidget.js");
/* harmony import */ var _uioutput__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./uioutput */ "./node_modules/@g2nb/nbtools/lib/uioutput.js");
/* harmony import */ var _uibuilder__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./uibuilder */ "./node_modules/@g2nb/nbtools/lib/uibuilder.js");
/* harmony import */ var _registry__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./registry */ "./node_modules/@g2nb/nbtools/lib/registry.js");
/* harmony import */ var _toolbox__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./toolbox */ "./node_modules/@g2nb/nbtools/lib/toolbox.js");
// Copyright (c) Regents of the University of California & the Broad Institute
// Distributed under the terms of the Modified BSD License.









/***/ }),

/***/ "./node_modules/@g2nb/nbtools/lib/registry.js":
/*!****************************************************!*\
  !*** ./node_modules/@g2nb/nbtools/lib/registry.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "IToolRegistry": () => (/* binding */ IToolRegistry),
/* harmony export */   "ToolRegistry": () => (/* binding */ ToolRegistry)
/* harmony export */ });
/* harmony import */ var _jupyterlab_notebook__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @jupyterlab/notebook */ "webpack/sharing/consume/default/@jupyterlab/notebook");
/* harmony import */ var _jupyterlab_notebook__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_jupyterlab_notebook__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils */ "./node_modules/@g2nb/nbtools/lib/utils.js");
/* harmony import */ var _context__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./context */ "./node_modules/@g2nb/nbtools/lib/context.js");
/* harmony import */ var _lumino_coreutils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @lumino/coreutils */ "webpack/sharing/consume/default/@lumino/coreutils");
/* harmony import */ var _lumino_coreutils__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_lumino_coreutils__WEBPACK_IMPORTED_MODULE_3__);




const IToolRegistry = new _lumino_coreutils__WEBPACK_IMPORTED_MODULE_3__.Token("nbtools");
class ToolRegistry {
    /**
     * Initialize the ToolRegistry and connect event handlers
     */
    constructor() {
        this.current = null; // Reference to the currently selected notebook or other widget
        this._update_callbacks = []; // Functions to call when an update happens
        this.kernel_tool_cache = {}; // Keep a cache of kernels to registered tools
        this.kernel_import_cache = {}; // Keep a cache of whether nbtools has been imported
        // Lazily assign the tool registry to the context
        if (!_context__WEBPACK_IMPORTED_MODULE_2__.ContextManager.tool_registry)
            _context__WEBPACK_IMPORTED_MODULE_2__.ContextManager.tool_registry = this;
        _context__WEBPACK_IMPORTED_MODULE_2__.ContextManager.context().notebook_focus((current_widget) => {
            // Current notebook hasn't changed, no need to do anything, return
            if (this.current === current_widget)
                return;
            // Otherwise, update the current notebook reference
            this.current = current_widget;
            // If the current selected widget isn't a notebook, no comm is needed
            if (!(this.current instanceof _jupyterlab_notebook__WEBPACK_IMPORTED_MODULE_0__.NotebookPanel) && _context__WEBPACK_IMPORTED_MODULE_2__.ContextManager.is_lab())
                return;
            // Initialize the comm
            this.init_comm();
            // Load the default tools
            this.import_default_tools();
        });
    }
    import_default_tools() {
        _context__WEBPACK_IMPORTED_MODULE_2__.ContextManager.context().kernel_changed(this.current, () => {
            _context__WEBPACK_IMPORTED_MODULE_2__.ContextManager.context().execute_code(this.current, 'from nbtools import import_defaults\nimport_defaults()');
        });
    }
    /**
     * Initialize the comm between the notebook widget kernel and the ToolManager
     */
    init_comm() {
        _context__WEBPACK_IMPORTED_MODULE_2__.ContextManager.context().kernel_ready(this.current, () => {
            const current = this.current;
            // Create a new comm that connects to the nbtools_comm target
            const connect_comm = () => {
                const comm = _context__WEBPACK_IMPORTED_MODULE_2__.ContextManager.context().create_comm(current, 'nbtools_comm', (msg) => {
                    // Handle message sent by the kernel
                    const data = msg.content.data;
                    if (data.func === 'update')
                        this.update_tools(data.payload);
                    else if (data.func === 'notification')
                        (0,_utils__WEBPACK_IMPORTED_MODULE_1__.send_notification)(data.payload.message, data.payload.sender, _context__WEBPACK_IMPORTED_MODULE_2__.ContextManager.context().default_logo());
                    else
                        console.error('ToolRegistry received unknown message: ' + data);
                });
                window.comm = comm;
                // Request the current tool list
                comm.send({
                    'func': 'request_update'
                });
            };
            // When the kernel restarts or is changed, reconnect the comm
            _context__WEBPACK_IMPORTED_MODULE_2__.ContextManager.context().kernel_changed(current, () => connect_comm());
            // Connect to the comm upon initial startup
            connect_comm();
            // Update tools from the cache
            this.update_from_cache();
        });
    }
    /**
     * Get tools from the cache and make registered callbacks
     */
    update_from_cache() {
        // Get the kernel ID
        const kernel_id = this.current_kernel_id();
        if (!kernel_id)
            return; // Do nothing if null
        // Get tools from the cache
        const tool_list = this.kernel_tool_cache[kernel_id];
        // Make registered callbacks for when tools are updated
        this._update_callbacks.forEach((callback) => {
            callback(tool_list);
        });
    }
    /**
     * Message the kernel, requesting an update to the tools cache
     *
     * @param comm
     */
    request_update(comm) {
        comm.send({ 'func': 'request_update' });
    }
    /**
     * Register an update callback with the ToolRegistry
     *
     * @param callback
     */
    on_update(callback) {
        this._update_callbacks.push(callback);
    }
    /**
     * Retrieve the kernel ID from the currently selected notebook
     * Return null if no kernel or no notebook selected
     */
    current_kernel_id() {
        return _context__WEBPACK_IMPORTED_MODULE_2__.ContextManager.context().kernel_id(this.current);
    }
    /**
     * Update the tools cache for the current kernel
     *
     * @param message
     */
    update_tools(message) {
        const kernel_id = this.current_kernel_id();
        if (!kernel_id)
            return; // Do nothing if no kernel
        // Parse the message
        const tool_list = message['tools'];
        const needs_import = !!message['import'];
        // Update the cache
        this.kernel_tool_cache[kernel_id] = tool_list;
        this.kernel_import_cache[kernel_id] = needs_import;
        // Make registered callbacks when tools are updated
        this._update_callbacks.forEach((callback) => {
            callback(tool_list);
        });
    }
    /**
     * Query whether nbtools has been imported in this kernel
     */
    needs_import() {
        const kernel_id = this.current_kernel_id();
        if (!kernel_id)
            return true; // Assume true if no kernel
        // Get import status from the cache and protect against undefined
        return !this.kernel_import_cache[kernel_id];
    }
    /**
     * Returns a list of all currently registered tools
     *
     * @returns {Array} - A list of registered tools
     */
    list() {
        const kernel_id = this.current_kernel_id();
        if (!kernel_id)
            return []; // Empty list if no kernel
        // Get tools from the cache and protect against undefined
        const tools = this.kernel_tool_cache[kernel_id];
        if (!tools)
            return [];
        return Object.keys(tools).map(function (key) {
            return tools[key];
        });
    }
    /**
     * Has this tool already been registered?
     *
     * @param origin
     * @param id
     * @returns {boolean}
     */
    has_tool(origin, id) {
        let found_tool = false;
        this.list().forEach(tool => {
            if (tool.id === id && tool.origin === origin)
                found_tool = true;
        });
        return found_tool;
    }
}


/***/ }),

/***/ "./node_modules/@g2nb/nbtools/lib/toolbox.js":
/*!***************************************************!*\
  !*** ./node_modules/@g2nb/nbtools/lib/toolbox.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SearchBox": () => (/* binding */ SearchBox),
/* harmony export */   "ToolBrowser": () => (/* binding */ ToolBrowser),
/* harmony export */   "Toolbox": () => (/* binding */ Toolbox)
/* harmony export */ });
/* harmony import */ var _lumino_widgets__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @lumino/widgets */ "webpack/sharing/consume/default/@lumino/widgets");
/* harmony import */ var _lumino_widgets__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_lumino_widgets__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils */ "./node_modules/@g2nb/nbtools/lib/utils.js");
/* harmony import */ var _context__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./context */ "./node_modules/@g2nb/nbtools/lib/context.js");
/* harmony import */ var _jupyterlab_notebook__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @jupyterlab/notebook */ "webpack/sharing/consume/default/@jupyterlab/notebook");
/* harmony import */ var _jupyterlab_notebook__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_jupyterlab_notebook__WEBPACK_IMPORTED_MODULE_3__);




class ToolBrowser extends _lumino_widgets__WEBPACK_IMPORTED_MODULE_0__.Widget {
    constructor() {
        super();
        this.addClass('nbtools-browser');
        this.layout = new _lumino_widgets__WEBPACK_IMPORTED_MODULE_0__.PanelLayout();
        this.layout.addWidget(new SearchBox());
        this.layout.addWidget(new Toolbox());
    }
}
class Toolbox extends _lumino_widgets__WEBPACK_IMPORTED_MODULE_0__.Widget {
    constructor() {
        super();
        this.last_update = 0;
        this.update_waiting = false;
        this.addClass('nbtools-toolbox');
        this.addClass('nbtools-wrapper');
        // Update the toolbox when the tool registry changes
        _context__WEBPACK_IMPORTED_MODULE_2__.ContextManager.tool_registry.on_update(() => {
            // If the last update was more than 10 seconds ago, update the toolbox
            if (this.update_stale())
                this.fill_toolbox();
            else
                this.queue_update(); // Otherwise, queue an update if not already waiting for one
        });
        // Fill the toolbox with the registered tools
        this.fill_toolbox();
    }
    update_stale() {
        return this.last_update + (3 * 1000) < Date.now();
    }
    queue_update() {
        // If no update is waiting, queue an update
        if (!this.update_waiting) {
            setTimeout(() => {
                this.fill_toolbox(); // Fill the toolbox
                this.update_waiting = false; // And mark as no update queued
            }, Math.abs(this.last_update + (3 * 1000) - Date.now())); // Queue for 3 seconds since last update
            this.update_waiting = true; // And mark as queued
        }
    }
    static add_tool_cell(tool) {
        // Check to see if nbtools needs to be imported
        const import_line = _context__WEBPACK_IMPORTED_MODULE_2__.ContextManager.tool_registry.needs_import() ? 'import nbtools\n\n' : '';
        // Add and run a code cell with the generated tool code
        Toolbox.add_code_cell(import_line + `nbtools.tool(id='${tool.id}', origin='${tool.origin}')`);
    }
    static add_code_cell(code) {
        if (!_context__WEBPACK_IMPORTED_MODULE_2__.ContextManager.notebook_tracker)
            return; // If no NotebookTracker, do nothing
        const current = _context__WEBPACK_IMPORTED_MODULE_2__.ContextManager.tool_registry.current;
        if (!current || !(current instanceof _jupyterlab_notebook__WEBPACK_IMPORTED_MODULE_3__.NotebookPanel))
            return; // If no notebook is currently selected, return
        let cell = _context__WEBPACK_IMPORTED_MODULE_2__.ContextManager.notebook_tracker.activeCell;
        if (!cell)
            return; // If no cell is selected, do nothing
        // If the currently selected cell isn't empty, insert a new one below and select it
        const current_cell_code = cell.model.value.text.trim();
        if (!!current_cell_code)
            _jupyterlab_notebook__WEBPACK_IMPORTED_MODULE_3__.NotebookActions.insertBelow(current.content);
        // Fill the cell with the tool's code
        cell = _context__WEBPACK_IMPORTED_MODULE_2__.ContextManager.notebook_tracker.activeCell; // The active cell may just have been updated
        if (cell)
            cell.model.value.text = code;
        // Run the cell
        return _jupyterlab_notebook__WEBPACK_IMPORTED_MODULE_3__.NotebookActions.run(current.content, current.context.sessionContext);
    }
    fill_toolbox() {
        this.last_update = Date.now();
        // First empty the toolbox
        this.empty_toolbox();
        // Get the list of tools
        const tools = _context__WEBPACK_IMPORTED_MODULE_2__.ContextManager.tool_registry.list();
        // Organize by origin and sort
        const organized_tools = this.organize_tools(tools);
        const origins = Object.keys(organized_tools);
        origins.sort((a, b) => {
            const a_name = a.toLowerCase();
            const b_name = b.toLowerCase();
            return (a_name < b_name) ? -1 : (a_name > b_name) ? 1 : 0;
        });
        // Add each origin
        origins.forEach((origin) => {
            const origin_box = this.add_origin(origin);
            organized_tools[origin].forEach((tool) => {
                this.add_tool(origin_box, tool);
            });
        });
    }
    organize_tools(tool_list) {
        const organized = {};
        // Group tools by origin
        tool_list.forEach((tool) => {
            if (tool.origin in organized)
                organized[tool.origin].push(tool); // Add tool to origin
            else
                organized[tool.origin] = [tool]; // Lazily create origin
        });
        // Sort the tools in each origin
        Object.keys(organized).forEach((origin) => {
            organized[origin].sort((a, b) => {
                const a_name = a.name.toLowerCase();
                const b_name = b.name.toLowerCase();
                return (a_name < b_name) ? -1 : (a_name > b_name) ? 1 : 0;
            });
        });
        // Return the organized set of notebooks
        return organized;
    }
    empty_toolbox() {
        this.node.innerHTML = '';
    }
    add_origin(name) {
        // Create the HTML DOM element
        const origin_wrapper = document.createElement('div');
        origin_wrapper.innerHTML = `
            <header class="nbtools-origin" title="${name}">
                <span class="nbtools-expanded nbtools-collapse jp-Icon jp-Icon-16 jp-ToolbarButtonComponent-icon"></span>
                ${name}
            </header>
            <ul class="nbtools-origin" title="${name}"></ul>`;
        // Attach the expand / collapse functionality
        const collapse = origin_wrapper.querySelector('span.nbtools-collapse');
        collapse.addEventListener("click", () => this.toggle_collapse(origin_wrapper));
        // Add to the toolbox
        this.node.append(origin_wrapper);
        return origin_wrapper;
    }
    add_tool(origin, tool) {
        const list = origin.querySelector('ul');
        const tool_wrapper = document.createElement('li');
        tool_wrapper.classList.add('nbtools-tool');
        tool_wrapper.setAttribute('title', 'Click to add to notebook');
        tool_wrapper.innerHTML = `
            <div class="nbtools-add">+</div>
            <div class="nbtools-header">${tool.name}</div>
            <div class="nbtools-description">${tool.description}</div>`;
        if (list)
            list.append(tool_wrapper);
        // Add the click event
        tool_wrapper.addEventListener("click", () => {
            Toolbox.add_tool_cell(tool);
        });
    }
    toggle_collapse(origin_wrapper) {
        const list = origin_wrapper.querySelector("ul.nbtools-origin");
        const collapsed = list.classList.contains('nbtools-hidden');
        // Toggle the collapse button
        const collapse = origin_wrapper.querySelector('span.nbtools-collapse');
        if (collapsed) {
            collapse.classList.add('nbtools-expanded');
            collapse.classList.remove('nbtools-collapsed');
        }
        else {
            collapse.classList.remove('nbtools-expanded');
            collapse.classList.add('nbtools-collapsed');
        }
        // Hide or show widget body
        (0,_utils__WEBPACK_IMPORTED_MODULE_1__.toggle)(list);
    }
}
class SearchBox extends _lumino_widgets__WEBPACK_IMPORTED_MODULE_0__.Widget {
    constructor() {
        super();
        this.value = '';
        this.node.innerHTML = `
            <div class="nbtools-wrapper">
                <div class="nbtools-outline">
                    <input type="search" class="nbtools-search" spellcheck="false" placeholder="SEARCH" />
                </div>
            </div>
        `;
        this.attach_events();
    }
    attach_events() {
        // Attach the change event to the search box
        const search_box = this.node.querySelector('input.nbtools-search');
        search_box.addEventListener("keyup", () => this.filter(search_box));
    }
    filter(search_box) {
        // Update the value state
        this.value = search_box.value.toLowerCase().replace(/[^a-z0-9]/g, '');
        // Get the toolbox
        const toolbox = document.querySelector('#nbtools-browser > .nbtools-toolbox');
        // Show any tool that matches and hide anything else
        toolbox.querySelectorAll('li.nbtools-tool').forEach((tool) => {
            if (tool.textContent.toLowerCase().replace(/[^a-z0-9]/g, '').includes(this.value))
                tool.style.display = 'block';
            else
                tool.style.display = 'none';
        });
    }
}


/***/ }),

/***/ "./node_modules/@g2nb/nbtools/lib/uibuilder.js":
/*!*****************************************************!*\
  !*** ./node_modules/@g2nb/nbtools/lib/uibuilder.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "UIBuilderModel": () => (/* binding */ UIBuilderModel),
/* harmony export */   "UIBuilderView": () => (/* binding */ UIBuilderView)
/* harmony export */ });
/* harmony import */ var _style_uibuilder_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../style/uibuilder.css */ "./node_modules/@g2nb/nbtools/style/uibuilder.css");
/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./version */ "./node_modules/@g2nb/nbtools/lib/version.js");
/* harmony import */ var _jupyter_widgets_base__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @jupyter-widgets/base */ "webpack/sharing/consume/default/@jupyter-widgets/base");
/* harmony import */ var _jupyter_widgets_base__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_jupyter_widgets_base__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _basewidget__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./basewidget */ "./node_modules/@g2nb/nbtools/lib/basewidget.js");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils */ "./node_modules/@g2nb/nbtools/lib/utils.js");
/* harmony import */ var _context__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./context */ "./node_modules/@g2nb/nbtools/lib/context.js");
/**
 * Define the UI Builder widget for Jupyter Notebook
 *
 * @author Thorin Tabor
 *
 * Copyright 2020 Regents of the University of California and the Broad Institute
 */






// noinspection JSAnnotator
class UIBuilderModel extends _basewidget__WEBPACK_IMPORTED_MODULE_3__.BaseWidgetModel {
    defaults() {
        return Object.assign(Object.assign({}, super.defaults()), { _model_name: UIBuilderModel.model_name, _model_module: UIBuilderModel.model_module, _model_module_version: UIBuilderModel.model_module_version, _view_name: UIBuilderModel.view_name, _view_module: UIBuilderModel.view_module, _view_module_version: UIBuilderModel.view_module_version, name: 'Python Function', description: '', _parameters: [], parameter_groups: [], accept_origins: [], function_import: '', register_tool: true, collapse: true, events: {}, buttons: {}, license: {}, display_header: true, display_footer: true, busy: false, run_label: 'Run', form: undefined, output: undefined });
    }
}
UIBuilderModel.model_name = 'UIBuilderModel';
UIBuilderModel.model_module = _version__WEBPACK_IMPORTED_MODULE_1__.MODULE_NAME;
UIBuilderModel.model_module_version = _version__WEBPACK_IMPORTED_MODULE_1__.MODULE_VERSION;
UIBuilderModel.view_name = 'UIBuilderView';
UIBuilderModel.view_module = _version__WEBPACK_IMPORTED_MODULE_1__.MODULE_NAME;
UIBuilderModel.view_module_version = _version__WEBPACK_IMPORTED_MODULE_1__.MODULE_VERSION;
UIBuilderModel.serializers = Object.assign(Object.assign({}, _basewidget__WEBPACK_IMPORTED_MODULE_3__.BaseWidgetModel.serializers), { form: {
        deserialize: (value, manager) => (0,_jupyter_widgets_base__WEBPACK_IMPORTED_MODULE_2__.unpack_models)(value, manager)
    } });
// noinspection JSAnnotator
class UIBuilderView extends _basewidget__WEBPACK_IMPORTED_MODULE_3__.BaseWidgetView {
    constructor() {
        super(...arguments);
        this.dom_class = 'nbtools-uibuilder';
        this.traitlets = [...super.basics(), 'origin', '_parameters', 'function_import', 'register_tool', 'collapse',
            'events', 'run_label', 'form', 'output'];
        this.renderers = {
            "error": this.render_error,
            "info": this.render_info
        };
        this.body = `
        <div class="nbtools-buttons">
            <button class="nbtools-run" data-traitlet="run_label"></button>
        </div>
        <div class="nbtools-description" data-traitlet="description"></div>
        <div class="nbtools-busy">
            <div>
                <i class="fas fa-circle-notch fa-spin"></i>
            </div>
        </div>
        <div class="nbtools-error" data-traitlet="error"></div>
        <div class="nbtools-info" data-traitlet="info"></div>
        <div class="nbtools-form"></div>
        <div class="nbtools-footer"></div>
        <div class="nbtools-buttons">
            <button class="nbtools-run" data-traitlet="run_label"></button>
        </div>`;
        this.dialog = `<div class="nbtools-dialog">
                           <div class="nbtools-panel">
                               <div class="nbtools-header"></div>
                               <div class="nbtools-body">
                                   <p></p>
                                   <div class="nbtools-panel-button">
                                       <button class="nbtools-panel-cancel">Cancel</button>
                                       <button class="nbtools-panel-button"></button>
                                   </div>
                               </div>
                           </div>
                       </div>`;
    }
    render() {
        super.render();
        // Hide the header or footer, if necessary
        this.display_header_changed();
        this.display_footer_changed();
        this.model.on(`change:display_header`, this.display_header_changed, this);
        this.model.on(`change:display_footer`, this.display_footer_changed, this);
        // Show or hide the "busy" UI
        this.busy_changed();
        this.model.on(`change:busy`, this.busy_changed, this);
        // Attach the Reset Parameters gear option
        this.add_menu_item('Reset Parameters', () => this.reset_parameters());
        // Attach the Run button callbacks
        this.activate_run_buttons();
        // Attach custom buttons
        this.activate_custom_buttons();
        // Display the license, if any
        this.display_license();
        // Add the interactive form widget
        this.attach_child_widget('.nbtools-form', 'form');
        // After the view is rendered
        (0,_utils__WEBPACK_IMPORTED_MODULE_4__.element_rendered)(this.el).then(() => {
            // Attach ID and event callbacks
            this._attach_callbacks();
            // Create parameter groups
            this._init_parameter_groups();
            // Attach the Advanced Options gear option, if necessary
            if (this.has_advanced())
                this.add_menu_item('Advanced Options', () => this.toggle_advanced());
        });
    }
    busy_changed() {
        const display = this.model.get('busy') ? 'block' : 'none';
        this.element.querySelector('.nbtools-busy').style.display = display;
    }
    display_header_changed() {
        const display = this.model.get('display_header') ? 'block' : 'none';
        this.element.querySelector('.nbtools-buttons:first-of-type').style.display = display;
        this.element.querySelector('.nbtools-description').style.display = display;
    }
    display_footer_changed() {
        const display = this.model.get('display_footer') ? 'block' : 'none';
        this.element.querySelector('.nbtools-buttons:last-of-type').style.display = display;
        this.element.querySelector('.nbtools-footer').style.display = display;
        // If there is an output_var element, hide or show it as necessary
        if (!this.output_var_displayed())
            return;
        this.element.querySelector('.nbtools-input:last-of-type').style.display = display;
    }
    output_var_displayed() {
        const output_var = this.model.get('_parameters')['output_var'];
        return !!(output_var && output_var['hide'] == false);
    }
    /**
     * Displays a EULA to the user, who must agree before continuing.
     *
     * License should be a dict with the following keys:
     *      text: The text of the license
     *      title: The name of the license (optional)
     *      callback: Whether the license has been agreed to (boolean)
     */
    display_license() {
        const license = this.model.get('license'); // Get the license model
        if (!license || !license['text'])
            return; // If there is no license, skip
        this.widget_dialog({ title: license['title'] ||
                'You must agree below to the following end-user license agreement',
            body: license['text'],
            button_label: 'Agree',
            callback: () => {
                license['callback'] = true; // Set to true to trigger callback function
                this.model.set('license', license);
                this.model.save();
            } });
    }
    activate_custom_buttons() {
        this.el.querySelectorAll('.nbtools-buttons').forEach((box) => {
            const buttons = this.model.get('buttons');
            Object.keys(buttons).forEach((label) => {
                const button = new DOMParser().parseFromString(`<button>${label}</button>`, "text/html")
                    .querySelector('button');
                const button_event = new Function(buttons[label]);
                button.addEventListener('click', button_event);
                box.prepend(button);
            });
        });
    }
    /**
     * Attach the click event to each Run button
     */
    activate_run_buttons() {
        this.el.querySelectorAll('.nbtools-run').forEach((button) => button.addEventListener('click', () => {
            // Validate required parameters and return if not valid
            if (!this.validate())
                return;
            // Execute the interact instance
            this.el.querySelector('.widget-interact > .jupyter-button').click();
            // Collapse the widget, if collapse=True
            if (this.model.get('collapse'))
                this.el.querySelector('.nbtools-collapse').click();
        }));
    }
    /**
     * Check to make sure required parameters are checked out.
     * Highlight missing parameters. Return whether valid.
     */
    validate() {
        let valid = true;
        const form = this.el.querySelector('.nbtools-form');
        form.querySelectorAll('.nbtools-input').forEach((param) => {
            if (!param.classList.contains('required'))
                return; // Ignore optional parameters
            const input = param.querySelector('input, select');
            if (input.value.trim() === '') { // If empty
                param.classList.add('missing'); // Add missing style
                valid = false; // Not all params are valid
            }
            else
                param.classList.remove('missing'); // Remove missing style
        });
        return valid;
    }
    widget_dialog({ title = '', body = '', button_label = 'OK', callback = null }) {
        this.element.appendChild(new DOMParser().parseFromString(this.dialog, "text/html")
            .querySelector('body > :first-child'));
        const dialog = this.element.querySelector('.nbtools-dialog');
        const header = dialog.querySelector('.nbtools-header');
        const button = dialog.querySelector('button.nbtools-panel-button');
        header.style.backgroundColor = this.model.get('color');
        header.textContent = title;
        dialog.querySelector('.nbtools-body > p').textContent = body;
        dialog.querySelector('.nbtools-panel-cancel').addEventListener('click', () => dialog.remove());
        button.textContent = button_label;
        button.style.backgroundColor = this.model.get('color');
        button.addEventListener('click', () => {
            dialog.remove();
            callback();
        });
    }
    /**
     * Create group headers and reorder the form widget according to the group spec
     *
     * @private
     */
    _init_parameter_groups() {
        // Get the parameter groups
        const groups = this.model.get('parameter_groups');
        if (!groups || !groups.length)
            return; // No groups are defined, skip this step
        // Get the UI Builder form container
        const form = this.el.querySelector('.nbtools-form > .widget-interact');
        if (!form)
            return; // If no container is found, skip this step
        // Iterate over each group, create headers and add parameters
        groups.reverse().forEach((group) => {
            const hidden = !!group['hidden']; // Is the group collapsed by default?
            const advanced = !!group['advanced']; // Toggle on with advanced options call?
            // Create and add the header
            const header = this._create_group_header(group['name'], hidden, advanced);
            const body = this._create_group_body(header, group['description'], hidden, advanced);
            form.prepend(body);
            form.prepend(header);
            // Add the parameters
            group['parameters'] && group['parameters'].forEach((param_name) => {
                const param = this._param_dom_by_name(form, param_name);
                if (!param)
                    return; // If the parameter is not found, skip
                body.append(param);
            });
        });
    }
    _create_group_header(name, hidden, advanced) {
        // Create the expand / collapse button
        const controls = document.createElement('controls');
        const button = document.createElement('button');
        const icon = document.createElement('span');
        controls.classList.add('nbtools-controls');
        button.classList.add('nbtools-collapse');
        icon.classList.add('fa', 'fa-minus');
        button.append(icon);
        controls.append(button);
        // Create the header
        const header = document.createElement('div');
        header.classList.add('nbtools-header', 'nbtools-group-header');
        if (advanced)
            header.classList.add('nbtools-advanced');
        header.append(name || '');
        header.append(controls);
        // Apply the color
        header.style.backgroundColor = this.model.get('color');
        // Hide the header if no name is given and not collapsed
        if (!name && !hidden)
            header.style.display = 'none';
        // Return the container
        return header;
    }
    _create_group_body(header, description, hidden, advanced) {
        // Create the container
        const box = document.createElement('div');
        box.classList.add('nbtools-group');
        if (advanced)
            box.classList.add('nbtools-advanced');
        // Create the description
        if (description) {
            const desc = document.createElement('div');
            desc.classList.add('nbtools-description');
            desc.append(description || '');
            box.append(desc);
        }
        // Add controls to the expand / collapse button
        const button = header.querySelector('button');
        const icon = button.querySelector('span');
        button.addEventListener('click', () => {
            this._group_toggle_collapse(box, icon);
        });
        // Collapse if hidden
        if (hidden)
            this._group_toggle_collapse(box, icon);
        return box;
    }
    _group_toggle_collapse(group_box, button) {
        const collapsed = group_box.style.display === "none";
        // Hide or show widget body
        (0,_utils__WEBPACK_IMPORTED_MODULE_4__.toggle)(group_box);
        // Toggle the collapse button
        if (collapsed) {
            button.classList.add('fa-minus');
            button.classList.remove('fa-plus');
        }
        else {
            button.classList.remove('fa-minus');
            button.classList.add('fa-plus');
        }
    }
    _param_dom_by_name(form, name) {
        // First attempt: Try to get parameter by data-name attribute (created by attach_callbacks() method)
        let param = form.querySelector(`.nbtools-input[data-name='${name}']`);
        if (param)
            return param; // Found it! Return the parameter
        // Second attempt: Try to locate by parameter name label
        const label = form.querySelector(`.nbtools-input > .widget-label:first-child`);
        if (!label)
            return null; // No matching label found, return null
        const match = name.toLowerCase().replace(/[^a-zA-Z]/g, '') ===
            label.textContent.toLowerCase().replace(/[^a-zA-Z]/g, '');
        if (match)
            return label.closest('.nbtools-input');
        // Match not found, return null
        return null;
    }
    /**
     * Attach ID and event callbacks to the UI Builder
     *
     * @private
     */
    _attach_callbacks() {
        // Handle widget events
        const widget_events = this.model.get('events');
        this._attach_all_events(this.el, widget_events);
        // Handle parameter IDs and parameter events
        const json_parameters = this.model.get('_parameters');
        const dom_parameters = this.el.querySelectorAll('.nbtools-input');
        for (let i = 0; i < json_parameters.length; i++) {
            const param_spec = json_parameters[i];
            const param_el = dom_parameters[i];
            // Attach the data-name attribute
            param_el.setAttribute('data-name', param_spec.name);
            // Attach specified ID as a data-id attribute
            if (!!param_spec.id)
                param_el.setAttribute('data-id', param_spec.id);
            // Attach parameter events
            if (!!param_spec.events) {
                this._attach_all_events(param_el, param_spec.events);
            }
            // Resize footer, if necessary
            if (param_spec.name === 'output_var' && param_spec.description) {
                // noinspection JSConstantReassignment
                this.el.querySelector('.nbtools-footer').style.height = '50px';
            }
        }
        // Attach send to / come from menus
        this._attach_menus();
        // Attach enter key submit event
        this._submit_keypress();
    }
    _submit_keypress() {
        this.el.querySelectorAll('.nbtools-form input, .nbtools-form select').forEach((element) => {
            element.addEventListener("keydown", (event) => {
                if (event.keyCode === 13) {
                    this.el.querySelector('.nbtools-run').click();
                }
            });
        });
    }
    /**
     * Add default choices defined in with UI Builder choice parameter to the label -> value map
     *
     * @param display_value_map
     * @param model
     * @private
     */
    _add_default_choices(display_value_map, model) {
        const choices = model.get('choices');
        if (choices && Object.keys(choices).length)
            display_value_map['Default Choices'] = model.get('choices');
    }
    /**
     * Add all files matching a specific selector to the label -> value map under the specified name
     *
     * @param display_value_map
     * @param target
     * @param kinds
     * @param selector
     * @param group_name
     * @private
     */
    _add_notebook_files(display_value_map, target, kinds, selector, group_name) {
        // Get the notebook's parent node
        const notebook = target.closest('.jp-Notebook');
        // Get all possible outputs
        const markdown_outputs = [...notebook.querySelectorAll(selector)];
        // Build list of compatible outputs
        const compatible_outputs = {};
        markdown_outputs.forEach((output) => {
            let href, label, kind;
            // Handle getting the kind and label from a link
            if (output.tagName.toLowerCase() === 'a') {
                href = output.getAttribute('href');
                label = (output.textContent || href).trim();
                kind = UIBuilderView.get_kind(href);
            }
            // Handle getting the kind and label from text
            else {
                label = (output.textContent || 'Blank Text Option').trim();
                href = (output.textContent || '').trim();
                kind = 'text';
            }
            // Special case for text "send to"
            if (group_name === "Text Options") {
                if (kinds.includes('text'))
                    compatible_outputs[label] = href;
                kind = 'text';
            }
            // Include if matching kind
            if (UIBuilderView.matching_kind(kinds, href))
                compatible_outputs[label] = href;
            // Include if kinds blank and not text
            else if (kinds.length === 0 && kind !== 'text')
                compatible_outputs[label] = href;
        });
        // Add to the label -> value map
        if (Object.keys(compatible_outputs).length > 0)
            display_value_map[group_name] = compatible_outputs;
    }
    /**
     * Add markdown input files to the label -> value map
     *
     * @param display_value_map
     * @param target
     * @param kinds
     * @private
     */
    _add_markdown_files(display_value_map, target, kinds) {
        this._add_notebook_files(display_value_map, target, kinds, '.nbtools-markdown-file', 'Notebook Instructions');
    }
    /**
     * Add markdown text options to the label -> value map
     *
     * @param display_value_map
     * @param target
     * @param kinds
     * @private
     */
    _add_markdown_text(display_value_map, target, kinds) {
        this._add_notebook_files(display_value_map, target, kinds, '.nbtools-text-option', 'Text Options');
    }
    /**
     * Add UIOutput files to the label -> value map
     *
     * @param display_value_map
     * @param target
     * @param kinds
     * @private
     */
    _add_output_files(display_value_map, target, kinds) {
        const origins = this.supported_origins();
        const compatible_outputs = _context__WEBPACK_IMPORTED_MODULE_5__.ContextManager.data_registry.get_data({ kinds: kinds, origins: origins });
        if (Object.keys(compatible_outputs).length > 0) {
            for (let origin of Object.keys(compatible_outputs))
                display_value_map[origin] = compatible_outputs[origin];
        }
    }
    supported_origins() {
        // Get the list of supported origins for data
        let this_origin = this.model.get('origin');
        let accept_origins = this.model.get('accept_origins');
        // If supported origins is empty or undefined, accept same origins and "Notebook" by default
        if (accept_origins === null || accept_origins.length < 1) {
            accept_origins = [this_origin];
            if (this_origin !== 'Notebook')
                accept_origins.push('Notebook');
        }
        // Otherwise, return the list
        return accept_origins;
    }
    _attach_kinds(attach_point) {
        const view = attach_point.widget;
        const model = view.model; // Get the model from the view
        const kinds = model.get('kinds') || ['text'];
        attach_point.setAttribute('data-type', kinds.join(', '));
    }
    _attach_name(attach_point) {
        let name = '';
        let param_element = null;
        let name_element = null;
        param_element = attach_point.closest('.nbtools-input');
        if (param_element)
            name_element = param_element.querySelector('div:first-child');
        if (name_element)
            name = name_element.textContent.replace(/\*/g, '');
        attach_point.setAttribute('data-name', name);
    }
    _attach_accept_origins(attach_point) {
        const origins = this.supported_origins();
        attach_point.setAttribute('data-origins', origins.join(', '));
    }
    /**
     * Attach sent to / come from menu support to the UI Builder widget
     *
     * @private
     */
    _attach_menus() {
        this.el.querySelectorAll('.nbtools-menu-attached').forEach((attach_point) => {
            this._attach_kinds(attach_point);
            this._attach_name(attach_point);
            this._attach_accept_origins(attach_point);
            attach_point.addEventListener("click", (event) => {
                // Get all compatible outputs and build display -> value map
                const display_value_map = this.build_display_map(attach_point);
                if (display_value_map === null)
                    return; // No view found, return
                // Update and attach the menu
                const target = attach_point.querySelector('input, select');
                this.attach_combobox_menu(target, display_value_map);
                // Attach the chevron to the input... or not
                this.update_chevron(attach_point, display_value_map);
            });
            // Initial menu attachment
            this.update_chevron(attach_point);
        });
    }
    build_display_map(attach_point) {
        const view = attach_point.widget; // Get widget view or abort
        if (!view)
            return null;
        const model = attach_point.widget.model; // Get the model from the view
        const sendto = !attach_point.classList.contains('nbtools-nosendto'); // Send if sendto enabled
        const kinds = model.get('kinds') || ['text']; // Get the list of compatible kinds
        // Build the map
        const display_value_map = {};
        this._add_default_choices(display_value_map, model);
        if (sendto)
            this._add_output_files(display_value_map, attach_point, kinds);
        if (sendto)
            this._add_markdown_files(display_value_map, attach_point, kinds);
        if (sendto)
            this._add_markdown_text(display_value_map, attach_point, kinds);
        return display_value_map;
    }
    update_chevron(attach_point, display_value_map = null) {
        if (!display_value_map)
            display_value_map = this.build_display_map(attach_point);
        if (Object.keys(display_value_map).length > 0)
            attach_point.classList.add('nbtools-dropdown');
        else
            attach_point.classList.remove('nbtools-dropdown');
    }
    toggle_file_menu(link, display_value_map) {
        const menu = link.nextElementSibling;
        const collapsed = menu.style.display === "none";
        // If the menu is empty, don't show it
        if (menu.childElementCount === 0)
            return;
        // Hide or show the menu
        if (collapsed)
            menu.style.display = "block";
        else
            menu.style.display = "none";
        // Hide the menu with the next click
        const hide_next_click = function (event) {
            if (link.contains(event.target))
                return;
            menu.style.display = "none";
            document.removeEventListener('click', hide_next_click);
        };
        document.addEventListener('click', hide_next_click);
    }
    /**
     * Create or update the menu based on the label -> value map
     *
     * @param target
     * @param display_value_map
     */
    attach_combobox_menu(target, display_value_map) {
        // Get the menu and empty it, if it exists.
        let menu = target.nextSibling;
        const menu_exists = menu && menu.classList.contains('nbtools-menu');
        if (menu_exists)
            menu.innerHTML = '';
        // Create and insert the menu, if necessary
        else {
            menu = document.createElement('ul');
            menu.classList.add('nbtools-menu', 'nbtools-file-menu');
            menu.style.display = 'none';
            target.parentNode ? target.parentNode.insertBefore(menu, target.nextSibling) : null;
        }
        // Iterate over display -> value map and insert menu items
        Object.keys(display_value_map).forEach((group) => {
            // Add the group label
            if (group !== 'Default Choices')
                this.add_menu_item(group, () => { }, 'nbtools-menu-header', menu, false);
            // Loop over all files in the group
            Object.keys(display_value_map[group]).forEach((display_name) => {
                this.add_menu_item(display_name, () => {
                    target.value = display_value_map[group][display_name];
                    target.dispatchEvent(new Event('change', { 'bubbles': true }));
                }, 'nbtools-menu-subitem', menu, false);
            });
        });
        this.toggle_file_menu(target, display_value_map);
    }
    /**
     * Get the kind based on a given URL
     *
     * @param url
     */
    static get_kind(url) {
        return url.split(/\#|\?/)[0].split('.').pop().trim();
    }
    static matching_kind(kinds, url) {
        let match = false;
        kinds.forEach((kind) => {
            if (url.trim().endsWith(kind))
                match = true;
        });
        return match;
    }
    /**
     * Attach a map of events to the given DOM element (widget or parameter)
     *
     * @param {HTMLElement} element
     * @param event_map
     * @private
     */
    _attach_all_events(element, event_map) {
        Object.keys(event_map).forEach((key) => {
            const str_func = event_map[key];
            const func = new Function(str_func);
            // Handle the load event as a special case (run now)
            if (key === 'load')
                func.call(this, new CustomEvent('load'));
            // Handle the run event as a special case (bind as click to the Run button)
            else if (key === 'run') {
                const run_button = element.querySelector('.jupyter-button');
                if (!!run_button)
                    run_button.addEventListener('click', func);
            }
            // Special case to handle focus events, which are swallowed by the Jupyter UI
            else if (key === 'focus')
                element.addEventListener('focusin', func);
            // Otherwise, attach the event
            else
                element.addEventListener(key, func);
        });
    }
    set_input_model(model, spec) {
        // Special case for DropdownModel
        if (model.name === 'DropdownModel') {
            const labels = Object.keys(spec['choices']);
            for (let i = 0; i < labels.length; i++) {
                const label = labels[i];
                const value = spec['choices'][label];
                if (value === spec['default']) {
                    model.set('index', i);
                    break;
                }
            }
        }
        else { // Otherwise just set the value traitlet
            model.set('value', spec['default']);
        }
        // Save the model
        model.save_changes();
    }
    has_advanced() {
        return !!this.element.querySelector('.nbtools-advanced');
    }
    toggle_advanced() {
        this.element.querySelectorAll('.nbtools-advanced').forEach((e) => {
            const hidden = !e.classList.contains('nbtools-advanced-show');
            if (hidden)
                e.classList.add('nbtools-advanced-show');
            else
                e.classList.remove('nbtools-advanced-show');
        });
    }
    reset_parameters() {
        const params = this.model.get('_parameters');
        for (let i = 0; i < params.length; i++) {
            const spec = params[i];
            const name = spec['name'];
            const param_element = this.element.querySelector(`[data-name='${name}']:not(.nbtools-input)`);
            if (!param_element) { // Protect against nulls
                if (name !== 'output_var')
                    console.log(`Error finding ${name} in reset_parameters()`);
                return;
            }
            const view = param_element.widget;
            this.set_input_model(view.model, spec);
            // Special case for file lists
            const all_inputs = param_element.parentNode ? param_element.parentNode.querySelectorAll('input') : [];
            if (all_inputs.length > 1) {
                let first = true;
                all_inputs.forEach((input) => {
                    if (first)
                        first = false;
                    else
                        input.value = '';
                });
            }
        }
    }
}


/***/ }),

/***/ "./node_modules/@g2nb/nbtools/lib/uioutput.js":
/*!****************************************************!*\
  !*** ./node_modules/@g2nb/nbtools/lib/uioutput.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "UIOutputModel": () => (/* binding */ UIOutputModel),
/* harmony export */   "UIOutputView": () => (/* binding */ UIOutputView)
/* harmony export */ });
/* harmony import */ var _style_uioutput_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../style/uioutput.css */ "./node_modules/@g2nb/nbtools/style/uioutput.css");
/* harmony import */ var _jupyter_widgets_base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @jupyter-widgets/base */ "webpack/sharing/consume/default/@jupyter-widgets/base");
/* harmony import */ var _jupyter_widgets_base__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_jupyter_widgets_base__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./version */ "./node_modules/@g2nb/nbtools/lib/version.js");
/* harmony import */ var _basewidget__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./basewidget */ "./node_modules/@g2nb/nbtools/lib/basewidget.js");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils */ "./node_modules/@g2nb/nbtools/lib/utils.js");
/* harmony import */ var _context__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./context */ "./node_modules/@g2nb/nbtools/lib/context.js");
/* harmony import */ var _dataregistry__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./dataregistry */ "./node_modules/@g2nb/nbtools/lib/dataregistry.js");
/**
 * Widget for representing Python output as an interactive interface
 *
 * @author Thorin Tabor
 *
 * Copyright 2020 Regents of the University of California and the Broad Institute
 */







// noinspection JSAnnotator
class UIOutputModel extends _basewidget__WEBPACK_IMPORTED_MODULE_3__.BaseWidgetModel {
    defaults() {
        return Object.assign(Object.assign({}, super.defaults()), { _model_name: UIOutputModel.model_name, _model_module: UIOutputModel.model_module, _model_module_version: UIOutputModel.model_module_version, _view_name: UIOutputModel.view_name, _view_module: UIOutputModel.view_module, _view_module_version: UIOutputModel.view_module_version, name: 'Python Results', description: '', status: '', files: [], text: '', visualization: '', appendix: undefined, extra_file_menu_items: {} });
    }
}
UIOutputModel.model_name = 'UIOutputModel';
UIOutputModel.model_module = _version__WEBPACK_IMPORTED_MODULE_2__.MODULE_NAME;
UIOutputModel.model_module_version = _version__WEBPACK_IMPORTED_MODULE_2__.MODULE_VERSION;
UIOutputModel.view_name = 'UIOutputView';
UIOutputModel.view_module = _version__WEBPACK_IMPORTED_MODULE_2__.MODULE_NAME;
UIOutputModel.view_module_version = _version__WEBPACK_IMPORTED_MODULE_2__.MODULE_VERSION;
UIOutputModel.serializers = Object.assign(Object.assign({}, _basewidget__WEBPACK_IMPORTED_MODULE_3__.BaseWidgetModel.serializers), { appendix: {
        deserialize: (value, manager) => (0,_jupyter_widgets_base__WEBPACK_IMPORTED_MODULE_1__.unpack_models)(value, manager)
    } });
// noinspection JSAnnotator
class UIOutputView extends _basewidget__WEBPACK_IMPORTED_MODULE_3__.BaseWidgetView {
    constructor() {
        super(...arguments);
        this.dom_class = 'nbtools-uioutput';
        this.traitlets = [...super.basics(), 'status', 'files', 'text', 'visualization'];
        this.renderers = {
            "description": this.render_description,
            "error": this.render_error,
            "info": this.render_info,
            "files": this.render_files,
            "visualization": this.render_visualization
        };
        this.body = `
        <div class="nbtools-description" data-traitlet="description"></div>
        <div class="nbtools-error" data-traitlet="error"></div>
        <div class="nbtools-info" data-traitlet="info"></div>
        <div class="nbtools-status" data-traitlet="status"></div>
        <div class="nbtools-files" data-traitlet="files"></div>
        <pre class="nbtools-text" data-traitlet="text"></pre>
        <div class="nbtools-visualization" data-traitlet="visualization"></div>
        <div class="nbtools-appendix"></div>`;
        this.file_cache = [];
    }
    render() {
        super.render();
        // Add the child widgets
        this.attach_child_widget('.nbtools-appendix', 'appendix');
    }
    remove() {
        super.remove();
        // Clean up data files from the cache
        for (let f of this.file_cache)
            _context__WEBPACK_IMPORTED_MODULE_5__.ContextManager.data_registry.unregister({ data: f });
    }
    sync_file_cache() {
        // Unregister old files associated with this widget
        for (let f of this.file_cache)
            _context__WEBPACK_IMPORTED_MODULE_5__.ContextManager.data_registry.unregister({ data: f });
        // Create the data objects and add them to the file cache
        this.file_cache = [];
        const origin = this.model.get('origin');
        for (let f of this.model.get('files'))
            this.file_cache.push(new _dataregistry__WEBPACK_IMPORTED_MODULE_6__.Data(origin, f));
        // Register the files currently associated with this widget
        for (let f of this.file_cache)
            _context__WEBPACK_IMPORTED_MODULE_5__.ContextManager.data_registry.register({ data: f });
    }
    render_files(files, widget) {
        // Sync the file cache with what is displayed
        widget.sync_file_cache();
        let to_return = '';
        files.forEach(path => {
            const name = (0,_utils__WEBPACK_IMPORTED_MODULE_4__.extract_file_name)(path);
            const type = (0,_utils__WEBPACK_IMPORTED_MODULE_4__.extract_file_type)(path);
            const path_prefix = UIOutputView.pick_path_prefix(path);
            to_return += `<a class="nbtools-file" href="${path_prefix}${path}" data-type="${type}" onclick="return false;">${name} <i class="fa fa-info-circle"></i></a>`;
            to_return += `<ul class="nbtools-menu nbtools-file-menu" style="display: none;"></ul>`;
        });
        setTimeout(() => widget.initialize_file_menus(widget), 100);
        return to_return;
    }
    render_visualization(visualization, widget) {
        // Function for toggling pop out menu item on or off
        function toggle_open_visualizer(hide) {
            const controls = widget.element.querySelector('.nbtools-controls');
            if (!controls)
                return; // Get the gear menu buttons at the top and protect against null
            // Toggle or set the Pop Out Visualizer menu option's visibility
            controls.querySelectorAll('.nbtools-menu > li').forEach((item) => {
                if (item.textContent.includes('Pop Out Visualizer')) {
                    if (hide)
                        item.style.display = 'none';
                    else
                        item.style.display = 'block';
                }
            });
        }
        // Hide or show the open visualizer menu option, depending on whether there is a visualization
        if (!visualization.trim())
            toggle_open_visualizer(true);
        else
            toggle_open_visualizer(false);
        // If URL, display an iframe
        if ((0,_utils__WEBPACK_IMPORTED_MODULE_4__.is_url)(visualization))
            return `<iframe class="nbtools-visualization-iframe" src="${visualization}"></iframe>`;
        // Otherwise, embed visualization as HTML
        else
            return visualization;
    }
    traitlet_changed(event) {
        const widget = this;
        const name = typeof event === "string" ? event : Object.keys(event.changed)[0];
        const elements = this.element.querySelectorAll(`[data-traitlet=${name}]`);
        elements.forEach(element => {
            // Ignore traitlets in the appendix, unless this is a subwidget in the appendix
            if (!this.element.closest('.nbtools-appendix') && element.closest('.nbtools-appendix'))
                return;
            if (name in this.renderers)
                element.innerHTML = this.renderers[name](this.model.get(name), widget);
            else
                element.innerHTML = this.model.get(name);
        });
    }
    static pick_path_prefix(path) {
        if ((0,_utils__WEBPACK_IMPORTED_MODULE_4__.is_url)(path))
            return ''; // is a URL
        else if ((0,_utils__WEBPACK_IMPORTED_MODULE_4__.is_absolute_path)(path))
            return ''; // is an absolute
        else
            return 'files/' + _context__WEBPACK_IMPORTED_MODULE_5__.ContextManager.context().notebook_path(); // is relative path
    }
    attach_menu_options() {
        // Attach the Open Visualizer gear option
        const visualizer_option = this.add_menu_item('Pop Out Visualizer', () => this.open_visualizer());
        visualizer_option.style.display = this.model.get('visualization').trim() ? 'block' : 'none';
        // Call the base widget's attach_menu_options()
        super.attach_menu_options();
    }
    open_visualizer() {
        window.open(this.model.get('visualization'));
    }
    initialize_file_menus(widget) {
        const files = widget.el.querySelectorAll('.nbtools-file');
        files.forEach((link) => {
            link.addEventListener("click", function () {
                widget.toggle_file_menu(link);
            });
        });
    }
    initialize_menu_items(link) {
        const menu = link.nextElementSibling;
        if (!menu)
            return; // Protect against null
        const type = link.getAttribute('data-type');
        const href = link.getAttribute('href');
        const file_name = link.textContent ? link.textContent.trim() : href;
        const widget_name = this.model.get('name');
        const origin = this.model.get('origin') || '';
        // Add the send to options
        let send_to_empty = true;
        this.get_input_list(type, origin).forEach(input => {
            send_to_empty = false;
            this.add_menu_item(input['name'] + ' -> ' + input['param'], () => {
                const form_input = input['element'].querySelector('input');
                form_input.value = href;
                form_input.dispatchEvent(new Event('change', { bubbles: true }));
                const widget = form_input.closest('.nbtools');
                widget.scrollIntoView();
            }, 'nbtools-menu-subitem', menu);
        });
        // Add send to header
        if (!send_to_empty)
            this.add_menu_item('Send to...', () => { }, 'nbtools-menu-header', menu);
        // Add the extra menu items
        const menu_items = this.model.get('extra_file_menu_items');
        const template_vars = {
            'widget_name': widget_name,
            'file_name': file_name,
            'href': href,
            'type': type
        };
        Object.keys(menu_items).forEach((name) => {
            const item = menu_items[name];
            // Skip if this file doesn't match any type restrictions
            if (item['kinds'] && Array.isArray(item['kinds']) && !item['kinds'].includes(type))
                return;
            // Create the callback and attach the menu item
            const callback = this.create_menu_callback(item, template_vars);
            this.add_menu_item(name, callback, 'nbtools-menu-subitem', menu);
        });
        // Add download and new tab options
        this.add_menu_item('Download', () => window.open(link.getAttribute('href') + '?download=1'), '', menu);
        this.add_menu_item('Open in New Tab', () => window.open(link.getAttribute('href')), '', menu);
    }
    toggle_file_menu(link) {
        const menu = link.nextElementSibling;
        const collapsed = menu.style.display === "none";
        // Build the menu lazily
        menu.innerHTML = ''; // Clear all existing children
        this.initialize_menu_items(link);
        // Hide or show the menu
        if (collapsed)
            menu.style.display = "block";
        else
            menu.style.display = "none";
        // Hide the menu with the next click
        const hide_next_click = function (event) {
            if (link.contains(event.target))
                return;
            menu.style.display = "none";
            document.removeEventListener('click', hide_next_click);
        };
        document.addEventListener('click', hide_next_click);
    }
    get_input_list(type, origin) {
        // Get the notebook's parent node
        const notebook = this.el.closest('.jp-Notebook');
        // Get all possible outputs
        const parameters = [...notebook.querySelectorAll('.nbtools-menu-attached')];
        // Build list of compatible inputs
        const compatible_inputs = [];
        parameters.forEach((input) => {
            // Ignore hidden parameters
            if (input.offsetWidth === 0 && input.offsetHeight === 0)
                return;
            // Ignore parameters with sendto=False
            if (input.classList.contains('nbtools-nosendto'))
                return;
            // Ignore if this origin does not match the supported origins
            const origins_str = input.getAttribute('data-origins') || '';
            const origins_list = origins_str.split(', ');
            if (!origins_list.includes(origin) && origins_str !== '')
                return;
            // Ignore incompatible inputs
            const kinds = input.getAttribute('data-type') || '';
            const param_name = input.getAttribute('data-name') || '';
            const kinds_list = kinds.split(', ');
            if (!kinds_list.includes(type) && kinds !== '')
                return;
            // Add the input to the compatible list
            const widget_element = input.closest('.nbtools');
            let name = widget_element.querySelector('.nbtools-title').textContent;
            if (!name)
                name = "Untitled Widget";
            compatible_inputs.push({
                'name': name,
                'param': param_name,
                'element': input
            });
        });
        return compatible_inputs;
    }
}


/***/ }),

/***/ "./node_modules/@g2nb/nbtools/lib/version.js":
/*!***************************************************!*\
  !*** ./node_modules/@g2nb/nbtools/lib/version.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MODULE_NAME": () => (/* binding */ MODULE_NAME),
/* harmony export */   "MODULE_VERSION": () => (/* binding */ MODULE_VERSION)
/* harmony export */ });
const data = __webpack_require__(/*! ../package.json */ "./node_modules/@g2nb/nbtools/package.json");
/**
 * The html widget manager assumes that this is the same as the npm package
 * version number.
 */
const MODULE_VERSION = data.version;
/*
 * The current package name.
 */
const MODULE_NAME = data.name;


/***/ }),

/***/ "./node_modules/@g2nb/nbtools/style/basewidget.css":
/*!*********************************************************!*\
  !*** ./node_modules/@g2nb/nbtools/style/basewidget.css ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js */ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js");
/* harmony import */ var _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/styleDomAPI.js */ "./node_modules/style-loader/dist/runtime/styleDomAPI.js");
/* harmony import */ var _style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/insertBySelector.js */ "./node_modules/style-loader/dist/runtime/insertBySelector.js");
/* harmony import */ var _style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/setAttributesWithoutAttributes.js */ "./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js");
/* harmony import */ var _style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/insertStyleElement.js */ "./node_modules/style-loader/dist/runtime/insertStyleElement.js");
/* harmony import */ var _style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/styleTagTransform.js */ "./node_modules/style-loader/dist/runtime/styleTagTransform.js");
/* harmony import */ var _style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _css_loader_dist_cjs_js_basewidget_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../../../css-loader/dist/cjs.js!./basewidget.css */ "./node_modules/css-loader/dist/cjs.js!./node_modules/@g2nb/nbtools/style/basewidget.css");

      
      
      
      
      
      
      
      
      

var options = {};

options.styleTagTransform = (_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());
options.setAttributes = (_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());

      options.insert = _style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, "head");
    
options.domAPI = (_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());
options.insertStyleElement = (_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());

var update = _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_css_loader_dist_cjs_js_basewidget_css__WEBPACK_IMPORTED_MODULE_6__["default"], options);




       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_css_loader_dist_cjs_js_basewidget_css__WEBPACK_IMPORTED_MODULE_6__["default"] && _css_loader_dist_cjs_js_basewidget_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals ? _css_loader_dist_cjs_js_basewidget_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals : undefined);


/***/ }),

/***/ "./node_modules/@g2nb/nbtools/style/uibuilder.css":
/*!********************************************************!*\
  !*** ./node_modules/@g2nb/nbtools/style/uibuilder.css ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js */ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js");
/* harmony import */ var _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/styleDomAPI.js */ "./node_modules/style-loader/dist/runtime/styleDomAPI.js");
/* harmony import */ var _style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/insertBySelector.js */ "./node_modules/style-loader/dist/runtime/insertBySelector.js");
/* harmony import */ var _style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/setAttributesWithoutAttributes.js */ "./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js");
/* harmony import */ var _style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/insertStyleElement.js */ "./node_modules/style-loader/dist/runtime/insertStyleElement.js");
/* harmony import */ var _style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/styleTagTransform.js */ "./node_modules/style-loader/dist/runtime/styleTagTransform.js");
/* harmony import */ var _style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _css_loader_dist_cjs_js_uibuilder_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../../../css-loader/dist/cjs.js!./uibuilder.css */ "./node_modules/css-loader/dist/cjs.js!./node_modules/@g2nb/nbtools/style/uibuilder.css");

      
      
      
      
      
      
      
      
      

var options = {};

options.styleTagTransform = (_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());
options.setAttributes = (_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());

      options.insert = _style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, "head");
    
options.domAPI = (_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());
options.insertStyleElement = (_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());

var update = _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_css_loader_dist_cjs_js_uibuilder_css__WEBPACK_IMPORTED_MODULE_6__["default"], options);




       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_css_loader_dist_cjs_js_uibuilder_css__WEBPACK_IMPORTED_MODULE_6__["default"] && _css_loader_dist_cjs_js_uibuilder_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals ? _css_loader_dist_cjs_js_uibuilder_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals : undefined);


/***/ }),

/***/ "./node_modules/@g2nb/nbtools/style/uioutput.css":
/*!*******************************************************!*\
  !*** ./node_modules/@g2nb/nbtools/style/uioutput.css ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js */ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js");
/* harmony import */ var _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/styleDomAPI.js */ "./node_modules/style-loader/dist/runtime/styleDomAPI.js");
/* harmony import */ var _style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/insertBySelector.js */ "./node_modules/style-loader/dist/runtime/insertBySelector.js");
/* harmony import */ var _style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/setAttributesWithoutAttributes.js */ "./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js");
/* harmony import */ var _style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/insertStyleElement.js */ "./node_modules/style-loader/dist/runtime/insertStyleElement.js");
/* harmony import */ var _style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/styleTagTransform.js */ "./node_modules/style-loader/dist/runtime/styleTagTransform.js");
/* harmony import */ var _style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _css_loader_dist_cjs_js_uioutput_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../../../css-loader/dist/cjs.js!./uioutput.css */ "./node_modules/css-loader/dist/cjs.js!./node_modules/@g2nb/nbtools/style/uioutput.css");

      
      
      
      
      
      
      
      
      

var options = {};

options.styleTagTransform = (_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());
options.setAttributes = (_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());

      options.insert = _style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, "head");
    
options.domAPI = (_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());
options.insertStyleElement = (_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());

var update = _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_css_loader_dist_cjs_js_uioutput_css__WEBPACK_IMPORTED_MODULE_6__["default"], options);




       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_css_loader_dist_cjs_js_uioutput_css__WEBPACK_IMPORTED_MODULE_6__["default"] && _css_loader_dist_cjs_js_uioutput_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals ? _css_loader_dist_cjs_js_uioutput_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals : undefined);


/***/ }),

/***/ "./node_modules/@g2nb/nbtools/package.json":
/*!*************************************************!*\
  !*** ./node_modules/@g2nb/nbtools/package.json ***!
  \*************************************************/
/***/ ((module) => {

module.exports = JSON.parse('{"name":"@g2nb/nbtools","version":"22.3.0-beta.2","description":"Framework for creating user-friendly Jupyter notebooks, accessible to both programming and non-programming users alike.","keywords":["jupyter","jupyterlab","jupyterlab-extension","widgets"],"files":["lib/**/*.{js,css}","style/*.{js,css,png,svg}","schema/**/*.json","dist/*.{js,css}","style/index.js"],"homepage":"https://github.com/g2nb/nbtools","bugs":{"url":"https://github.com/g2nb/nbtools/issues"},"license":"BSD-3-Clause","author":{"name":"Thorin Tabor","email":"tmtabor@cloud.ucsd.edu"},"main":"lib/index.js","types":"./lib/index.d.ts","style":"style/index.css","repository":{"type":"git","url":"https://github.com/g2nb/nbtools"},"scripts":{"build":"jlpm run build:lib && jlpm run build:labextension:dev","build:all":"jlpm run build:lib && jlpm run build:labextension && jlpm run build:nbextension","build:labextension":"jupyter labextension build .","build:labextension:dev":"jupyter labextension build --development True .","build:lib":"tsc","build:nbextension":"webpack --mode production","clean":"jlpm run clean:lib","clean:all":"jlpm run clean:lib && jlpm run clean:labextension && jlpm run clean:nbextension","clean:labextension":"rimraf nbtools/labextension","clean:lib":"rimraf lib tsconfig.tsbuildinfo","clean:nbextension":"rimraf nbtools/nbextension/static/index.js","eslint":"eslint . --ext .ts,.tsx --fix","eslint:check":"eslint . --ext .ts,.tsx","install:extension":"jlpm run build","prepack":"jlpm run build:lib","prepare":"jlpm run clean && jlpm run build:all","test":"jlpm run test:firefox","test:chrome":"karma start --browsers=Chrome tests/karma.conf.js","test:debug":"karma start --browsers=Chrome --singleRun=false --debug=true tests/karma.conf.js","test:firefox":"karma start --browsers=Firefox tests/karma.conf.js","test:ie":"karma start --browsers=IE tests/karma.conf.js","watch":"run-p watch:src watch:labextension","watch:labextension":"jupyter labextension watch .","watch:lib":"tsc -w","watch:nbextension":"webpack --watch","watch:src":"tsc -w"},"dependencies":{"@jupyter-widgets/base":"^4.0.0","@jupyterlab/application":"^3.0.4","@jupyterlab/mainmenu":"^3.0.3","@jupyterlab/notebook":"^3.0.4"},"devDependencies":{"@jupyterlab/apputils":"^3.0.3","@jupyterlab/builder":"^3.0.0","@jupyterlab/ui-components":"^3.0.3","@lumino/application":"^1.13.1","@lumino/widgets":"^1.16.1","@types/backbone":"^1.4.4","@types/node":"^14.14.27","@typescript-eslint/eslint-plugin":"^4.8.1","@typescript-eslint/parser":"^4.8.1","backbone":"^1.2.3","css-loader":"^5.2.7","eslint":"^7.14.0","eslint-config-prettier":"^6.15.0","eslint-plugin-prettier":"^3.1.4","expect.js":"^0.3.1","file-loader":"^6.2.0","fs-extra":"^9.1.0","karma":"^6.1.1","karma-typescript":"^5.3.0","mkdirp":"^1.0.4","mocha":"^8.3.0","npm-run-all":"^4.1.5","prettier":"^2.1.1","rimraf":"^3.0.2","source-map-loader":"^2.0.1","style-loader":"^2.0.0","ts-loader":"^8.0.17","typescript":"~4.1.3","webpack":"^5.21.2","webpack-cli":"^4.5.0"},"jupyterlab":{"extension":"lib/plugin","schemaDir":"schema","sharedPackages":{"@jupyter-widgets/base":{"bundled":false,"singleton":true}},"discovery":{"kernel":[{"kernel_spec":{"language":"^python"},"base":{"name":"nbtools"},"managers":["pip","conda"]}]},"outputDir":"nbtools/labextension"},"styleModule":"style/index.js"}');

/***/ })

}]);
//# sourceMappingURL=vendors-node_modules_g2nb_nbtools_lib_index_js.c55837945499ab1025c1.js.map