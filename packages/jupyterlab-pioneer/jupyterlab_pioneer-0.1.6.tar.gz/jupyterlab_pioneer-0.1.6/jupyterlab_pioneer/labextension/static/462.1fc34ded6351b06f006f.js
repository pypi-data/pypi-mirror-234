"use strict";(self.webpackChunkjupyterlab_pioneer=self.webpackChunkjupyterlab_pioneer||[]).push([[462],{462:(e,n,t)=>{t.r(n),t.d(n,{IJupyterLabPioneer:()=>x,default:()=>k});var o=t(829),i=t(930),s=t(65),l=t(856);async function a(e="",n={}){const t=l.ServerConnection.makeSettings(),o=s.URLExt.join(t.baseUrl,"jupyterlab-pioneer",e);let i;try{i=await l.ServerConnection.makeRequest(o,n,t)}catch(e){throw new l.ServerConnection.NetworkError(e)}let a=await i.text();if(a.length>0)try{a=JSON.parse(a)}catch(e){console.log("Not a JSON response body.",i)}if(!i.ok)throw new l.ServerConnection.ResponseError(i,a.message||a);return a}class c{constructor(){this.produced=!1}async listen(e,n,t){if(!this.produced){const o={eventName:c.id,eventTime:Date.now(),eventInfo:{environ:await a("environ")}};await n.publishEvent(e,o,t),this.produced=!0}}}c.id="NotebookOpenEvent";const d=e=>{const n=[];for(let t=0;t<e.content.widgets.length;t++){const o=e.content.widgets[t],i=o.node.offsetTop,s=o.node.offsetTop+o.node.offsetHeight,l=e.content.node.scrollTop;i<=e.content.node.scrollTop+e.content.node.clientHeight&&s>=l&&n.push({id:o.model.id,index:t})}return n};class v{constructor(){this.timeout=0}listen(e,n,t){e.content.node.addEventListener("scroll",(async o=>{o.stopPropagation(),clearTimeout(this.timeout),await new Promise((e=>this.timeout=window.setTimeout(e,1500)));const i={eventName:v.id,eventTime:Date.now(),eventInfo:{cells:d(e)}};await n.publishEvent(e,i,t)}))}}v.id="NotebookScrollEvent";class r{listen(e,n,t){document.addEventListener("visibilitychange",(async()=>{if("visible"===document.visibilityState&&document.contains(e.node)){const o={eventName:r.id,eventTime:Date.now(),eventInfo:{cells:d(e)}};await n.publishEvent(e,o,t)}}))}}r.id="NotebookVisibleEvent";class u{listen(e,n,t){document.addEventListener("visibilitychange",(async o=>{if("hidden"===document.visibilityState&&document.contains(e.node)){const o={eventName:u.id,eventTime:Date.now(),eventInfo:null};await n.publishEvent(e,o,t)}}))}}u.id="NotebookHiddenEvent";class w{listen(e,n,t){e.node.addEventListener("copy",(async()=>{var o,i;const s={id:null===(o=e.content.activeCell)||void 0===o?void 0:o.model.id,index:e.content.widgets.findIndex((n=>n===e.content.activeCell))},l=null===(i=document.getSelection())||void 0===i?void 0:i.toString(),a={eventName:w.id,eventTime:Date.now(),eventInfo:{cells:[s],selection:l}};await n.publishEvent(e,a,t)}))}}w.id="ClipboardCopyEvent";class m{listen(e,n,t){e.node.addEventListener("cut",(async()=>{var o,i;const s={id:null===(o=e.content.activeCell)||void 0===o?void 0:o.model.id,index:e.content.widgets.findIndex((n=>n===e.content.activeCell))},l=null===(i=document.getSelection())||void 0===i?void 0:i.toString(),a={eventName:m.id,eventTime:Date.now(),eventInfo:{cells:[s],selection:l}};await n.publishEvent(e,a,t)}))}}m.id="ClipboardCutEvent";class p{listen(e,n,t){e.node.addEventListener("paste",(async o=>{var i;const s={id:null===(i=e.content.activeCell)||void 0===i?void 0:i.model.id,index:e.content.widgets.findIndex((n=>n===e.content.activeCell))},l=(o.clipboardData||window.clipboardData).getData("text"),a={eventName:p.id,eventTime:Date.now(),eventInfo:{cells:[s],selection:l}};await n.publishEvent(e,a,t)}))}}p.id="ClipboardPasteEvent";class b{listen(e,n,t){e.content.activeCellChanged.connect((async(o,i)=>{if(i&&e.content.widgets){const o={id:null==i?void 0:i.model.id,index:e.content.widgets.findIndex((e=>e===i))},s={eventName:b.id,eventTime:Date.now(),eventInfo:{cells:[o]}};await n.publishEvent(e,s,t)}}))}}b.id="ActiveCellChangeEvent";class h{listen(e,n,t){e.context.saveState.connect((async(o,i)=>{if(i.match("completed")){const o={eventName:h.id,eventTime:Date.now(),eventInfo:null};await n.publishEvent(e,o,t)}}))}}h.id="NotebookSaveEvent";class f{listen(e,n,t){o.NotebookActions.executed.connect((async(o,i)=>{if(e.content===i.notebook){const o={id:i.cell.model.id,index:i.notebook.widgets.findIndex((e=>e==i.cell))},s={eventName:f.id,eventTime:Date.now(),eventInfo:{cells:[o],success:i.success,kernelError:i.success?null:i.error}};await n.publishEvent(e,s,t)}}))}}f.id="CellExecuteEvent";class E{listen(e,n,t){var o;null===(o=e.content.model)||void 0===o||o.cells.changed.connect((async(o,i)=>{if("add"===i.type){const o={id:i.newValues[0].id,index:i.newIndex},s={eventName:E.id,eventTime:Date.now(),eventInfo:{cells:[o]}};await n.publishEvent(e,s,t)}}))}}E.id="CellAddEvent";class g{listen(e,n,t){var o;null===(o=e.content.model)||void 0===o||o.cells.changed.connect((async(o,i)=>{if("remove"===i.type){const o={newIndex:i.newIndex,oldIndex:i.oldIndex},s={eventName:g.id,eventTime:Date.now(),eventInfo:{cells:[o]}};await n.publishEvent(e,s,t)}}))}}g.id="CellRemoveEvent";const y=[c,v,r,u,w,m,p,b,h,f,E,g],C="jupyterlab-pioneer:plugin",x=new i.Token(C);class N{async publishEvent(e,n,t){var o,i;if(!e)throw Error("router is listening to a null notebook panel");const s={eventDetail:n,notebookState:{sessionID:null===(o=null==e?void 0:e.sessionContext.session)||void 0===o?void 0:o.id,notebookPath:null==e?void 0:e.context.path,notebookContent:t?null===(i=null==e?void 0:e.model)||void 0===i?void 0:i.toJSON():null}},l=await a("export",{method:"POST",body:JSON.stringify(s)});console.log(l)}}const k={id:C,autoStart:!0,requires:[o.INotebookTracker],provides:x,activate:async(e,n)=>{const t=await a("version");console.log(`${C}: ${t}`);const o=await a("config"),i=new N;return n.widgetAdded.connect((async(e,n)=>{await n.revealed,await n.sessionContext.ready,y.forEach((e=>{o.activeEvents.includes(e.id)&&(new e).listen(n,i,o.logNotebookContentEvents.includes(e.id))}))})),i}}}}]);