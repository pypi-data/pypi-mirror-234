"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import matrixvalue as shared_matrixvalue
from billing import utils
from dataclasses_json import Undefined, dataclass_json
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class MatrixConfig:
    r"""Provided when model_type is `matrix`"""
    dimensions: list[str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dimensions') }})
    r"""First and (optional) second dimension grouping keys"""
    matrix_values: list[shared_matrixvalue.MatrixValue] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('matrix_values') }})
    default_unit_amount: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('default_unit_amount'), 'exclude': lambda f: f is None }})
    

