"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from ..shared import canceloption as shared_canceloption
from billing import utils
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class SubscriptionCancellation:
    cancel_option: shared_canceloption.CancelOption = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cancel_option') }})
    r"""Determines the timing of subscription cancellation"""
    cancellation_date: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cancellation_date'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'exclude': lambda f: f is None }})
    r"""The date that the cancellation should take effect. This parameter can only be passed if the `cancel_option` is `requested_date`."""
    

