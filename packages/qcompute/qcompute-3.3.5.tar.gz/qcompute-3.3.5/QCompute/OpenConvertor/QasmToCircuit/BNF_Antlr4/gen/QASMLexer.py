# Generated from C:/Project/Quantum/QCompute/QCompute/OpenConvertor/QasmToCircuit/BNF_Antlr4\QASM.g4 by ANTLR 4.10.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,37,254,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,1,0,1,0,1,1,1,1,1,1,1,
        1,1,1,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,5,1,
        5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,7,1,7,1,8,1,8,1,8,1,
        8,1,8,1,9,1,9,1,10,1,10,1,11,1,11,1,11,1,11,1,11,1,12,1,12,1,12,
        1,12,1,12,1,13,1,13,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,15,
        1,15,1,15,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,17,1,17,1,18,
        1,18,1,18,1,19,1,19,1,20,1,20,1,21,1,21,1,22,1,22,1,23,1,23,1,24,
        1,24,1,24,1,24,1,25,1,25,1,25,1,25,1,26,1,26,1,26,1,26,1,27,1,27,
        1,27,1,27,1,28,1,28,1,28,1,29,1,29,1,29,1,29,1,29,1,30,1,30,5,30,
        191,8,30,10,30,12,30,194,9,30,1,31,1,31,1,31,4,31,199,8,31,11,31,
        12,31,200,1,31,1,31,3,31,205,8,31,1,31,4,31,208,8,31,11,31,12,31,
        209,3,31,212,8,31,1,32,3,32,215,8,32,1,32,4,32,218,8,32,11,32,12,
        32,219,1,33,4,33,223,8,33,11,33,12,33,224,1,33,1,33,1,34,1,34,1,
        34,1,34,5,34,233,8,34,10,34,12,34,236,9,34,1,34,1,34,1,34,1,35,1,
        35,1,35,1,35,5,35,245,8,35,10,35,12,35,248,9,35,1,36,4,36,251,8,
        36,11,36,12,36,252,1,234,0,37,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,
        17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,
        39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,
        61,31,63,32,65,33,67,34,69,35,71,36,73,37,1,0,8,3,0,65,90,95,95,
        97,122,4,0,48,57,65,90,95,95,97,122,1,0,48,57,2,0,69,69,101,101,
        2,0,43,43,45,45,3,0,9,10,12,13,32,32,2,0,10,10,13,13,5,0,46,46,48,
        57,65,90,95,95,97,122,264,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,
        7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,
        1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,
        1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,
        1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,
        1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,
        1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,
        1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,1,75,1,0,0,0,3,77,
        1,0,0,0,5,84,1,0,0,0,7,86,1,0,0,0,9,88,1,0,0,0,11,90,1,0,0,0,13,
        99,1,0,0,0,15,107,1,0,0,0,17,109,1,0,0,0,19,114,1,0,0,0,21,116,1,
        0,0,0,23,118,1,0,0,0,25,123,1,0,0,0,27,128,1,0,0,0,29,130,1,0,0,
        0,31,138,1,0,0,0,33,141,1,0,0,0,35,149,1,0,0,0,37,151,1,0,0,0,39,
        154,1,0,0,0,41,156,1,0,0,0,43,158,1,0,0,0,45,160,1,0,0,0,47,162,
        1,0,0,0,49,164,1,0,0,0,51,168,1,0,0,0,53,172,1,0,0,0,55,176,1,0,
        0,0,57,180,1,0,0,0,59,183,1,0,0,0,61,188,1,0,0,0,63,195,1,0,0,0,
        65,214,1,0,0,0,67,222,1,0,0,0,69,228,1,0,0,0,71,240,1,0,0,0,73,250,
        1,0,0,0,75,76,5,125,0,0,76,2,1,0,0,0,77,78,5,111,0,0,78,79,5,112,
        0,0,79,80,5,97,0,0,80,81,5,113,0,0,81,82,5,117,0,0,82,83,5,101,0,
        0,83,4,1,0,0,0,84,85,5,59,0,0,85,6,1,0,0,0,86,87,5,40,0,0,87,8,1,
        0,0,0,88,89,5,41,0,0,89,10,1,0,0,0,90,91,5,79,0,0,91,92,5,80,0,0,
        92,93,5,69,0,0,93,94,5,78,0,0,94,95,5,81,0,0,95,96,5,65,0,0,96,97,
        5,83,0,0,97,98,5,77,0,0,98,12,1,0,0,0,99,100,5,105,0,0,100,101,5,
        110,0,0,101,102,5,99,0,0,102,103,5,108,0,0,103,104,5,117,0,0,104,
        105,5,100,0,0,105,106,5,101,0,0,106,14,1,0,0,0,107,108,5,34,0,0,
        108,16,1,0,0,0,109,110,5,113,0,0,110,111,5,114,0,0,111,112,5,101,
        0,0,112,113,5,103,0,0,113,18,1,0,0,0,114,115,5,91,0,0,115,20,1,0,
        0,0,116,117,5,93,0,0,117,22,1,0,0,0,118,119,5,99,0,0,119,120,5,114,
        0,0,120,121,5,101,0,0,121,122,5,103,0,0,122,24,1,0,0,0,123,124,5,
        103,0,0,124,125,5,97,0,0,125,126,5,116,0,0,126,127,5,101,0,0,127,
        26,1,0,0,0,128,129,5,123,0,0,129,28,1,0,0,0,130,131,5,109,0,0,131,
        132,5,101,0,0,132,133,5,97,0,0,133,134,5,115,0,0,134,135,5,117,0,
        0,135,136,5,114,0,0,136,137,5,101,0,0,137,30,1,0,0,0,138,139,5,45,
        0,0,139,140,5,62,0,0,140,32,1,0,0,0,141,142,5,98,0,0,142,143,5,97,
        0,0,143,144,5,114,0,0,144,145,5,114,0,0,145,146,5,105,0,0,146,147,
        5,101,0,0,147,148,5,114,0,0,148,34,1,0,0,0,149,150,5,44,0,0,150,
        36,1,0,0,0,151,152,5,112,0,0,152,153,5,105,0,0,153,38,1,0,0,0,154,
        155,5,43,0,0,155,40,1,0,0,0,156,157,5,45,0,0,157,42,1,0,0,0,158,
        159,5,42,0,0,159,44,1,0,0,0,160,161,5,47,0,0,161,46,1,0,0,0,162,
        163,5,94,0,0,163,48,1,0,0,0,164,165,5,115,0,0,165,166,5,105,0,0,
        166,167,5,110,0,0,167,50,1,0,0,0,168,169,5,99,0,0,169,170,5,111,
        0,0,170,171,5,115,0,0,171,52,1,0,0,0,172,173,5,116,0,0,173,174,5,
        97,0,0,174,175,5,110,0,0,175,54,1,0,0,0,176,177,5,101,0,0,177,178,
        5,120,0,0,178,179,5,112,0,0,179,56,1,0,0,0,180,181,5,108,0,0,181,
        182,5,110,0,0,182,58,1,0,0,0,183,184,5,115,0,0,184,185,5,113,0,0,
        185,186,5,114,0,0,186,187,5,116,0,0,187,60,1,0,0,0,188,192,7,0,0,
        0,189,191,7,1,0,0,190,189,1,0,0,0,191,194,1,0,0,0,192,190,1,0,0,
        0,192,193,1,0,0,0,193,62,1,0,0,0,194,192,1,0,0,0,195,196,3,65,32,
        0,196,198,5,46,0,0,197,199,7,2,0,0,198,197,1,0,0,0,199,200,1,0,0,
        0,200,198,1,0,0,0,200,201,1,0,0,0,201,211,1,0,0,0,202,204,7,3,0,
        0,203,205,7,4,0,0,204,203,1,0,0,0,204,205,1,0,0,0,205,207,1,0,0,
        0,206,208,7,2,0,0,207,206,1,0,0,0,208,209,1,0,0,0,209,207,1,0,0,
        0,209,210,1,0,0,0,210,212,1,0,0,0,211,202,1,0,0,0,211,212,1,0,0,
        0,212,64,1,0,0,0,213,215,7,4,0,0,214,213,1,0,0,0,214,215,1,0,0,0,
        215,217,1,0,0,0,216,218,7,2,0,0,217,216,1,0,0,0,218,219,1,0,0,0,
        219,217,1,0,0,0,219,220,1,0,0,0,220,66,1,0,0,0,221,223,7,5,0,0,222,
        221,1,0,0,0,223,224,1,0,0,0,224,222,1,0,0,0,224,225,1,0,0,0,225,
        226,1,0,0,0,226,227,6,33,0,0,227,68,1,0,0,0,228,229,5,47,0,0,229,
        230,5,42,0,0,230,234,1,0,0,0,231,233,9,0,0,0,232,231,1,0,0,0,233,
        236,1,0,0,0,234,235,1,0,0,0,234,232,1,0,0,0,235,237,1,0,0,0,236,
        234,1,0,0,0,237,238,5,42,0,0,238,239,5,47,0,0,239,70,1,0,0,0,240,
        241,5,47,0,0,241,242,5,47,0,0,242,246,1,0,0,0,243,245,8,6,0,0,244,
        243,1,0,0,0,245,248,1,0,0,0,246,244,1,0,0,0,246,247,1,0,0,0,247,
        72,1,0,0,0,248,246,1,0,0,0,249,251,7,7,0,0,250,249,1,0,0,0,251,252,
        1,0,0,0,252,250,1,0,0,0,252,253,1,0,0,0,253,74,1,0,0,0,12,0,192,
        200,204,209,211,214,219,224,234,246,252,1,6,0,0
    ]

class QASMLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    ID = 31
    REAL = 32
    INT = 33
    WS = 34
    COMMENT = 35
    LINE_COMMENT = 36
    FILE_NAME = 37

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'}'", "'opaque'", "';'", "'('", "')'", "'OPENQASM'", "'include'", 
            "'\"'", "'qreg'", "'['", "']'", "'creg'", "'gate'", "'{'", "'measure'", 
            "'->'", "'barrier'", "','", "'pi'", "'+'", "'-'", "'*'", "'/'", 
            "'^'", "'sin'", "'cos'", "'tan'", "'exp'", "'ln'", "'sqrt'" ]

    symbolicNames = [ "<INVALID>",
            "ID", "REAL", "INT", "WS", "COMMENT", "LINE_COMMENT", "FILE_NAME" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "ID", "REAL", "INT", 
                  "WS", "COMMENT", "LINE_COMMENT", "FILE_NAME" ]

    grammarFileName = "QASM.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.10.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


