[tool.poetry]
name = "openai-func-call"
version = "0.1.0"
description = "Easily pass python functions to openai function calling."
authors = ["Joscha Gutjahr <lockomoto@googlemail.com>"]
license = "MIT License"
readme = "README.md"
packages = [{include = "openai_func_call", from = "src"}]

[tool.poetry.dependencies]
python = "^3.9"
pydantic = "^1.10.9"
docstring-parser = "^0.15"
case-converter = "^1.1.0"


[tool.poetry.group.dev.dependencies]
openai = "^0.27.8"
ruff = "^0.0.287"
black = "^23.9.0"
pre-commit = "^3.4.0"
pytest = "^7.4.2"
mkdocs-material = {extras = ["imaging"], version = "^9.4.0"}
mkdocstrings = {extras = ["python"], version = "^0.23.0"}

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 120
target-version = ["py38"]

[tool.ruff]
# Enable the pycodestyle (`E`) and Pyflakes (`F`) rules by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E", "F", "W", "I001"]
ignore = []

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

per-file-ignores = { "__init__.py" = ["F401"] }

# Same as Black.
line-length = 120

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Assume Python 3.8
target-version = "py38"

[tool.ruff.isort]
#profile = "black"
order-by-type = true
known-first-party = ["openai_func_call"]
forced-separate = ["tests"]
